{"version":3,"sources":["services/storage.js","services/network.js","redux/login/actions.js","redux/login/reducer.js","redux/home/actions.js","redux/home/reducer.js","redux/components/action.js","redux/employees/action.js","redux/employees/reducer.js","redux/components/reducer.js","redux/history/action.js","redux/history/reducer.js","redux/suggestion/action.js","redux/suggestion/reducer.js","redux/lines/action.js","redux/lines/reducer.js","redux/devices/action.js","redux/devices/reducer.js","redux/news/action.js","redux/news/reducer.js","redux/reducers.js","redux/index.js","pages/login/styles.js","pages/login/components/fieldsLogin.js","pages/login/components/fieldsRegister.js","pages/login/components/forgotPassword.js","pages/login/login.js","style/global.js","components/dialog.js","pages/home/style.js","utils/constants.js","components/Drawer.js","components/AppBar.js","components/CustomDialog.js","components/status.js","pages/employess/employees.js","pages/account/account.js","pages/auth/auth.js","pages/history/history.js","components/Map.js","pages/maps/styles.js","services/mqtt.js","pages/maps/maps.js","pages/devices/components/firstStep.js","pages/suggestion/components/styles.js","pages/suggestion/components/talk.js","pages/suggestion/suggestion.js","pages/devices/components/style.js","pages/devices/components/deviceList.js","components/dialogRadio.js","pages/devices/components/secondStep.js","pages/devices/components/addDevice.js","pages/devices/devices.js","pages/home/components/Comments.js","pages/lines/styles.js","pages/lines/components/list.js","components/dialogInput.js","pages/lines/components/horary.js","pages/lines/components/add.js","pages/lines/lines.js","pages/news/styles.js","pages/news/components/list.js","pages/news/components/add.js","pages/news/news.js","components/loading.js","pages/home/components/Card.js","pages/home/components/InformationLine.js","pages/home/components/Dashboard.js","pages/home/home.js","App.js","serviceWorker.js","index.js","assets/google-maps.png","assets/connected_world.svg","assets/logo.png","assets/bus.png"],"names":["storage","getUser","data","localStorage","getItem","user","JSON","parse","jwtDecode","token","saveUser","setItem","stringify","getToken","removeUser","removeItem","instance","axios","create","baseURL","timeout","headers","Content-Type","interceptors","request","use","config","Authorization","CancelToken","type","handleLoading","value","payload","handleResponse","response","INITAL_STATE","isLoading","login","state","arguments","length","undefined","action","Object","objectSpread","handleLoadingTotalUsers","handleErrorTotalUsers","handleLoadingTotalDevices","handleErrorTotalDevices","handleLoadingTotalLines","handleErrorTotalLines","handleLoadingScore","handleErrorScore","handleUser","deleteUserFromNotAuthorized","INITIAL_STATE","totalUsers","isLoadingTotalUsers","errorLoadTotalUsers","totalDevices","isLoadingTotalDevices","errorLoadTotalDevices","totalLines","isLoadingTotalLines","errorLoadTotalLines","usersNotAuthorized","name","email","role","score","isLoadingScore","errorToLoadScore","types","UPDATE_COMPONENT_LOADING","updateLoading","handleReducer","INIT_STATE","docs","total","limit","page","pages","loading","suggestion","lineEdited","updateDevices","updateErrorLines","requestLines","error","console","log","dispatch","network","get","then","catch","e","open","lines","errorToLoadLines","devices","currentDevice","newsEdit","reducers","combineReducers","home","toConsumableArray","filter","_id","employee","component","history","line","device","news","store","createStore","applyMiddleware","thunk","styles","makeStyles","root","minHeight","contentLogo","color","flex","fontFamily","@media (max-width: 1200px)","display","background","concat","backgroundImage","backgroundSize","position","tabs","marginBottom","fields","textTab","fontSize","textPresent","textFields","margin","contentForgotPassword","width","height","linearProgress","top","left","addMarginBottom","content","padding","backgroundFilter","bottom","right","FieldsLogin","_ref","onClick","onClickRecoverPassword","useEffect","callback","key","verifyUser","document","addEventListener","removeEventListener","classes","createStyle","_useState","useState","password","_useState2","slicedToArray","setUser","handleInput","target","event","defineProperty","keyCode","_","react_default","a","createElement","Fragment","Grid","className","container","direction","TextField","onChange","label","placeholder","justify","Button","disabled","variant","FieldsRegister","cpf","confirmPassword","react_input_mask_default","mask","props","assign","ForgotPassword","setEmail","item","ev","recoverPassword","goBack","connect","requestLogin","success","post","createAccount","setState","handleChange","newValue","theme","useTheme","handleChangeIndex","index","push","registerUser","toast","autoClose","wrap","LinearProgress","alignItems","Typography","style","zIndex","react_router","path","match","url","exact","render","Tabs","indicatorColor","textColor","Tab","react_swipeable_views_lib_default","axis","onChangeIndex","fieldsLogin","fieldsRegister","forgotPassword","from","to","maxContainer","marginVertical","maxWidth","maxHeight","TransitionSlide","React","forwardRef","ref","Slide","CustomDialog","Dialog","TransitionComponent","transition","buildTransition","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","negativeAction","negativeButton","positiveAction","positiveButton","appBar","boxShadow","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","toolbar","backgroundColor","borderBottom","flexGrow","paper","border","contentShift","result","contentIcon","contentInformation","icon","borderRadius","popoverHeader","image","backgroundRepeat","backgroundPosition","removePadding","contentCard","card","marginTop","drawer","flexShrink","drawerPaper","EMPLOYEE_ROLE","COMMON","ADMIN","USER_STATUS","ENABLED","PENDING","NOT_AUTHORIZED","ROUTES","HOME","EMPLOYEES","ACCOUNT","HISTORY","SUGGESTION","DEVICES","ADD_DEVICES","LINES","ADD_LINES","MAP","LOGIN","NEWS","ADD_NEWS","header","listItem","cursor","borderLeft","&:hover","&:hover $icon","activeRoute","listItemText","fontWeight","listItemActive","iconActive","minWidth","list","paddingLeft","img","withRouter","useSelector","pathname","location","classesLocal","isAdmin","items","Dashboard","text","show","isActive","includes","handleRoute","Map","AccountBox","People","esm_History","QuestionAnswer","LocationOn","Directions","Drafts","route","Drawer","anchor","Divider","src","LOGO","alt","List","map","ListItem","toString","clsx","ListItemIcon","ListItemText","_titles","titles","createStyleLocal","setOpen","_useState3","_useState4","openDrawer","setDrawer","_useState5","_useState6","anchorEl","setAnchorEl","size","handleClose","handleDrawer","onDrawer","AppBar","Toolbar","IconButton","edge","menuButton","aria-label","Close","Menu","currentTarget","Badge","badgeContent","Notifications","ExitToApp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onSelectedUser","button","primary","secondary","ListItemSecondaryAction","ChevronRight","components_Drawer","field","information","checkBox","useDispatch","setValue","setLoading","requestServer","body","status","cb","loadingGlobal","patch","Checkbox","checked","messageCheckBox","CircularProgress","Status","Role","_ref2","tableWrapper","overflowX","rightIcon","spacing","input","tableCellFooter","paddingRight","requestEmployees","typesLoading","URI","removeEmployee","delete","subject","Subject","pipe","debounceTime","subscribe","setText","openCustomDialog","setOpenCustomDialog","_useState7","_useState8","complete","next","InputProps","startAdornment","InputAdornment","Search","Paper","Table","TableHead","TableRow","TableCell","TableBody","hover","status_Status","status_Role","stopPropagation","Delete","TableFooter","TablePagination","labelDisplayedRows","count","rowsPerPage","rowsPerPageOptions","onChangePage","components_dialog","components_CustomDialog","contentPadding","contentButton","Account","auth","REDIRECT_TO_LOGIN","REDIRECT_TO_MAP","RENDER_CHILDREN","storageUser","onlyToken","getRedirectRoute","children","requestHistories","reason","Date","createdAt","toLocaleString","compose","withProps","googleMapURL","center","lat","lng","loadingElement","containerElement","mapElement","withScriptjs","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","filterBtn","contentMap","clientId","Math","random","substr","client","username","on","requestAllDevices","requestDeviceById","load","setLoad","controller","setController","createLocalStyle","onMessage","topic","endsWith","split","stateDevices","getState","deviceFound","find","uuid","String","latitude","longitude","lon","_unused","window","initMap","google","mqtt","addListener","removeListener","unsubscribe","components_Map","lineNumber","lineDescription","MarkerWithLabel_default","BUS","scaledSize","maps","Size","labelAnchor","Point","labelStyle","buildMarker","directions","routes","geodesic","options","strokeColor","strokeWeight","buildRoute","points","point","buildPoints","buildDrawer","subscription","contentTitle","& h3","contentTalk","contentMessages","overflowY","contentInputMessage","footer","contentField","flexDirection","justifyContent","contentList","cardMessage","& p","contentRight","date","fontStyle","contentTime","getSuggestionById","removeMessage","params","entity","listRef","useRef","_createMessage","asyncToGenerator","regenerator_default","mark","_callee","_context","prev","by","onModel","t0","stop","apply","this","scrollHeight","current","clientHeight","maxScrollTop","scrollTop","messages","Input","multiline","maxLength","disableUnderline","Send","requestSuggestions","renderFooter","align","talk","& h2","colorPositive","colors","green","A700","colorNegative","red","textResult","inputSearch","fab","requestDevices","removeDevice","dist_default","search","actionsColumnIndex","localization","actions","emptyDataSourceMessage","filterRow","filterTooltip","editRow","deleteText","searchTooltip","searchPlaceholder","components","Pagination","columns","editable","min","onRowClick","onRowUpdate","newData","Promise","resolve","put","updateDevice","onRowDelete","oldData","Fab","Add","CONNECTED","DISCONNECTED","CONNECTING","firstStep","_clsx","setStatus","time","setDevice","publish","timer","info","finishProccess","dialogRadio","valueProp","textCancel","textConfirm","other","objectWithoutProperties","_React$useState","_React$useState2","radioGroupRef","disableBackdropClick","disableEscapeKeyDown","onEntering","focus","dividers","RadioGroup","option","FormControlLabel","control","Radio","number","description","updateName","openDialog","clear","createDevice","li","buildResult","steps","AddDevice","step","Stepper","activeStep","Step","StepLabel","secondStep","cancel","devices_devices","DeviceList","inputLine","contentBlockMap","contentFields","addIconField","iconRemove","&:hover $iconHiddenRemove","visibility","iconHiddenRemove","contentContainerMap","buttonSave","& svg","marginRight","removeLine","dialogInput","autoFocus","fullWidth","onCancel","onConfirm","textButton","createStyles","chip","components_horary","tab","setTab","setDate","mondayToSaturday","sundayAndHoliday","horary","setHorary","sortHorary","values","sort","b","Number","join","old","onOpen","centered","MuiPickersUtilsProvider","utils","DateFnsUtils","TimePicker","okLabel","cancelLabel","hour","getHours","minutes","getMinutes","filterDate","timeString","padStart","some","Chip","onDelete","newHorary","splice","createLine","getLineById","editLine","globalStyle","localStyles","refDirections","setDirections","errorLine","errorDescription","setInformation","setRoutes","_useState9","_useState10","markers","setMarkers","_useState11","_useState12","dialog","setDialog","_useState13","_useState14","_useState15","_useState16","openDialogHorary","setOpenDialogHorary","filterRoute","query","LatLng","buildRoutes","every","DirectionService","DirectionsService","origin","destination","waypoints","stopover","optimizeWaypoints","travelMode","TravelMode","DRIVING","avoidTolls","DirectionsStatus","OK","NOT_FOUND","keys","inputProps","helperText","newRoutes","endAdornment","i","Clear","AddCircle","latLng","marker","showOverlayView","draggable","callbackCloseOverlay","newMarkers","clickable","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","buildMarkers","formOk","getDirections","overview_path","callbackError","saveLine","Save","lines_lines","inputRegisterNews","textMessage","requestNews","removeNews","author","parser","createNews","editNews","getNewsById","clearNewsEdit","localClasses","EditorState","createEmpty","editorState","setEditorState","setTitle","_props$newsEdit","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","react_draft_wysiwyg","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","callbackSuccess","news_news","components_loading","Card","buttonError","styleIcon","textColors","styleCard","xs","sm","md","lg","xl","bundle_default","circle","Replay","Icon","Comments","comment","setComment","star","idLine","cancelToken","c","fullScreen","oldTab","sc","stars","StarRate","buildStar","requestScore","DEFAULT_VALUE","setOpenDialog","comments","setComments","setValueFilter","getScore","react_chartjs_2_es","datasets","labels","components_Comments","requestTotalUsers","requestTotalDevices","requestTotalLines","globalClasses","createGlobalStyle","components_Card","components_InformationLine","requestEmployeeToEnable","requestUser","logout","redirect","setRedirect","handleCloseCustomDialog","components_AppBar","Maps","Employee","History","Suggestion","Devices","Lines","News","App","configure","POSITION","BOTTOM_CENTER","react_redux_es","react_router_dom","Login","Home","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8a9b6c8a.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\r\n\r\nexport default {\r\n    getUser() {\r\n        const data = localStorage.getItem('user')\r\n        if (data) {\r\n            const user = JSON.parse(data)\r\n            return jwtDecode(user.token)\r\n        }\r\n        return null\r\n    },\r\n    saveUser(user) {\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n    },\r\n    getToken() {\r\n        const data = localStorage.getItem('user')\r\n        if (data) {\r\n            return JSON.parse(data).token\r\n        }\r\n    },\r\n    removeUser() {\r\n        localStorage.removeItem('user')\r\n    }\r\n}","import axios from 'axios'\r\nimport storage from './storage'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://ec2-18-228-196-51.sa-east-1.compute.amazonaws.com:3001/',\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n})\r\n\r\ninstance.interceptors.request.use(config => {\r\n    config.headers.Authorization = storage.getToken()\r\n    return config\r\n})\r\n\r\nexport const CancelToken = axios.CancelToken\r\n\r\nexport default instance","import network from '../../services/network'\r\nimport storage from '../../services/storage'\r\n\r\nexport const type = {\r\n    LOADING: 'LOADING',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n}\r\n\r\nexport const requestLogin = (user, success, error) => dispatch => {\r\n    dispatch(handleLoading(true))\r\n    network.post('auth/employee', user)\r\n    .then(response => {\r\n        dispatch(handleLoading(false))\r\n        dispatch(handleResponse(response))\r\n        storage.saveUser(response.data)\r\n        success()\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleLoading(false))\r\n        if (e.response) {\r\n            error('Sem permissão para acesso')\r\n        } else {\r\n            error('Falha de comunicação com o servidor')\r\n        }\r\n    })\r\n}\r\n\r\nexport const createAccount = (user, success, error) => dispatch => {\r\n    dispatch(handleLoading(true))\r\n    network.post('employee', user)\r\n    .then(_ => {\r\n        dispatch(handleLoading(false))\r\n        success()\r\n    })\r\n    .catch(_ => {\r\n        dispatch(handleLoading(false))\r\n        error('Error ao criar conta')\r\n    })\r\n}\r\n\r\nexport const recoverPassword = (email, success, error) => dispatch => {\r\n    dispatch(handleLoading(true))\r\n    network.post('employee/recover-password', { email })\r\n    .then(_ => {\r\n        dispatch(handleLoading(false))\r\n        success()\r\n    })\r\n    .catch(_ => {\r\n        dispatch(handleLoading(false))\r\n        error('Error ao recuperar senha')\r\n    })\r\n}\r\n\r\nconst handleLoading = value => ({\r\n    type: type.LOADING,\r\n    payload: { value }\r\n})\r\n\r\nconst handleResponse = response => ({\r\n    type: type.LOGIN_SUCCESS,\r\n    payload: {\r\n        value: response.data.token\r\n    }\r\n})\r\n\r\n","import { type } from './actions'\r\n\r\nconst INITAL_STATE = {\r\n    isLoading: false,\r\n    token: '',\r\n}\r\n\r\nconst login = (state = INITAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case type.LOGIN_SUCCESS:\r\n            return { ...state, token: action.payload.value }\r\n        case type.LOADING:\r\n            return { ...state, isLoading: action.payload.value }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default login","import network from '../../services/network'\r\nimport storage from '../../services/storage'\r\n\r\nexport const type = {\r\n    LOADING_TOTAL_USERS: 'LOADING_TOTAL_USERS',\r\n    TOTAL_USERS: 'TOTAL_USERS',\r\n    ERROR_LOAD_TOTAL_USERS: 'ERROR_LOAD_TOTAL_USERS',\r\n    TOTAL_DEVICES: 'TOTAL_DEVICES',\r\n    ERROR_LOAD_TOTAL_DEVICES: 'ERROR_LOAD_TOTAL_DEVICES',\r\n    LOADING_TOTAL_DEVICES: 'LOADING_TOTAL_DEVICES',\r\n    TOTAL_LINES: 'TOTAL_LINES',\r\n    ERROR_LOAD_TOTAL_LINES: 'ERROR_LOAD_TOTAL_LINES',\r\n    LOADING_TOTAL_LINES: 'LOADING_TOTAL_LINES',\r\n    USERS_NOT_AUTHORIZED: 'USERS_NOT_AUTHORIZED',\r\n    UPDATE_USER: 'UPDATE_USER',\r\n    UPDATE_SCORE: 'UPDATE_SCORE',\r\n    LOADING_SCORE: 'LOADING_SCORE',\r\n    ERROR_LOAD_SCORE: 'ERROR_LOAD_SCORE',\r\n    REMOVE_FROM_NOT_AUTHORIZED: 'REMOVE_FROM_NOT_AUTHORIZED',\r\n}\r\n\r\nconst handleTotalUsers = value => ({ type: type.TOTAL_USERS, payload: { value } })\r\nconst handleLoadingTotalUsers = value => ({ type: type.LOADING_TOTAL_USERS, payload: { value } })\r\nconst handleErrorTotalUsers = value => ({ type: type.ERROR_LOAD_TOTAL_USERS, payload: { value } })\r\nconst handleTotalDevices = value => ({ type: type.TOTAL_DEVICES, payload: { value } })\r\nconst handleLoadingTotalDevices = value => ({ type: type.LOADING_TOTAL_DEVICES, payload: { value } })\r\nconst handleErrorTotalDevices = value => ({ type: type.ERROR_LOAD_TOTAL_DEVICES, payload: { value } })\r\nconst handleTotalLines = value => ({ type: type.TOTAL_LINES, payload: { value } })\r\nconst handleLoadingTotalLines = value => ({ type: type.LOADING_TOTAL_LINES, payload: { value } })\r\nconst handleErrorTotalLines = value => ({ type: type.ERROR_LOAD_TOTAL_LINES, payload: { value } })\r\nconst handleTotalUsersNotAuthorized = value => ({ type: type.USERS_NOT_AUTHORIZED, payload: { value } })\r\nconst handleScore = value => ({ type: type.UPDATE_SCORE, payload: { value } })\r\nconst handleLoadingScore = value => ({ type: type.LOADING_SCORE, payload: { value } })\r\nconst handleErrorScore = value => ({ type: type.ERROR_LOAD_SCORE, payload: { value } })\r\nexport const handleUser = value => ({ type: type.UPDATE_USER, payload: { value } })\r\n\r\n\r\nexport const logout = () => ({ type: type.UPDATE_USER, payload: { value: { email: '', name: '', role: '' } } })\r\n\r\nexport const requestTotalUsers = (error = console.log) => dispatch => {\r\n  dispatch(handleLoadingTotalUsers(true));\r\n  dispatch(handleErrorTotalUsers(false));\r\n  network\r\n    .get(\"user/count\")\r\n    .then(response => {\r\n      dispatch(handleLoadingTotalUsers(false));\r\n      dispatch(handleTotalUsers(response.data.count));\r\n    })\r\n    .catch(e => {\r\n      error(e);\r\n      dispatch(handleLoadingTotalUsers(false));\r\n      dispatch(handleErrorTotalUsers(true));\r\n    });\r\n};\r\n\r\nexport const requestTotalDevices = (error = console.log) => dispatch => {\r\n  dispatch(handleErrorTotalDevices(false));\r\n  dispatch(handleLoadingTotalDevices(true));\r\n  network\r\n    .get(\"device/count\")\r\n    .then(response => {\r\n      dispatch(handleLoadingTotalDevices(false));\r\n      dispatch(handleTotalDevices(response.data.count));\r\n    })\r\n    .catch(e => {\r\n      error(e);\r\n      dispatch(handleLoadingTotalDevices(false));\r\n      dispatch(handleErrorTotalDevices(true));\r\n    });\r\n};\r\n\r\nexport const requestTotalLines = (error = console.log) => dispatch => {\r\n  dispatch(handleErrorTotalLines(false));\r\n  dispatch(handleLoadingTotalLines(true));\r\n  network\r\n    .get(\"line/count\")\r\n    .then(response => {\r\n      dispatch(handleLoadingTotalLines(false));\r\n      dispatch(handleTotalLines(response.data.count));\r\n    })\r\n    .catch(e => {\r\n      error(e);\r\n      dispatch(handleLoadingTotalLines(false));\r\n      dispatch(handleErrorTotalLines(true));\r\n    });\r\n};\r\n\r\nexport const requestScore = (filter = 'all', success = console.log, error = console.log) => dispatch => {\r\n  dispatch(handleErrorScore(false))\r\n  dispatch(handleLoadingScore(true))\r\n  network\r\n    .get(`line/score?filter=${filter}`)\r\n    .then(response => {\r\n      dispatch(handleLoadingScore(false))\r\n      dispatch(handleScore(response.data))\r\n      success()\r\n    })\r\n    .catch(e => {\r\n      error(e)\r\n      dispatch(handleLoadingScore(false))\r\n      dispatch(handleErrorScore(true))\r\n    })\r\n}\r\n\r\nexport const requestEmployeeToEnable = (error = console.log) => dispatch => {\r\n    network.get('employee/not_authorized')\r\n    .then(response => dispatch(handleTotalUsersNotAuthorized(response.data)))\r\n    .catch(error)\r\n}\r\n\r\nexport const requestUser = (error = console.log) => dispatch => {\r\n    network.get('employee/current')\r\n    .then(response => {\r\n      if (!response.data) {\r\n        storage.removeUser()\r\n      }\r\n      dispatch(handleUser(response.data))\r\n    })\r\n    .catch(error)\r\n}\r\n\r\nexport const deleteUserFromNotAuthorized = value => ({ type: type.REMOVE_FROM_NOT_AUTHORIZED, payload: { value } })","import { type } from \"./actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  totalUsers: 0,\r\n  isLoadingTotalUsers: false,\r\n  errorLoadTotalUsers: false,\r\n  totalDevices: 0,\r\n  isLoadingTotalDevices: false,\r\n  errorLoadTotalDevices: false,\r\n  totalLines: 0,\r\n  isLoadingTotalLines: false,\r\n  errorLoadTotalLines: false,\r\n  usersNotAuthorized: [],\r\n  user: { name: \"\", email: \"\", role: \"\" },\r\n  score: [],\r\n  isLoadingScore: false,\r\n  errorToLoadScore: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case type.LOADING_TOTAL_USERS:\r\n      return { ...state, isLoadingTotalUsers: action.payload.value };\r\n\r\n    case type.TOTAL_USERS:\r\n      return { ...state, totalUsers: action.payload.value };\r\n\r\n    case type.ERROR_LOAD_TOTAL_USERS:\r\n      return { ...state, errorLoadTotalUsers: action.payload.value };\r\n\r\n    case type.LOADING_TOTAL_DEVICES:\r\n      return { ...state, isLoadingTotalDevices: action.payload.value };\r\n\r\n    case type.TOTAL_DEVICES:\r\n      return { ...state, totalDevices: action.payload.value };\r\n\r\n    case type.ERROR_LOAD_TOTAL_DEVICES:\r\n      return { ...state, errorLoadTotalDevices: action.payload.value };\r\n\r\n    case type.LOADING_TOTAL_LINES:\r\n      return { ...state, isLoadingTotalLines: action.payload.value };\r\n\r\n    case type.TOTAL_LINES:\r\n      return { ...state, totalLines: action.payload.value };\r\n\r\n    case type.ERROR_LOAD_TOTAL_LINES:\r\n      return { ...state, errorLoadTotalLines: action.payload.value };\r\n\r\n    case type.USERS_NOT_AUTHORIZED:\r\n      return { ...state, usersNotAuthorized: [...action.payload.value] };\r\n      \r\n    case type.UPDATE_USER:\r\n      return { ...state, user: { ...action.payload.value } };\r\n\r\n    case type.UPDATE_SCORE:\r\n        return { ...state, score: action.payload.value }\r\n\r\n    case type.LOADING_SCORE:\r\n        return { ...state, isLoadingScore: action.payload.value }\r\n\r\n    case type.ERROR_LOAD_SCORE:\r\n        return { ...state, errorToLoadScore: action.payload.value }\r\n    \r\n    case type.REMOVE_FROM_NOT_AUTHORIZED:\r\n        return { ...state, usersNotAuthorized: [...state.usersNotAuthorized.filter(user => user._id !== action.payload.value)] }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","export const types = {\r\n    UPDATE_COMPONENT_LOADING: 'UPDATE_COMPONENT_LOADING'\r\n}\r\n\r\nexport function updateLoading(value) {\r\n    return {\r\n        type: types.UPDATE_COMPONENT_LOADING,\r\n        payload: { value }\r\n    }\r\n}","import network from '../../services/network'\r\nimport { types as typesLoading } from '../components/action'\r\nimport { deleteUserFromNotAuthorized } from '../home/actions'\r\n\r\nexport const types = {\r\n    UPDATE_EMPLOYEES: 'UPDATE_EMPLOYEES',\r\n}\r\n\r\nconst handleReducer = (type, value) => ({ type, payload: { value } })\r\n\r\nexport const requestEmployees = (page = 1, limit = 10, field, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    let URI = `employee?limit=${limit}&page=${page}`\r\n    if (field) {\r\n        URI = URI.concat(`&field=${field}`)\r\n    }\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_EMPLOYEES, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const removeEmployee = (body, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.delete('employee', { data: body })\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(deleteUserFromNotAuthorized(body._id))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}","import { types } from './action'\r\n\r\nconst INIT_STATE = {\r\n    data: {\r\n        docs: [],\r\n        total: 0,\r\n        limit: 10,\r\n        page: 1,\r\n        pages: 1\r\n    },\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.UPDATE_EMPLOYEES:\r\n            return { ...state, data: { ...action.payload.value } }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import { types } from './action'\r\n\r\nconst INITIAL_STATE = {\r\n    loading: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.UPDATE_COMPONENT_LOADING:\r\n            return { ...state, loading: action.payload.value }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import network from '../../services/network'\r\nimport { types as typesLoading } from '../components/action'\r\n\r\nexport const types = {\r\n    UPDATE_HISTORY: 'UPDATE_HISTORY',\r\n}\r\n\r\nconst handleReducer = (type, value) => ({ type, payload: { value } })\r\n\r\nexport const requestHistories = (page = 1, limit = 10, field, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    let URI = `history?limit=${limit}&page=${page}`\r\n    if (field) {\r\n        URI = URI.concat(`&field=${field}`)\r\n    }\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_HISTORY, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n","import { types } from './action'\r\n\r\nconst INIT_STATE = {\r\n    docs: [],\r\n    total: 0,\r\n    limit: 10,\r\n    page: 1,\r\n    pages: 1\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.UPDATE_HISTORY:\r\n            return { ...state, ...action.payload.value }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import network from '../../services/network'\r\nimport { types as typesLoading } from '../components/action'\r\n\r\nexport const types = {\r\n    UPDATE_SUGGESTION: 'UPDATE_SUGGESTION',\r\n    UPDATE_SUGGESTION_CHOOSED: 'UPDATE_SUGGESTION_CHOOSED',\r\n}\r\n\r\nconst handleReducer = (type, value) => ({ type, payload: { value } })\r\n\r\nexport const requestSuggestions = (page = 1, limit = 10, field, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    let URI = `suggestion?limit=${limit}&page=${page}`\r\n    if (field) {\r\n        URI = URI.concat(`&field=${field}`)\r\n    }\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_SUGGESTION, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const getSuggestionById = (id, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.get(`suggestion/${id}`)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_SUGGESTION_CHOOSED, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const removeMessage = (suggestion, message, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.delete('suggestion/message', { data: { suggestion, message } })\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n\r\n\r\n} ","import { types } from './action'\r\n\r\nconst INIT_STATE = {\r\n    docs: [],\r\n    total: 0,\r\n    limit: 10,\r\n    page: 1,\r\n    pages: 1,\r\n    suggestion: null\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.UPDATE_SUGGESTION:\r\n            return { ...state, ...action.payload.value }\r\n        case types.UPDATE_SUGGESTION_CHOOSED:\r\n            return { ...state, suggestion: {...action.payload.value} }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import network from '../../services/network'\r\nimport { types as typesLoading } from '../components/action'\r\n\r\nexport const types = {\r\n    UPDATE_LINES: 'UPDATE_LINES',\r\n    UPDATE_LINE_EDITED: 'UPDATE_LINE_EDITED',\r\n}\r\n\r\nconst handleReducer = (type, value) => ({ type, payload: { value } })\r\n\r\nexport const requestLines = (page = 1, limit = 10, field, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    let URI = `line?limit=${limit}&page=${page}`\r\n    if (field) {\r\n        URI = URI.concat(`&field=${field}`)\r\n    }\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_LINES, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const createLine = (body, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.post(`line`, body)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const editLine = (body, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.put(`line`, body)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const getLineById = (id, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.get(`line/${id}`)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_LINE_EDITED, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const removeLine = (id, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.delete(`line/${id}`)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}","import { types } from './action'\r\n\r\nconst INIT_STATE = {\r\n    data: {\r\n        docs: [],\r\n        total: 0,\r\n        limit: 10,\r\n        page: 1,\r\n        pages: 1\r\n    },\r\n    lineEdited: null\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.UPDATE_LINES:\r\n            return { ...state, data: { ...action.payload.value }, lineEdited: null }\r\n        case types.UPDATE_LINE_EDITED:\r\n            return { ...state, lineEdited: { ...action.payload.value } }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import network from '../../services/network'\r\nimport { updateLoading } from '../components/action'\r\n\r\nexport const types = {\r\n    UPDATE_DEVICE_LINES: 'UPDATE_DEVICE_LINES',\r\n    ERROR_LOAD_LINES: 'ERROR_LOAD_LINES',\r\n    UPDATE_DEVICE_NAME: 'UPDATE_DEVICE_NAME',\r\n    UPDATE_DEVICE_DIALOG: 'UPDATE_DEVICE_DIALOG',\r\n    UPDATE_LINE_VALUE: 'UPDATE_LINE_VALUE',\r\n    DEVICE_CLEAR: 'DEVICE_CLEAR',\r\n    UPDATE_DEVICES_DOCS: 'UPDATE_DEVICES_DOCS',\r\n    UPDATE_DEVICES: 'UPDATE_DEVICES',\r\n    UPDATE_CURRENT_DEVICE: 'UPDATE_CURRENT_DEVICE'\r\n}\r\n\r\nexport const updateName = value => ({ type: types.UPDATE_DEVICE_NAME, payload: { value }})\r\n\r\nexport const openDialog = value => ({ type: types.UPDATE_DEVICE_DIALOG, payload: { value }})\r\n\r\nexport const updateLines = value => ({ type: types.UPDATE_DEVICE_LINES, payload: { value }})\r\n\r\nexport const updateDevicesDocs = value => ({ type: types.UPDATE_DEVICES_DOCS, payload: { value }})\r\n\r\nexport const updateDevices = value => ({ type: types.UPDATE_DEVICES, payload: { value }})\r\n\r\nexport const updateCurrentDevice = value => ({ type: types.UPDATE_CURRENT_DEVICE, payload: { value }})\r\n\r\nexport const updateErrorLines = value => ({ type: types.ERROR_LOAD_LINES, payload: { value }})\r\n\r\nexport const onClose = value => ({ type: types.UPDATE_LINE_VALUE, payload: { value } })\r\n\r\nexport const clear = () => ({ type: types.DEVICE_CLEAR })\r\n\r\nexport const requestLines = (error = console.log) => dispatch => {\r\n    dispatch(updateLoading(true))\r\n    dispatch(updateErrorLines(false))\r\n    network.get('line/associate')\r\n    .then(response => {\r\n        dispatch(updateLoading(false))\r\n        dispatch(updateLines(response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(updateErrorLines(true))\r\n        dispatch(updateLoading(false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const requestDevices = (page = 1, limit = 10, field, success, error = console.log) => dispatch => {\r\n    dispatch(updateLoading(true))\r\n    let URI = `device?limit=${limit}&page=${page}`\r\n    if (field) {\r\n        URI = URI.concat(`&field=${field}`)\r\n    }\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(updateLoading(false))\r\n        dispatch(updateDevicesDocs(response.data))\r\n        if (success) {\r\n            success()\r\n        }\r\n    })\r\n    .catch(e => {\r\n        dispatch(updateLoading(false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const requestAllDevices = (success, error = console.log) => dispatch => {\r\n    dispatch(updateLoading(true))\r\n    let URI = `device?all=all`\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(updateLoading(false))\r\n        dispatch(updateDevices(response.data))\r\n        if (success) {\r\n            success()\r\n        }\r\n    })\r\n    .catch(e => {\r\n        dispatch(updateLoading(false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const requestDeviceById = (id, error = console.log) => dispatch => {\r\n    dispatch(updateLoading(true))\r\n    let URI = `device/${id}`\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(updateLoading(false))\r\n        dispatch(updateCurrentDevice(response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(updateLoading(false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const createDevice = (body, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(updateLoading(true))\r\n    network.post('device', body)\r\n    .then(response => {\r\n        dispatch(updateLoading(false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(updateLoading(false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const updateDevice = (body, success = console.log, error = console.log) => {\r\n    network.put('device', body)\r\n    .then(response => {\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const removeDevice = (id, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(updateLoading(true))\r\n    network.delete(`device/${id}`)\r\n    .then(response => {\r\n        dispatch(updateLoading(false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(updateLoading(false))\r\n        error(e)\r\n    })\r\n}\r\n\r\n","import { types } from './action'\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    open: false,\r\n    lines: [],\r\n    errorToLoadLines: false,\r\n    value: '',\r\n    data: {\r\n        docs: [],\r\n        total: 0,\r\n        limit: 10,\r\n        page: 1,\r\n        pages: 1\r\n    },\r\n    devices: [],\r\n    currentDevice: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.UPDATE_DEVICE_NAME:\r\n            return { ...state, name: action.payload.value }\r\n        case types.UPDATE_DEVICE_LINES:\r\n            return { ...state, lines: action.payload.value }\r\n        case types.UPDATE_DEVICES_DOCS:\r\n            return { ...state, data: action.payload.value }\r\n        case types.UPDATE_DEVICES:\r\n            return { ...state, devices: action.payload.value, currentDevice: null }\r\n        case types.UPDATE_CURRENT_DEVICE:\r\n            return { ...state, currentDevice: action.payload.value }\r\n        case types.UPDATE_DEVICE_DIALOG:\r\n            return { ...state, open: action.payload.value }\r\n        case types.ERROR_LOAD_LINES:\r\n            return { ...state, errorToLoadLines: action.payload.value }\r\n        case types.UPDATE_LINE_VALUE:\r\n            return { ...state, open: false, value: action.payload.value || state.value }\r\n        case types.DEVICE_CLEAR:\r\n            return { ...state, open: false, name: '', lines: [], value: '' }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import network from '../../services/network'\r\nimport { types as typesLoading } from '../components/action'\r\n\r\nexport const types = {\r\n    UPDATE_NEWS: 'UPDATE_NEWS',\r\n    UPDATE_NEWS_EDITED: 'UPDATE_NEWS_EDITED',\r\n}\r\n\r\nconst handleReducer = (type, value) => ({ type, payload: { value } })\r\n\r\nexport const requestNews = (page = 1, limit = 10, field, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    let URI = `news?limit=${limit}&page=${page}`\r\n    if (field) {\r\n        URI = URI.concat(`&field=${field}`)\r\n    }\r\n    network.get(URI)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_NEWS, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const createNews = (body, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.post(`news`, body)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const editNews = (body, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.put(`news`, body)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const getNewsById = (id, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.get(`news/${id}`)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        dispatch(handleReducer(types.UPDATE_NEWS_EDITED, response.data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const removeNews = (id, success = console.log, error = console.log) => dispatch => {\r\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\r\n    network.delete(`news/${id}`)\r\n    .then(response => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        success(response)\r\n    })\r\n    .catch(e => {\r\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\r\n        error(e)\r\n    })\r\n}\r\n\r\nexport const clearNewsEdit = () => handleReducer(types.UPDATE_NEWS_EDITED, null)","import { types } from './action'\r\n\r\nconst INIT_STATE = {\r\n    data: {\r\n        docs: [],\r\n        total: 0,\r\n        limit: 10,\r\n        page: 1,\r\n        pages: 1\r\n    },\r\n    newsEdit: null\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.UPDATE_NEWS:\r\n            return { ...state, data: { ...action.payload.value }, newsEdit: null }\r\n        case types.UPDATE_NEWS_EDITED:\r\n            return { ...state, newsEdit: { ...action.payload.value } }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import {\r\n    combineReducers\r\n} from 'redux'\r\nimport login from './login/reducer'\r\nimport home from './home/reducer'\r\nimport employee from './employees/reducer'\r\nimport component from './components/reducer'\r\nimport history from './history/reducer'\r\nimport suggestion from './suggestion/reducer'\r\nimport line from './lines/reducer'\r\nimport device from './devices/reducer'\r\nimport news from './news/reducer'\r\n\r\nconst reducers = combineReducers({\r\n    login,\r\n    home,\r\n    employee,\r\n    component,\r\n    history,\r\n    suggestion,\r\n    line,\r\n    device,\r\n    news\r\n})\r\n\r\nexport default reducers","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store\r\n\r\n","import { makeStyles } from '@material-ui/core'\r\nimport backgroundImage from '../../assets/google-maps.png'\r\n\r\nconst styles = makeStyles({\r\n    root: {\r\n        minHeight: '100vh',\r\n    },\r\n    contentLogo: {\r\n        color: '#FFF',\r\n        flex: 2,\r\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;`,\r\n        '@media (max-width: 1200px)': {\r\n            display: 'none'\r\n        },\r\n        background: `url(${backgroundImage}) no-repeat center center`,\r\n        backgroundSize: 'cover',\r\n        position: 'relative'\r\n    },\r\n    tabs: {\r\n        marginBottom: 16\r\n    },\r\n    fields: {\r\n        flex: 1.4,\r\n    },\r\n    textTab: {\r\n        fontSize: '20px'\r\n    },\r\n    textPresent: {\r\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;`,\r\n        color: '#4A4A4A'\r\n    },\r\n    textFields: {\r\n        margin: '16px 0px'\r\n    },\r\n    contentForgotPassword: {\r\n        width: '70%',\r\n        height: '80%',\r\n    },\r\n    linearProgress: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%'\r\n    },\r\n    addMarginBottom: {\r\n        marginBottom: 10\r\n    },\r\n    content: {\r\n        padding: '0px 16px'\r\n    },\r\n    backgroundFilter: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        background: 'linear-gradient(to bottom, rgba(211, 218, 222, 0.8) 14%, rgba(200, 213, 226, 0.8) 45%, rgba(57, 143, 241, 0.8) 100%)'\r\n    }\r\n})\r\n\r\nexport default styles","import React, { useState, useEffect } from 'react'\r\nimport { TextField, Grid, Button } from '@material-ui/core'\r\nimport createStyle from '../styles'\r\n\r\nconst FieldsLogin = ({ onClick, onClickRecoverPassword }) => {\r\n\r\n    useEffect(() => {\r\n        const callback = e => {\r\n            if (e.key === 'Enter' && !verifyUser()) {\r\n                onClick(user)\r\n            }\r\n        }\r\n        document.addEventListener('keypress', callback)\r\n        return () => document.removeEventListener('keypress', callback)\r\n    })\r\n\r\n    const classes = createStyle()\r\n    const [ user, setUser ] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const handleInput = target => event => {\r\n        setUser({ ...user, [target]: event.target.value })\r\n        if (!verifyUser() && event.keyCode === 13) {\r\n            onClick(user)\r\n        }\r\n    }\r\n    const verifyUser = _ => {\r\n        if (user.email && user.password) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    return (\r\n        <>\r\n            <Grid className={classes.content} container direction=\"column\" >\r\n                <TextField\r\n                    onChange={handleInput('email')}\r\n                    label=\"Email\"\r\n                    margin=\"normal\"\r\n                    className={classes.textFields}\r\n                    placeholder=\"Informe email\"\r\n                    />\r\n                <TextField\r\n                    onChange={handleInput('password')}\r\n                    className={classes.textFields}\r\n                    label=\"Senha\"\r\n                    margin=\"normal\"\r\n                    type=\"password\"\r\n                    placeholder=\"Informe senha\"\r\n                />\r\n                <Grid container justify=\"space-between\">\r\n                    <Button onClick={_ => onClick(user)} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\r\n                        Entrar\r\n                    </Button>\r\n                    <Button onClick={onClickRecoverPassword} color=\"primary\">\r\n                        Esqueceu a senha?\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default FieldsLogin","import React, { useState } from 'react'\r\nimport { TextField, Grid, Button } from '@material-ui/core'\r\nimport InputMask from 'react-input-mask'\r\nimport createStyle from '../styles'\r\n\r\nconst FieldsRegister = ({ onClick }) => {\r\n    const classes = createStyle()\r\n    const [ user, setUser ] = useState({\r\n        name: '',\r\n        email: '',\r\n        cpf: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    const handleInput = target => event => {\r\n        setUser({ ...user, [target]: event.target.value })\r\n    }\r\n    const verifyUser = () => {\r\n        if (user) {\r\n            const { email, cpf, password, confirmPassword, name } = user\r\n            if (email && cpf && password && confirmPassword && name) {\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n        return true\r\n    }\r\n    return (\r\n        <>\r\n        <Grid className={classes.content} container direction=\"column\" >\r\n            <TextField\r\n                onChange={handleInput('name')}\r\n                label=\"Nome\"\r\n                margin=\"normal\"\r\n                className={classes.textFields}\r\n                placeholder=\"Informe email\"\r\n                />\r\n            <TextField\r\n                onChange={handleInput('email')}\r\n                label=\"Email\"\r\n                margin=\"normal\"\r\n                className={classes.textFields}\r\n                placeholder=\"Informe email\"\r\n                />\r\n            <InputMask mask=\"999.999.999-99\" onChange={handleInput('cpf')}>\r\n                {\r\n                    props => <TextField\r\n                        {...props}\r\n                        label=\"Cpf\"\r\n                        margin=\"normal\"\r\n                        className={classes.textFields}\r\n                    />\r\n                }\r\n            </InputMask>\r\n            <TextField\r\n                onChange={handleInput('password')}\r\n                label=\"Senha\"\r\n                margin=\"normal\"\r\n                type=\"password\"\r\n                className={classes.textFields}\r\n                placeholder=\"Informe senha\"\r\n            />\r\n            <TextField\r\n                onChange={handleInput('confirmPassword')}\r\n                label=\"Confirme senha\"\r\n                margin=\"normal\"\r\n                type=\"password\"\r\n                className={classes.textFields}\r\n                placeholder=\"Informe senha\"\r\n            />\r\n            <Button onClick={() => onClick(user)} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\r\n                Entrar\r\n            </Button>\r\n        </Grid>\r\n    </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default FieldsRegister","import React, { useState } from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport createStyle from '../styles'\r\n\r\nconst ForgotPassword = props => {\r\n    const classes = createStyle()\r\n    const [ email, setEmail ] = useState('')\r\n    return (\r\n        <Grid item container direction=\"column\" justify=\"flex-start\" className={classes.contentForgotPassword}>\r\n            <h2 className={classes.textPresent}>Recuperar senha:</h2>\r\n            <TextField\r\n                className={classes.textFields}\r\n                label=\"Email\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Informe email\"\r\n                onChange={ev => setEmail(ev.target.value)}\r\n            />\r\n            <Button disabled={!email} className={classes.addMarginBottom} variant=\"contained\" color=\"primary\" onClick={() => props.recoverPassword(email)}>Enviar</Button>\r\n            <Button onClick={props.goBack}>Voltar</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Tabs, Tab, useTheme, LinearProgress, Typography } from '@material-ui/core'\r\nimport SwipeableViews from 'react-swipeable-views'\r\nimport createStyle from './styles'\r\nimport { toast } from 'react-toastify'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport FieldsLogin from './components/fieldsLogin'\r\nimport FieldsRegister from './components/fieldsRegister'\r\nimport ForgotPassword from './components/forgotPassword'\r\nimport { connect } from 'react-redux'\r\nimport { requestLogin, createAccount, recoverPassword } from '../../redux/login/actions'\r\nimport storage from '../../services/storage'\r\n\r\nconst Login = props => {\r\n    const [ state, setState ] = useState(0)\r\n    const handleChange = (_, newValue) => setState(newValue)\r\n    const classes = createStyle()\r\n    const theme = useTheme()\r\n\r\n    function handleChangeIndex(index) {\r\n        setState(index);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (storage.getUser()) {\r\n            props.history.push('/home')\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ ])\r\n\r\n    const registerUser = user => {\r\n        if (!props.isLoading) {\r\n            if (user.password !== user.confirmPassword) {\r\n                toast.error('Senhas diferentes')\r\n            } else {\r\n                props.createAccount(\r\n                    user,\r\n                    () => toast.success('Conta criada com sucesso, confirme no seu email'),\r\n                    e => toast.error(e)\r\n                )\r\n            }\r\n        }\r\n    }\r\n    \r\n    const requestLogin = user => {\r\n        if (!props.isLoading) {\r\n            props.requestLogin(user, () => {\r\n                toast.success('Login efetuado com sucesso', { autoClose: 2000 })\r\n                props.history.push('/home')\r\n            }, e => toast.error(e))\r\n        }\r\n    }\r\n\r\n    const recoverPassword = email => {\r\n        props.recoverPassword(email, () => toast.success('Verifique seu email'), e => toast.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container className={classes.root} wrap=\"nowrap\">\r\n                {\r\n                    props.isLoading &&\r\n                    <LinearProgress className={classes.linearProgress} />\r\n                }\r\n                <Grid container justify=\"center\" alignItems=\"center\" item className={classes.contentLogo}>\r\n                    <div className={classes.backgroundFilter}></div>\r\n                    <Typography style={{zIndex: 10}} variant=\"h1\">Bus Locator</Typography>\r\n                </Grid>\r\n\r\n\r\n                <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.fields} >\r\n                    <Route path={props.match.url} exact render={() => {\r\n                        return (\r\n                        <Grid item container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{width: '80%'}}>\r\n                            <Tabs\r\n                            className={classes.tabs}\r\n                            variant=\"fullWidth\"\r\n                            value={state}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                                >\r\n                                <Tab className={classes.textTab} label=\"Entrar\" />\r\n                                <Tab className={classes.textTab} label=\"Nova Conta\" />\r\n                            </Tabs>\r\n                            <Typography variant=\"h5\" className={classes.textPresent}>Bem vindo</Typography>\r\n                            <SwipeableViews\r\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                            index={state}\r\n                            onChangeIndex={handleChangeIndex}>\r\n                                <FieldsLogin onClick={requestLogin} onClickRecoverPassword={() => props.history.push('/login/forgot-password')} />\r\n                                <FieldsRegister onClick={registerUser} />\r\n                            </SwipeableViews>\r\n                        </Grid>\r\n                        )\r\n                    }}/>\r\n\r\n                    <Route path={props.match.url + '/forgot-password'} exact render={() => <ForgotPassword goBack={props.history.goBack} recoverPassword={recoverPassword} />} />\r\n                </Grid>\r\n            </Grid>\r\n            <Redirect from=\"*\" to=\"/login\" />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.login.isLoading,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestLogin, createAccount, recoverPassword })(Login)","import { makeStyles } from '@material-ui/core'\r\n\r\nexport default makeStyles({\r\n    maxContainer: {\r\n        minHeight: '100vh',\r\n    },\r\n    linearProgress: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        zIndex: 10000\r\n    },\r\n    container: {\r\n        padding: 16\r\n    },\r\n    marginVertical: {\r\n        margin: props => `${props.marginVertical} 0px`\r\n    },\r\n    maxWidth: {\r\n        width: '100%'\r\n    },\r\n    maxHeight: {\r\n        height: '100%'\r\n    }\r\n})","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Slide } from '@material-ui/core'\r\n\r\nconst TransitionSlide = React.forwardRef(function(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n})\r\n\r\nconst CustomDialog = props => {\r\n\r\n    const buildTransition = () => {\r\n        if (props.transition && props.transition === 'Slide') {\r\n            return TransitionSlide\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={buildTransition()}\r\n            keepMounted\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    {props.message}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.negativeAction} color=\"primary\">\r\n                    { props.negativeButton }\r\n                </Button>\r\n                <Button onClick={props.positiveAction} color=\"primary\">\r\n                    { props.positiveButton }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CustomDialog","import { makeStyles } from '@material-ui/core'\r\nimport image from '../../assets/connected_world.svg'\r\n\r\nconst drawerWidth = 240\r\n\r\nexport default makeStyles(theme => ({\r\n    appBar: {\r\n        boxShadow: 'none',\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px) !important`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    toolbar: {\r\n        backgroundColor: '#FFF',\r\n        borderBottom: '1px solid #DFE3E8',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        color: '#000'\r\n    },\r\n    paper: {\r\n        boxShadow: 'none',\r\n        border: '1px solid #DFE3E8',\r\n        padding: 16,\r\n        color: '#66788A'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        backgroundColor: '#f8fafc'\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px) !important`\r\n    },\r\n    result: {\r\n        color: '#000'\r\n    },\r\n    contentIcon: {\r\n        flex: 1\r\n    },\r\n    contentInformation: {\r\n        flex: 2\r\n    },\r\n    icon: {\r\n        backgroundColor: '#45B880',\r\n        color: '#FFF',\r\n        padding: 16,\r\n        fontSize: 50,\r\n        borderRadius: '50%',\r\n    },\r\n    popoverHeader: {\r\n        backgroundImage: `url(${image})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'contain',\r\n        backgroundColor: '#f8fafc',\r\n        backgroundPosition: 'right',\r\n        width: 350,\r\n        padding: 30\r\n    },\r\n    removePadding: {\r\n        padding: 0\r\n    },\r\n    contentCard: {\r\n        padding: 16,\r\n    },\r\n    card: {\r\n        marginTop: 5\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    }\r\n}))","export const EMPLOYEE_ROLE = {\r\n    COMMON: 'COMMON',\r\n    ADMIN: 'ADMIN'\r\n}\r\n\r\nexport const USER_STATUS = {\r\n    ENABLED: 'ENABLED',\r\n    PENDING: 'PEDING',\r\n    NOT_AUTHORIZED: 'NOT_AUTHORIZED'\r\n}\r\n\r\nexport const ROUTES = {\r\n    HOME: '/home/dashboard',\r\n    EMPLOYEES: '/home/employess',\r\n    ACCOUNT: '/home/account',\r\n    HISTORY: '/home/history',\r\n    SUGGESTION: '/home/suggestion',\r\n    DEVICES: '/home/devices',\r\n    ADD_DEVICES: '/home/devices/add',\r\n    LINES: '/home/lines',\r\n    ADD_LINES: '/home/lines/add',\r\n    MAP: '/home/maps',\r\n    LOGIN: '/login',\r\n    NEWS: '/home/news',\r\n    ADD_NEWS: '/home/news/add'\r\n}","import React from 'react'\r\nimport { Drawer, Grid, makeStyles, Divider, Typography, List, ListItemIcon, ListItemText, ListItem }  from '@material-ui/core'\r\nimport createStyle from '../pages/home/style'\r\nimport { Dashboard, People, AccountBox, History, QuestionAnswer, LocationOn, Directions, Map, Drafts } from '@material-ui/icons'\r\nimport clsx from 'clsx'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ROUTES, EMPLOYEE_ROLE } from '../utils/constants'\r\nimport { useSelector } from 'react-redux'\r\nimport LOGO from '../assets/logo.png'\r\n\r\nconst styles = makeStyles({\r\n    header: {\r\n        height: 200,\r\n    },\r\n    listItem: {\r\n        cursor: 'pointer',\r\n        margin: '8px 0px',\r\n        borderLeft: '4px solid transparent',\r\n        '&:hover': {\r\n            borderLeft: '4px solid #0767DB',\r\n            borderRadius: 4,\r\n            backgroundColor: '#F6F9FD',\r\n            color: '#0767DB !important'\r\n        },\r\n        '&:hover $icon': {\r\n            color: '#0767DB !important'\r\n        }\r\n    },\r\n    activeRoute: {\r\n        borderLeft: '4px solid #0767DB',\r\n        borderRadius: 4,\r\n        backgroundColor: '#F6F9FD'\r\n    },\r\n    listItemText: {\r\n        fontWeight: 500,\r\n        color: '#66788A',\r\n        marginLeft: 8,\r\n    },\r\n    listItemActive: {\r\n        color: '#12161B'\r\n    },\r\n    iconActive: {\r\n        color: '#0767DB !important'\r\n    },\r\n    icon: {\r\n        minWidth: 'unset !important',\r\n        fontWeight: 500,\r\n        color: '#66788A',\r\n    },\r\n    list: {\r\n        paddingLeft: 8\r\n    },\r\n    img: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'contain',\r\n        height: '15vh'\r\n    }\r\n})\r\n\r\nconst CustomDrawer = props => {\r\n\r\n    const user = useSelector(state => state.home.user)\r\n    const { onClose, open, location: { pathname } } = props\r\n    const classesLocal = createStyle()\r\n    const classes = styles()\r\n    const isAdmin = user.role === EMPLOYEE_ROLE.ADMIN\r\n    const items = [\r\n        {\r\n            icon: <Dashboard/>,\r\n            text: 'Painel de controle',\r\n            url: ROUTES.HOME,\r\n            show: isAdmin,\r\n            isActive: pathname.includes(ROUTES.HOME),\r\n            onClick() { pathname !== ROUTES.HOME && handleRoute(ROUTES.HOME) }\r\n        },\r\n        {\r\n            icon: <Map/>,\r\n            text: 'Mapa',\r\n            url: ROUTES.MAP,\r\n            show: true,\r\n            isActive: pathname.includes(ROUTES.MAP),\r\n            onClick() { pathname !== ROUTES.MAP && handleRoute(ROUTES.MAP) }\r\n        },\r\n        {\r\n            icon: <AccountBox/>,\r\n            text: 'Minha Conta',\r\n            url: ROUTES.ACCOUNT,\r\n            show: true,\r\n            isActive: pathname.includes(ROUTES.ACCOUNT),\r\n            onClick() { pathname !== ROUTES.ACCOUNT && handleRoute(ROUTES.ACCOUNT) }\r\n        },\r\n        {\r\n            icon: <People/>,\r\n            text: 'Funcionários',\r\n            url: ROUTES.EMPLOYEES,\r\n            show: true,\r\n            isActive: pathname.includes(ROUTES.EMPLOYEES),\r\n            onClick() { pathname !== ROUTES.EMPLOYEES && handleRoute(ROUTES.EMPLOYEES) }\r\n        },\r\n        {\r\n            icon: <History/>,\r\n            text: 'Histórico',\r\n            url: ROUTES.HISTORY,\r\n            show: isAdmin,\r\n            isActive: pathname.includes(ROUTES.HISTORY),\r\n            onClick() { pathname !== ROUTES.HISTORY && handleRoute(ROUTES.HISTORY) }\r\n        },\r\n        {\r\n            icon: <QuestionAnswer/>,\r\n            text: 'Dúvidas e sugestões',\r\n            url: ROUTES.SUGGESTION,\r\n            show: true,\r\n            isActive: pathname.includes(ROUTES.SUGGESTION),\r\n            onClick() { pathname !== ROUTES.SUGGESTION && handleRoute(ROUTES.SUGGESTION) }\r\n        },\r\n        {\r\n            icon: <LocationOn/>,\r\n            text: 'Dispositivos',\r\n            url: ROUTES.DEVICES,\r\n            show: true,\r\n            isActive: pathname.includes(ROUTES.DEVICES),\r\n            onClick() { pathname !== ROUTES.DEVICES && handleRoute(ROUTES.DEVICES) }\r\n        },\r\n        {\r\n            icon: <Directions/>,\r\n            text: 'Linhas',\r\n            url: ROUTES.LINES,\r\n            show: true,\r\n            isActive: pathname.includes(ROUTES.LINES),\r\n            onClick() { pathname !== ROUTES.LINES && handleRoute(ROUTES.LINES) }\r\n        },\r\n        {\r\n            icon: <Drafts/>,\r\n            text: 'Notícias',\r\n            url: ROUTES.NEWS,\r\n            show: true,\r\n            isActive: pathname.includes(ROUTES.NEWS),\r\n            onClick() { pathname !== ROUTES.NEWS && handleRoute(ROUTES.NEWS) }\r\n        },\r\n    ]\r\n    function handleRoute(route) {\r\n        props.history.push(route)\r\n    }\r\n\r\n    function buildListItem() {\r\n        return items.map((item, index) => {\r\n            if (item.show) {\r\n                return (\r\n                    <ListItem key={index.toString()} onClick={item.onClick} className={clsx(classes.listItem, { [classes.activeRoute]: item.isActive })} >\r\n                        <ListItemIcon className={clsx(classes.icon, { [classes.iconActive]:item.isActive })}>\r\n                        { item.icon }\r\n                        </ListItemIcon>\r\n                        <ListItemText className={clsx(classes.listItemText, { [classes.listItemActive]: item.isActive })}>\r\n                        { item.text }\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                )\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            onClose={onClose}\r\n            className={classesLocal.drawer}\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n            paper: classesLocal.drawerPaper,\r\n            }}\r\n        >\r\n            <Divider />\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.header} >\r\n                <img className={classes.img} src={LOGO} alt=\"logo\" />\r\n                <Typography variant=\"h6\" >{ user.name }</Typography>\r\n                <span>{ user.email }</span>\r\n            </Grid>\r\n            <Divider />\r\n            <List className={classes.list}>\r\n                { buildListItem() }\r\n            </List>\r\n        </Drawer>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(CustomDrawer)","import React, { useState } from 'react'\r\nimport createStyle from '../style/global'\r\nimport createStyleLocal from '../pages/home/style'\r\nimport { Menu, Close } from '@material-ui/icons'\r\nimport { Notifications, ExitToApp, ChevronRight } from '@material-ui/icons'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    Badge,\r\n    Popover,\r\n    Grid,\r\n    List,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    ListItem,\r\n    Divider\r\n} from '@material-ui/core'\r\nimport { EMPLOYEE_ROLE } from '../utils/constants'\r\nimport Drawer from './Drawer'\r\nimport clsx from 'clsx'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ROUTES } from '../utils/constants'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst CustomAppBar = props => {\r\n\r\n    const titles = {\r\n        [ROUTES.HOME]: 'Painel de controle',\r\n        [ROUTES.EMPLOYEES]: 'Funcionários',\r\n        [ROUTES.ACCOUNT]: 'Minha Conta',\r\n        [ROUTES.HISTORY]: 'Histórico',\r\n        [ROUTES.SUGGESTION]: 'Dúvidas e sugestões',\r\n        [ROUTES.DEVICES]: 'Dipositivos',\r\n        [ROUTES.ADD_DEVICES]: 'Adicionar dispositivo',\r\n        [ROUTES.LINES]: 'Linhas',\r\n        [ROUTES.ADD_LINES]: 'Adicionar linha',\r\n        [ROUTES.MAP]: 'Mapa',\r\n        [ROUTES.NEWS]: 'Notícias'\r\n    }\r\n    const user = useSelector(state => state.home.user)\r\n    const classes = createStyle()\r\n    const classesLocal = createStyleLocal()\r\n    const [ open, setOpen ] = useState(false)\r\n    const [ openDrawer, setDrawer ] = useState(false)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const size = props.usersNotAuthorized.length\r\n\r\n    const handleClose = () => setOpen(!open)\r\n    const handleDrawer = () => {\r\n        props.onDrawer(!openDrawer)\r\n        setDrawer(!openDrawer)\r\n    }\r\n\r\n    function handleClick(event) {\r\n        if (size) {\r\n            if (!open) {\r\n                setAnchorEl(event.currentTarget)\r\n            } else {\r\n                setAnchorEl(null)    \r\n            }\r\n            setOpen(!open)\r\n        }\r\n    }\r\n    function verifyNotification() {\r\n        if (size) {\r\n            return (\r\n                <Badge badgeContent={size} color=\"secondary\">\r\n                    <Notifications />\r\n                </Badge>\r\n            )\r\n        }\r\n        return <Notifications />\r\n    }\r\n\r\n    function buildItems() {\r\n        return props.usersNotAuthorized.map(user => {\r\n            return (\r\n                <React.Fragment key={user._id}>\r\n                    <ListItem onClick={() => {\r\n                        handleClose()\r\n                        props.onSelectedUser(user)\r\n                    }} button className={classesLocal.content}>\r\n                        <ListItemText primary={user.name} secondary={user.email} />\r\n                        <ListItemSecondaryAction>\r\n                            <ChevronRight />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"relative\" className={clsx(classesLocal.appBar, { [classesLocal.appBarShift]: openDrawer })}>\r\n                <Toolbar className={classesLocal.toolbar}>\r\n                    <IconButton\r\n                        onClick={handleDrawer}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        aria-label=\"Open drawer\"\r\n                    >\r\n                    {\r\n                        openDrawer ? <Close /> : <Menu />\r\n                    }\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classesLocal.title}>\r\n                        { titles[props.location.pathname] || 'Painel de controle' }\r\n                    </Typography>\r\n                    {   (user && user.role === EMPLOYEE_ROLE.ADMIN) &&\r\n                        <IconButton onClick={handleClick}>\r\n                            { verifyNotification() }\r\n                        </IconButton>\r\n                    }\r\n                    <IconButton onClick={props.handleClose}>\r\n                        <ExitToApp />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Grid className={classesLocal.popoverHeader}>\r\n                    <Typography variant=\"h5\">\r\n                        Solicitação de entrada\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid>\r\n                    <List className={classesLocal.removePadding}>\r\n                        { buildItems() }\r\n                    </List>\r\n                </Grid>\r\n            </Popover>\r\n            <Drawer onClose={handleDrawer} open={openDrawer} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(CustomAppBar)","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n    makeStyles,\r\n    Checkbox,\r\n    CircularProgress\r\n} from '@material-ui/core'\r\nimport { EMPLOYEE_ROLE, USER_STATUS } from '../utils/constants'\r\nimport network from '../services/network'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateLoading as loadingGlobal } from '../redux/components/action'\r\nimport { deleteUserFromNotAuthorized } from '../redux/home/actions'\r\n\r\nconst createStyle = makeStyles({\r\n    field: {\r\n        flex: 1\r\n    },\r\n    information: {\r\n        flex: 3\r\n    },\r\n    checkBox: {\r\n        paddingLeft: 0,\r\n        '&:hover': {\r\n            backgroundColor: 'transparent !important'\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomDialog = props => {\r\n\r\n    const dispatch = useDispatch()\r\n    let { user } = props\r\n    if (!user) {\r\n        user = { name: '', email: '', cpf: '', role: EMPLOYEE_ROLE.COMMON }\r\n    }\r\n    const isAdmin = user.role === EMPLOYEE_ROLE.ADMIN\r\n    const styles = createStyle()\r\n    const [ value, setValue ] = useState()\r\n    const [ loading, setLoading ] = useState(false)\r\n    useEffect(() => {\r\n        setValue(isAdmin)\r\n        if (!props.open) {\r\n            setValue(false)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.open ])\r\n\r\n    function requestServer() {\r\n        const body = {\r\n            name: user.name,\r\n            cpf: user.cpf,\r\n            status: USER_STATUS.ENABLED,\r\n            email: user.email\r\n        }\r\n        if (value) {\r\n            body.role = EMPLOYEE_ROLE.ADMIN\r\n        } else {\r\n            body.role = EMPLOYEE_ROLE.COMMON\r\n        }\r\n        const callback = cb => {\r\n            cb()\r\n            setLoading(false)\r\n            dispatch(loadingGlobal(false))\r\n            dispatch(deleteUserFromNotAuthorized(user._id))\r\n        }\r\n        setLoading(true)\r\n        dispatch(loadingGlobal(true))\r\n        network.patch('employee/edit', body)\r\n        .then(() => callback(props.success))\r\n        .catch(e => callback(props.error))\r\n    }\r\n\r\n    function handleLoading() {\r\n        if (loading) {\r\n            return <CircularProgress/>\r\n        } else {\r\n            return (\r\n            <Button onClick={requestServer} color=\"primary\">\r\n                Sim\r\n            </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            keepMounted\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Atenção</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    { props.message }\r\n                </DialogContentText>\r\n                <Grid container direction=\"row\" wrap=\"nowrap\">\r\n                    <Grid container className={styles.field}  ><Typography>Nome: </Typography></Grid>\r\n                    <Grid container className={styles.information} ><Typography >{ user.name }</Typography></Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" wrap=\"nowrap\" >\r\n                    <Grid container className={styles.field} ><Typography>Cpf: </Typography></Grid>\r\n                    <Grid container className={styles.information} ><Typography >{ user.cpf }</Typography></Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" wrap=\"nowrap\" >\r\n                    <Grid container className={styles.field} ><Typography>Email: </Typography></Grid>\r\n                    <Grid container className={styles.information} >\r\n                        <Typography >{ user.email }</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" wrap=\"nowrap\" alignItems=\"center\" >\r\n                    <Grid>\r\n                        <Checkbox color=\"primary\" checked={value} onChange={event => setValue(event.target.checked)} className={styles.checkBox} />\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Typography >{ props.messageCheckBox }</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.negativeAction} color=\"primary\">\r\n                    Não\r\n                </Button>\r\n                { handleLoading() }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CustomDialog","import React from 'react'\r\nimport { EMPLOYEE_ROLE, USER_STATUS } from '../utils/constants'\r\n\r\nexport const Status = ({ status }) => {\r\n    \r\n    function getMessage() {\r\n        if (status === USER_STATUS.PENDING) {\r\n            return 'Usuário pendente'\r\n        } else if (status === USER_STATUS.NOT_AUTHORIZED) {\r\n            return 'Não autorizado'\r\n        } else if (status === USER_STATUS.ENABLED) {\r\n            return 'Usuário habilitado'\r\n        }\r\n        return 'Desconhecido'\r\n    }\r\n    \r\n    return (\r\n        <p>{ getMessage() }</p>\r\n    )\r\n}\r\n\r\nexport const Role = ({ role }) => {\r\n    \r\n    function getMessage() {\r\n        if (role === EMPLOYEE_ROLE.ADMIN) {\r\n            return 'Administrador'\r\n        } else if (role === EMPLOYEE_ROLE.COMMON) {\r\n            return 'Comum'\r\n        }\r\n        return 'Desconhecido'\r\n    }\r\n    \r\n    return (\r\n        <p>{ getMessage() }</p>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { requestEmployees, removeEmployee } from '../../redux/employees/action'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    makeStyles,\r\n    Table,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableFooter,\r\n    TablePagination,\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    TextField,\r\n    InputAdornment,\r\n    IconButton,\r\n} from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\nimport { Status, Role } from '../../components/status'\r\nimport { EMPLOYEE_ROLE } from '../../utils/constants'\r\nimport { Delete } from '@material-ui/icons'\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport Dialog from '../../components/dialog'\r\nimport CustomDialog from '../../components/CustomDialog'\r\n\r\nconst createStyle = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: 32\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n        marginTop: 32\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    input: {\r\n        minWidth: '50%'\r\n    },\r\n    tableCellFooter: {\r\n        paddingRight: '32px !important'\r\n    }\r\n}))\r\n\r\nconst Employee = props => {\r\n\r\n    const classes = createStyle()\r\n\r\n    const subject = new Subject()\r\n    subject\r\n    .pipe(debounceTime(300))\r\n    .subscribe(value => {\r\n        setText(value)\r\n        props.requestEmployees(1, 10, value)\r\n    })\r\n    \r\n    const [ text, setText ] = useState('')\r\n    const [ open, setOpen ] = useState(false)\r\n    const [ openCustomDialog, setOpenCustomDialog ] = useState(false)\r\n    const [ user, setUser ] = useState({ name: '', email: ''})\r\n    const isAdmin = props.user.role === EMPLOYEE_ROLE.ADMIN\r\n    useEffect(() => {\r\n        props.requestEmployees(props.page, props.data.limit, text, () => {\r\n            toast.error('Falha na comunicação com o servidor')\r\n        })\r\n\r\n        return () => subject.complete()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [  ])\r\n\r\n    function requestServer(page = props.data.page) {\r\n        if (!props.isLoading) {\r\n            props.requestEmployees(page, props.data.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function renderFooter() {\r\n        return (\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[]}\r\n                count={props.data.total}\r\n                page={props.data.page - 1}\r\n                onChangePage={(_, page) => {\r\n                    const newPage = page + 1\r\n                    requestServer(newPage)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function buildItems() {\r\n        return props.data.docs.map(employee => {\r\n            return (\r\n                <TableRow onClick={() => {\r\n                    if (isAdmin) {\r\n                        setUser(employee)\r\n                        setOpenCustomDialog(true)\r\n                    }\r\n                }} hover={isAdmin} key={employee._id}>\r\n                    <TableCell>{employee.name}</TableCell>\r\n                    <TableCell>{employee.email}</TableCell>\r\n                    <TableCell><Status status={employee.status} /></TableCell>\r\n                    <TableCell><Role role={employee.role} /></TableCell>\r\n                    {\r\n                        isAdmin &&\r\n                        <TableCell component=\"th\">\r\n                            <Button onClick={ev => {\r\n                                ev.stopPropagation()\r\n                                setOpen(true)\r\n                                setUser(employee)\r\n                            }} variant=\"outlined\" color=\"secondary\">\r\n                                Remover\r\n                                <Delete className={classes.rightIcon} />\r\n                            </Button>\r\n                        </TableCell>\r\n                    }\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n\r\n    function deleteUser() {\r\n        setOpen(false)\r\n        if (user.email) {\r\n            props.removeEmployee(user, () => {\r\n                toast.success('Usuário removido com sucesso', { autoClose: 2000 })\r\n                props.requestEmployees(props.data.page, props.data.limit)\r\n            }, () => toast.error('Falha ao deletar usuário'))\r\n        }\r\n    }\r\n    return (\r\n        <Grid className={classes.root}>\r\n            <TextField\r\n                onChange={ev => subject.next(ev.target.value)}\r\n                className={classes.input}\r\n                variant=\"outlined\"\r\n                label=\"Procurar\"\r\n                placeholder=\"Digite aqui para buscar\"\r\n                InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestEmployees(1, 10, text)}><Search /></IconButton></InputAdornment>\r\n                }}\r\n            />\r\n            <Paper className={classes.tableWrapper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" >Nome</TableCell>\r\n                            <TableCell component=\"th\">Email</TableCell>\r\n                            <TableCell component=\"th\">Status</TableCell>\r\n                            <TableCell component=\"th\">Papel</TableCell>\r\n                            {\r\n                                isAdmin &&\r\n                                <TableCell component=\"th\">Remover</TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { buildItems() }\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                           { renderFooter() }\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </Paper>\r\n            <Dialog \r\n                open={open}\r\n                onClose={setOpen}\r\n                title=\"Atenção\"\r\n                message={`Deseja remover o usuário ${user.name}?`}\r\n                negativeButton=\"Não\"\r\n                positiveButton=\"Sim\"\r\n                negativeAction={() => setOpen(false)}\r\n                positiveAction={() => deleteUser()}\r\n            />\r\n            <CustomDialog\r\n                message=\"Deseja aleterar permissão desse usuário?\"\r\n                messageCheckBox=\"Administrador\"\r\n                success={() => {\r\n                    setOpenCustomDialog(false)\r\n                    requestServer()\r\n                    toast.success('Usuário editado', { autoClose: 2000 })\r\n                }}\r\n                error={() => {\r\n                    setOpenCustomDialog(false)\r\n                    toast.error('Falha editar usuário', { autoClose: 2000 })\r\n                }}\r\n                user={user}\r\n                open={openCustomDialog}\r\n                negativeAction={() => setOpenCustomDialog(false)}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.employee.data,\r\n    isLoading: state.component.loading,\r\n    user: state.home.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, { requestEmployees, removeEmployee })(Employee)","import React, { useState, useEffect } from 'react'\r\nimport { Paper, Grid, TextField, Button, Typography, Divider, makeStyles } from '@material-ui/core'\r\nimport InputMask from 'react-input-mask'\r\nimport {toast} from 'react-toastify'\r\nimport network from '../../services/network'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateLoading } from '../../redux/components/action'\r\nimport { handleUser } from '../../redux/home/actions'\r\n\r\nconst styles = makeStyles({\r\n    root: {\r\n        padding: 16\r\n    },\r\n    contentPadding: {\r\n        padding: 32,\r\n    },\r\n    content: {\r\n        width: '70%'\r\n    },\r\n    contentButton: {\r\n        margin: '16px 32px'\r\n    }\r\n})\r\n\r\nfunction Account(props) {\r\n\r\n    useEffect(() => {\r\n        network.get('employee/current')\r\n        .then(({data}) => setUser(data))\r\n        .catch(e => toast.error('Falha de comunicação com o servidor'))\r\n    }, [  ])\r\n    const dispatch = useDispatch()\r\n    const classes = styles()\r\n    const [ user, setUser ] = useState({\r\n        name: '',\r\n        email: '',\r\n        cpf: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    const handleInput = target => event => {\r\n        setUser({ ...user, [target]: event.target.value })\r\n    }\r\n    const verifyUser = () => {\r\n        if (user) {\r\n            const { email, cpf, password, confirmPassword, name } = user\r\n            if (email && cpf && password && confirmPassword && name) {\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n        return true\r\n    }\r\n\r\n    function editUser() {\r\n        if (user.password !== user.confirmPassword) {\r\n            toast.error('Senhas diferentes')\r\n        } else {\r\n            dispatch(updateLoading(true))\r\n            network.patch('employee/edit', user)\r\n            .then(({data}) => {\r\n                dispatch(updateLoading(false))\r\n                dispatch(handleUser(data.user))\r\n                toast.success('Conta editada com sucesso')\r\n            })\r\n            .catch(e => {\r\n                dispatch(updateLoading(false))\r\n                toast.error('Falha editar conta')\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid className={classes.root} container justify=\"center\" alignItems=\"center\">\r\n            <Paper className={classes.content}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid className={classes.contentPadding}>\r\n                        <Typography variant=\"h5\">Perfil</Typography>\r\n                        <Typography variant=\"h6\">As informações podem ser editadas</Typography>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid className={classes.contentPadding} container direction=\"column\">\r\n                        <TextField\r\n                            onChange={handleInput('name')}\r\n                            label=\"Nome\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"Informe email\"\r\n                            variant=\"outlined\"\r\n                            value={user.name}\r\n                            />\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"Informe email\"\r\n                            variant=\"outlined\"\r\n                            value={user.email}\r\n                            disabled\r\n                            />\r\n                        <InputMask mask=\"999.999.999-99\" value={user.cpf || ''} onChange={handleInput('cpf')}>\r\n                            {\r\n                                props => <TextField\r\n                                    {...props}\r\n                                    label=\"Cpf\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            }\r\n                        </InputMask>\r\n                        <TextField\r\n                            onChange={handleInput('password')}\r\n                            label=\"Senha\"\r\n                            margin=\"normal\"\r\n                            type=\"password\"\r\n                            placeholder=\"Informe senha\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            onChange={handleInput('confirmPassword')}\r\n                            label=\"Confirme senha\"\r\n                            margin=\"normal\"\r\n                            type=\"password\"\r\n                            placeholder=\"Informe senha\"\r\n                            variant=\"outlined\"\r\n                            \r\n                        />\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid className={classes.contentButton}>\r\n                        <Button onClick={editUser} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\r\n                            Salvar\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Account","import React from 'react'\r\nimport storage from '../../services/storage'\r\nimport { EMPLOYEE_ROLE, ROUTES } from '../../utils/constants'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default props => {\r\n\r\n    const REDIRECT_TO_LOGIN = 3\r\n    const REDIRECT_TO_MAP = 2\r\n    const RENDER_CHILDREN = 1\r\n\r\n    const user = useSelector(state => state.home.user)\r\n    \r\n    function getRedirectRoute() {\r\n        const storageUser = storage.getUser()\r\n        if (!storageUser) {\r\n            return REDIRECT_TO_LOGIN\r\n        }\r\n        if (props.onlyToken) {\r\n            return RENDER_CHILDREN\r\n        }\r\n        if ((!user.role && storageUser.role === EMPLOYEE_ROLE.ADMIN) ||\r\n            (user.role === EMPLOYEE_ROLE.ADMIN)) {\r\n            return RENDER_CHILDREN\r\n        }\r\n        return REDIRECT_TO_MAP\r\n    }\r\n\r\n    function handleRoute() {\r\n        const result = getRedirectRoute()\r\n        if (result === REDIRECT_TO_LOGIN) {\r\n            return <Redirect to={ROUTES.LOGIN} />\r\n        } else if (result === RENDER_CHILDREN) {\r\n            return props.children\r\n        } else {\r\n            return <Redirect to={ROUTES.MAP} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {handleRoute()}\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { requestHistories } from '../../redux/history/action'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    makeStyles,\r\n    Table,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableFooter,\r\n    TablePagination,\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    InputAdornment,\r\n    IconButton,\r\n} from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport Auth from '../auth/auth'\r\n\r\nconst createStyle = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: 32\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n        marginTop: 32\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    input: {\r\n        minWidth: '50%'\r\n    },\r\n    tableCellFooter: {\r\n        paddingRight: '32px !important'\r\n    }\r\n}))\r\n\r\nconst History = props => {\r\n\r\n    const classes = createStyle()\r\n\r\n    const subject = new Subject()\r\n    subject\r\n    .pipe(debounceTime(300))\r\n    .subscribe(value => {\r\n        setText(value)\r\n        props.requestHistories(1, 10, value)\r\n    })\r\n    \r\n    const [ text, setText ] = useState('')\r\n    useEffect(() => {\r\n        props.requestHistories(props.page, props.limit, text, () => {\r\n            toast.error('Falha na comunicação com o servidor')\r\n        })\r\n        return () => subject.complete()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [  ])\r\n    function requestServer(page = props.page) {\r\n        if (!props.isLoading) {\r\n            props.requestHistories(page, props.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function renderFooter() {\r\n        return (\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[]}\r\n                count={props.total}\r\n                page={props.page - 1}\r\n                onChangePage={(_, page) => {\r\n                    const newPage = page + 1\r\n                    requestServer(newPage)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function buildItems() {\r\n        return props.docs.map(history => {\r\n            return (\r\n                <TableRow key={history._id}>\r\n                    <TableCell>{history.email}</TableCell>\r\n                    <TableCell>{history.reason}</TableCell>\r\n                    <TableCell>{new Date(history.createdAt).toLocaleString()}</TableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <Auth>\r\n            <Grid className={classes.root}>\r\n                <TextField\r\n                    onChange={ev => subject.next(ev.target.value)}\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    label=\"Procurar\"\r\n                    placeholder=\"Digite aqui para buscar, para data: yyyy-mm-dd\"\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestHistories(1, 10, text)}><Search /></IconButton></InputAdornment>\r\n                    }}\r\n                />\r\n                <Paper className={classes.tableWrapper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" >Usuário</TableCell>\r\n                                <TableCell component=\"th\">Mensagem</TableCell>\r\n                                <TableCell component=\"th\">Criado em</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { buildItems() }\r\n                        </TableBody>\r\n                        <TableFooter>\r\n                            <TableRow>\r\n                            { renderFooter() }\r\n                            </TableRow>\r\n                        </TableFooter>\r\n                    </Table>\r\n                </Paper>\r\n            </Grid>\r\n        </Auth>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.history,\r\n    isLoading: state.component.loading,\r\n})\r\n\r\nexport default connect(mapStateToProps, { requestHistories })(History)","import React from 'react'\r\nimport { compose, withProps } from 'recompose'\r\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps'\r\n\r\nexport default compose(\r\n    withProps({\r\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCfg6PgpQycYtUFaSRl336lsM8EDPmpmfI&v=3.exp&libraries=geometry,drawing,places&callback=initMap\",\r\n        center: { lat: -22.2295935, lng: -45.9434848 },\r\n        loadingElement: <div style={{ width: '100%' }} />,\r\n        containerElement: <div style={{ width: '100%' }} />,\r\n        mapElement: <div style={{ height: `100%`, width: '100%' }} />\r\n    }),\r\n    withScriptjs,\r\n    withGoogleMap\r\n)(HandleMap)\r\n\r\nfunction HandleMap(props) {\r\n\r\n    const { children, onClick } = props\r\n    \r\n    return (\r\n        <GoogleMap defaultZoom={15} onClick={ev => onClick && onClick(ev)} defaultCenter={props.center} >\r\n            { children && children }\r\n        </GoogleMap>\r\n    )\r\n}","import { makeStyles } from '@material-ui/core'\r\n\r\nexport default makeStyles({\r\n    filterBtn: {\r\n        position: 'absolute',\r\n        top: 20,\r\n        right: 20,\r\n        zIndex: 1\r\n    },\r\n    contentMap: {\r\n        position: 'relative'\r\n    }\r\n})","import { connect } from 'mqtt'\r\n\r\nconst clientId = 'mqtt_rasp' + Math.random().toString(16).substr(2, 8)\r\n\r\nconst client = connect('ws://ec2-18-228-196-51.sa-east-1.compute.amazonaws.com:9001', { username: 'TCC', password: 'TCC', clientId })\r\n\r\nclient.on('connect', () => console.log('connected'))\r\nclient.on('reconnect', () => console.log('reconnect'))\r\nclient.on('disconnect', () => console.log('disconnected'))\r\nclient.on('error', (e) => console.log('error', e))\r\nclient.on('offline', () => console.log('offline'))\r\n\r\nexport default client","import React, { useEffect, useState } from 'react'\r\nimport { Grid, Drawer, Button, Typography } from '@material-ui/core'\r\nimport Maps from '../../components/Map'\r\nimport MarkerWithLabel from 'react-google-maps/lib/components/addons/MarkerWithLabel'\r\nimport { connect } from 'react-redux'\r\nimport { requestAllDevices, updateDevices, requestDeviceById } from '../../redux/devices/action'\r\nimport BUS from '../../assets/bus.png'\r\nimport createStyle from '../../style/global'\r\nimport createLocalStyle from './styles'\r\nimport { toast } from 'react-toastify'\r\nimport { Polyline } from 'react-google-maps'\r\nimport mqtt from '../../services/mqtt'\r\nimport store from '../../redux/index'\r\n\r\nconst mapStateToProps = state => ({devices: state.device.devices, loading: state.component.loading, currentDevice: state.device.currentDevice})\r\n\r\nexport default connect(mapStateToProps, { requestAllDevices, updateDevices, requestDeviceById })(PageMaps)\r\n\r\nfunction PageMaps(props) {\r\n\r\n    const [ load, setLoad ] = useState(false)\r\n    const [ controller, setController ] = useState({ device: null, open: false, filter: false })\r\n    const classes = createStyle({ marginVertical: '16px' })\r\n    const classesLocal = createLocalStyle()\r\n\r\n    useEffect(() => {\r\n        window.initMap = () => setLoad(true)\r\n        if (load || window.google) {\r\n            props.requestAllDevices()\r\n            mqtt.subscribe('#')\r\n            mqtt.addListener('message', onMessage)\r\n        }\r\n        return () => {\r\n            props.updateDevices([])\r\n            mqtt.removeListener('message', onMessage)\r\n            mqtt.unsubscribe('#')\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ load ])\r\n\r\n    useEffect(() => {\r\n        if (props.currentDevice) {\r\n            setController({ device: props.currentDevice, open: false, filter: true })\r\n        }\r\n    }, [ props.currentDevice ])\r\n\r\n    function onMessage(topic, message) {\r\n        try {\r\n            if (topic.endsWith('/location')) {\r\n                const id = topic.split('/')[0]\r\n                const stateDevices = store.getState().device.devices\r\n                const devices = [...stateDevices]\r\n                const deviceFound = devices.find(device => device.uuid === id)\r\n                if (deviceFound) {\r\n                    const payload = JSON.parse(String(message))\r\n                    deviceFound.latitude = payload.lat\r\n                    deviceFound.longitude = payload.lon\r\n                    props.updateDevices(devices) \r\n                }\r\n            }\r\n        } catch {}\r\n    }\r\n\r\n    function buildRoute() {\r\n        if (controller.filter && controller.device.line.directions) {\r\n            return <Polyline\r\n                path={controller.device.line.directions.routes}\r\n                geodesic={true}\r\n                options={{\r\n                    strokeColor: \"#ff2527\",\r\n                    strokeWeight: 3,\r\n                 }}\r\n            />\r\n        }\r\n    }\r\n\r\n    function buildPoints() {\r\n        if (controller.filter && controller.device.line.points) {\r\n            return controller.device.line.points.map((point, index) => {\r\n                return (\r\n                    <MarkerWithLabel\r\n                        key={index.toString()}\r\n                        position={point}\r\n                        labelAnchor={new window.google.maps.Point(0, 0)}\r\n                        labelStyle={point.name && {backgroundColor: \"#FFF\", fontSize: \"12px\", padding: \"8px\", borderRadius: '8px'}}\r\n                    >\r\n                        { point.name ? <div>{point.name}</div> : <div></div> }\r\n                    </MarkerWithLabel>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    function buildMarker() {\r\n        const { google } = window\r\n        if (google) {\r\n            return props.devices\r\n            .filter(device => !(controller.filter && controller.device && controller.device._id !== device._id))\r\n            .map(device => {\r\n                const message = device.lineNumber ? `${device.lineNumber} - ${device.lineDescription}` : null\r\n                if (device.latitude && device.longitude) {\r\n                    return (\r\n                        <MarkerWithLabel\r\n                            onClick={() => setController({ ...controller, open: true, device })}\r\n                            key={device._id}\r\n                            icon={{\r\n                                url: BUS,\r\n                                scaledSize:  new google.maps.Size(50,50)\r\n                            }}\r\n                            position={{ lat: device.latitude, lng: device.longitude }}\r\n                            labelAnchor={new google.maps.Point(0, 0)}\r\n                            labelStyle={message && {backgroundColor: \"#FFF\", fontSize: \"12px\", padding: \"8px\", borderRadius: '8px'}}\r\n                        >\r\n                            { message ? <div>{message}</div> : <div></div> }\r\n                        </MarkerWithLabel>\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n\r\n    function buildDrawer() {\r\n        if (controller.device) {\r\n            const message = controller.device.lineNumber ? `${controller.device.lineNumber} - ${controller.device.lineDescription}` : 'Sem linha associada'\r\n            return (\r\n                <Drawer open={controller.open} onClose={() => setController({...controller, open: false})} anchor=\"top\">\r\n                    <Grid className={classes.container} container direction=\"column\">\r\n                        <Typography className={classes.marginVertical} variant=\"h4\">{ controller.device.name }</Typography>\r\n                        <Typography variant=\"h5\">{ message }</Typography>\r\n                        <Grid>\r\n                            <Button onClick={() => {\r\n                                if (controller.device.line) {\r\n                                    props.requestDeviceById(controller.device._id, () => {\r\n                                        toast.error('Falha ao verificar rota')\r\n                                        setController({ device: null, filter: false, open: false })\r\n                                    })\r\n                                }\r\n                            }} className={classes.marginVertical} color=\"primary\" variant=\"outlined\">Visualizar linha</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Drawer>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n      <Grid className={classesLocal.contentMap} container>\r\n        {controller.filter && (\r\n          <Button\r\n            onClick={() => setController({ device: null, filter: false, open: false })}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classesLocal.filterBtn}\r\n          >\r\n            Remover filtro\r\n          </Button>\r\n        )}\r\n        <Maps>\r\n          {buildMarker()}\r\n          {buildRoute()}\r\n          {buildPoints()}\r\n        </Maps>\r\n        {buildDrawer()}\r\n      </Grid>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, Fab } from '@material-ui/core'\r\nimport { updateLoading } from '../../../redux/components/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport clsx from 'clsx'\r\nimport client from '../../../services/mqtt'\r\nimport { timer } from 'rxjs'\r\nimport styles from './style'\r\n\r\nconst CONNECTED = 'Conectado'\r\nconst DISCONNECTED = 'Desconectado'\r\nconst CONNECTING = 'Conectando...'\r\nlet subscription\r\n\r\nexport default function(props) {\r\n    \r\n    const [ status, setStatus ] = useState('Status')\r\n    const [ device, setDevice ] = useState({ text: '', topic: '', latitude : '', longitude: '', time: '' })\r\n    const classes = styles()\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector(state => state.component.loading)\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            client.removeListener('message', onMessage)\r\n            client.unsubscribe(device.topic)\r\n            dispatch(updateLoading(false))\r\n            if (subscription) {\r\n                subscription.unsubscribe()\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [  ])\r\n   \r\n    function tryConnection() {\r\n        if (!loading) {\r\n            if (device) {\r\n                client.subscribe(device.topic)\r\n                client.publish(device.text.concat('/ping'), 'ping')\r\n                client.addListener('message', onMessage)\r\n                subscription = timer(10000).subscribe(() => {\r\n                    client.unsubscribe(device.topic)\r\n                    dispatch(updateLoading(false))\r\n                    setStatus(DISCONNECTED)\r\n                })\r\n                dispatch(updateLoading(true))\r\n                setStatus(CONNECTING)\r\n                \r\n            } else {\r\n                toast.info('Informe o identificador do dispositivo')\r\n            }\r\n        }\r\n    }\r\n\r\n    function onMessage(topic, message) {\r\n        if (topic === device.topic && message) {\r\n            client.unsubscribe(device.topic)\r\n            dispatch(updateLoading(false))\r\n            setStatus(CONNECTED)\r\n            subscription.unsubscribe()\r\n            const payload = JSON.parse(message.toString())\r\n            if (payload) {\r\n                setDevice({...device,latitude:payload.lat, longitude:payload.lon, time:payload.time}) \r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" className={clsx(classes.padding, classes.content)}>\r\n            <h2 className={clsx({ [classes.colorPositive]: status === CONNECTED, [classes.colorNegative]: status === DISCONNECTED })}>{status}</h2>\r\n            <TextField\r\n                disabled={loading}\r\n                value={device.text}\r\n                onChange={ev => setDevice({...device, text: ev.target.value, topic: ev.target.value + '/pong'})}\r\n                className={classes.input}\r\n                variant=\"outlined\"\r\n                placeholder=\"Informe identificador do dispositivo\"\r\n                label=\"Dispositivo\"\r\n            />\r\n            <Grid>\r\n                <Fab className={classes.margin} color=\"primary\" variant=\"extended\" onClick={tryConnection}>\r\n                    Conectar\r\n                </Fab>\r\n                <Fab disabled={status !== CONNECTED} className={classes.margin} variant=\"extended\" onClick={() => props.finishProccess(device)}>\r\n                    Próximo passo\r\n                </Fab>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nexport default makeStyles(theme => ({\r\n    title: {\r\n        margin: 0,\r\n        fontWeight: 'normal',\r\n    },\r\n    contentTitle: {\r\n        display: 'flex',\r\n        margin: '5px 32px',\r\n        alignItems: 'center',\r\n        '& h3': {\r\n            marginLeft: 16,\r\n            marginTop: 3\r\n        }\r\n    },\r\n    contentTalk: {\r\n        maxHeight: 'calc(100vh - 65px)'\r\n    },\r\n    contentMessages: {\r\n        flex: 1,\r\n        overflowY: 'auto',\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        alignItems: 'flex-start'\r\n    },\r\n    contentInputMessage: {\r\n        border: '1px solid #DFE3E8',\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 2,\r\n        display: 'flex',\r\n        flex: 1,\r\n        padding: 5\r\n    },\r\n    icon: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    footer: {\r\n        flex: .3,\r\n        padding: 16\r\n    },\r\n    contentField: {\r\n        width: '100%',\r\n        minHeight: '20vh',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentButton: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    contentList: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        padding: '0px 32px 5px 32px'\r\n    },\r\n    card: {\r\n        boxShadow: '0 1px 15px rgba(0,0,0,.04), 0 1px 6px rgba(0,0,0,.04)',\r\n        borderRadius: 'calc(.15rem - 1px)',\r\n        border: 'initial',\r\n        backgroundColor: '#FFF',\r\n        padding: 16,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 'max-content',\r\n        maxWidth: '70%'\r\n    },\r\n    cardMessage: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        '& p': {\r\n            margin: 0\r\n        }\r\n    },\r\n    contentCard: {\r\n        marginTop: 16,\r\n        width: '100%'\r\n    },\r\n    contentRight: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    date: {\r\n        marginLeft: '16px !important',\r\n        fontSize: '.6rem'\r\n    },\r\n    name: {\r\n        fontStyle: 'italic'\r\n    },\r\n    contentTime: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n}))\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Grid, Input, Divider, Button, IconButton} from '@material-ui/core'\r\nimport { Send, Delete } from '@material-ui/icons'\r\nimport styles from './styles'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { getSuggestionById, removeMessage } from '../../../redux/suggestion/action'\r\nimport { updateLoading } from '../../../redux/components/action'\r\nimport network from '../../../services/network'\r\nimport storage from '../../../services/storage'\r\nimport { toast } from 'react-toastify'\r\nimport clsx from 'clsx'\r\n\r\nconst mapStateToProps = state => ({ suggestion: state.suggestion.suggestion, user: state.home.user, loading: state.component.loading })\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getSuggestionById, removeMessage }\r\n)(withRouter(function Talk(props) {\r\n\r\n    const { suggestion } = props\r\n    const { match: { params } } = props\r\n    const classes = styles()\r\n    const [ text, setText ] = useState('')\r\n    const dispatch = useDispatch()\r\n    const { entity } = storage.getUser()\r\n    const listRef = useRef(null)\r\n    useEffect(() => {\r\n        props.getSuggestionById(params.id, () => props.history.goBack())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(scrollBottom, [ suggestion ])\r\n    function buildItems() {\r\n        if (suggestion) {\r\n            return suggestion.messages.map((content, index) => {\r\n                return (\r\n                    <div key={index.toString()} className={clsx(classes.contentCard, { [classes.contentRight]: props.user._id === content.by._id })}>\r\n                        <div className={classes.card}>\r\n                            <div className={classes.cardMessage}>\r\n                                <p className={classes.name}>{ content.by.name }</p>\r\n                                <div className={classes.contentTime}>\r\n                                    <p className={classes.date}>{ new Date(content.createdAt).toLocaleString() }</p>\r\n                                    {\r\n                                        props.user._id === content.by._id &&\r\n                                        <IconButton onClick={() => removeMessage(content)}>\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                    }\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div>\r\n                                <p>{ content.message }</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        return null\r\n    }\r\n\r\n    function scrollBottom() {\r\n        const scrollHeight = listRef.current.scrollHeight;\r\n        const height = listRef.current.clientHeight;\r\n        const maxScrollTop = scrollHeight - height;\r\n        listRef.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\r\n    }\r\n\r\n    async function createMessage() {\r\n        if (suggestion && entity) {\r\n            const body = {id: suggestion._id, data: { by: props.user._id, message: text, onModel: entity }}\r\n            dispatch(updateLoading(true))\r\n            try {\r\n                setText('')\r\n                await network.patch('suggestion', body)\r\n                props.getSuggestionById(params.id)\r\n            } catch {\r\n                dispatch(updateLoading(false))\r\n                toast.error('Falha ao enviar mensagem')\r\n            }\r\n        }\r\n    }\r\n\r\n    function removeMessage(message) {\r\n        if (!props.loading) {\r\n            props.removeMessage(\r\n                suggestion._id, \r\n                message._id,\r\n                () => props.getSuggestionById(params.id),\r\n                () => toast.error('Houve um erro ao remover mensagem', {autoClose: 3000})\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\" wrap=\"nowrap\" className={classes.contentTalk}>\r\n            <Grid className={classes.contentMessages} container wrap=\"nowrap\" direction=\"column\">\r\n                <div className={classes.contentTitle}>\r\n                    <h2 className={classes.title}>Título: </h2>\r\n                    { suggestion && <h3 className={classes.title}>{ suggestion.title }</h3> }\r\n                </div>\r\n                <Divider />\r\n                <div ref={listRef} className={classes.contentList}>\r\n                    { buildItems() }\r\n                </div>\r\n            </Grid>\r\n            <Grid container className={classes.footer}>\r\n                <div className={classes.contentField}>\r\n                        <div className={classes.contentInputMessage}>\r\n                            <Input\r\n                                className={classes.input}\r\n                                placeholder=\"Responda aqui\"\r\n                                multiline\r\n                                maxLength=\"2\"\r\n                                disableUnderline={true}\r\n                                onChange={ev => setText(ev.target.value)}\r\n                                value={text}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.contentButton}>\r\n                            <Button disabled={!text} onClick={createMessage}>\r\n                                Enviar\r\n                                <Send className={classes.icon} />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}))\r\n","import React, { useEffect, useState } from 'react'\r\nimport { requestSuggestions } from '../../redux/suggestion/action'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    makeStyles,\r\n    Table,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableFooter,\r\n    TablePagination,\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    InputAdornment,\r\n    IconButton,\r\n} from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport Talk from './components/talk'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { ROUTES } from '../../utils/constants'\r\n\r\nconst createStyle = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: 32,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n        marginTop: 32,\r\n        width: '100%'\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    input: {\r\n        minWidth: '50%'\r\n    },\r\n    tableCellFooter: {\r\n        paddingRight: '32px !important'\r\n    }\r\n}))\r\n\r\nconst Suggestion = props => {\r\n\r\n    const classes = createStyle()\r\n\r\n    const subject = new Subject()\r\n    subject\r\n    .pipe(debounceTime(300))\r\n    .subscribe(value => {\r\n        setText(value)\r\n        props.requestSuggestions(1, 10, value)\r\n    })\r\n    \r\n    const [ text, setText ] = useState('')\r\n    useEffect(() => {\r\n        if (props.location.pathname === ROUTES.SUGGESTION) {\r\n            props.requestSuggestions(props.page, props.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n        }\r\n        return () => subject.complete()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.location.pathname ])\r\n    function requestServer(page = props.page) {\r\n        if (!props.isLoading) {\r\n            props.requestSuggestions(page, props.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function renderFooter() {\r\n        return (\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[]}\r\n                count={props.total}\r\n                page={props.page - 1}\r\n                onChangePage={(_, page) => {\r\n                    const newPage = page + 1\r\n                    requestServer(newPage)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function buildItems() {\r\n        return props.docs.map(suggestion => {\r\n            return (\r\n                <TableRow onClick={() => props.history.push('/home/suggestion/' + suggestion._id)} hover key={suggestion._id}>\r\n                    <TableCell align=\"center\">{suggestion.name}</TableCell>\r\n                    <TableCell align=\"center\">{suggestion.title}</TableCell>\r\n                    <TableCell align=\"center\">{new Date(suggestion.createdAt).toLocaleString()}</TableCell>\r\n                    <TableCell align=\"center\">{suggestion.messages.length}</TableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <Grid container>\r\n            <Switch>\r\n                <Route exact path={ROUTES.SUGGESTION} render={() => {\r\n                    return (\r\n                        <Grid className={classes.root}>\r\n                            <TextField\r\n                                onChange={ev => subject.next(ev.target.value)}\r\n                                className={classes.input}\r\n                                variant=\"outlined\"\r\n                                label=\"Procurar\"\r\n                                placeholder=\"Digite aqui para buscar, para data: yyyy-mm-dd\"\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestSuggestions(1, 10, text)}><Search /></IconButton></InputAdornment>\r\n                                }}\r\n                            />\r\n                            <Paper className={classes.tableWrapper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\" component=\"th\" >Usuário</TableCell>\r\n                                            <TableCell align=\"center\" component=\"th\">Título</TableCell>\r\n                                            <TableCell align=\"center\" component=\"th\">Criado em</TableCell>\r\n                                            <TableCell align=\"center\" component=\"th\">Quantidade de mensagens</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        { buildItems() }\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                        { renderFooter() }\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </Paper>\r\n                        </Grid>\r\n                    )\r\n                }} />\r\n                <Route exact path={ROUTES.SUGGESTION.concat('/:id')} render={() => <Talk />} />\r\n                <Redirect from=\"*\" to={ROUTES.HOME} />\r\n            </Switch>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.suggestion,\r\n    isLoading: state.component.loading,\r\n})\r\n\r\nexport default connect(mapStateToProps, { requestSuggestions })(Suggestion)","import { makeStyles, colors } from '@material-ui/core'\r\n\r\nexport default makeStyles(theme => ({\r\n    content: {\r\n        width: '100%',\r\n        '& h2': {\r\n            color: 'rgba(0,0,0,.38)'\r\n        }\r\n    },\r\n    padding: {\r\n        padding: 16,\r\n    },\r\n    margin: {\r\n        margin: 16,\r\n    },\r\n    input: {\r\n        width: '30%'\r\n    },\r\n    colorPositive: {\r\n        color: `${colors.green.A700} !important`\r\n    },\r\n    colorNegative: {\r\n        color: `${colors.red.A700} !important`\r\n    },\r\n    textResult: {\r\n        marginLeft: 16\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        padding: 32,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n        marginTop: 32,\r\n        width: '100%'\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    inputSearch: {\r\n        minWidth: '50%'\r\n    },\r\n    tableCellFooter: {\r\n        paddingRight: '32px !important'\r\n    },\r\n    fab: {\r\n        position: 'fixed !important',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        backgroundColor: '#3f51b5 !important',\r\n        color: '#FFF !important',\r\n        borderRadius: '50% !important'\r\n    }\r\n}))","import React, { useEffect, useState } from 'react'\r\nimport { requestDevices, removeDevice, updateDevice } from '../../../redux/devices/action'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    TablePagination,\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    InputAdornment,\r\n    IconButton,\r\n    Fab\r\n} from '@material-ui/core'\r\nimport { Search, Add } from '@material-ui/icons'\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ROUTES } from '../../../utils/constants'\r\nimport { compose } from 'recompose'\r\nimport MaterialTable from 'material-table'\r\nimport createStyle from './style'\r\n\r\nconst Devices = props => {\r\n\r\n    const classes = createStyle()\r\n    const subject = new Subject()\r\n    subject\r\n    .pipe(debounceTime(300))\r\n    .subscribe(value => {\r\n        setText(value)\r\n        props.requestDevices(1, 10, value)\r\n    })\r\n    \r\n    const [ text, setText ] = useState('')\r\n    useEffect(() => {\r\n        if (props.location.pathname === ROUTES.DEVICES) {\r\n            props.requestDevices(props.page, props.limit, text, null, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n        }\r\n        return () => subject.complete()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.location.pathname ])\r\n    function requestServer(page = props.page) {\r\n        if (!props.isLoading) {\r\n            props.requestDevices(page, props.limit, text, null, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function renderFooter() {\r\n        return (\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[]}\r\n                count={props.total}\r\n                page={props.page - 1}\r\n                onChangePage={(_, page) => {\r\n                    const newPage = page + 1\r\n                    requestServer(newPage)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid className={classes.root}>\r\n                    <TextField\r\n                        onChange={ev => subject.next(ev.target.value)}\r\n                        className={classes.inputSearch}\r\n                        variant=\"outlined\"\r\n                        label=\"Procurar\"\r\n                        placeholder=\"Digite aqui para filtrar na tabela\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestDevices(1, 10, text)}><Search /></IconButton></InputAdornment>\r\n                        }}\r\n                    />\r\n                    <Paper className={classes.tableWrapper}>\r\n                        <MaterialTable\r\n                                options={{\r\n                                 search: false,\r\n                                 actionsColumnIndex: -1\r\n                                }}\r\n                            localization={{\r\n                                    header: {\r\n                                        actions: 'Ações'\r\n                                    },\r\n                                    body: {\r\n                                        emptyDataSourceMessage: 'Nenhum dispositivo para mostrar',\r\n                                        filterRow: {\r\n                                            filterTooltip: 'Filtrar'\r\n                                        },\r\n                                        editRow: {\r\n                                            deleteText: 'Deseja remover esse dispositivo?'\r\n                                        }\r\n                                    },\r\n                                    toolbar: {\r\n                                        searchTooltip: 'Procurar',\r\n                                        searchPlaceholder: 'Digite aqui para buscar dispositivo'\r\n                                    }\r\n                                }}\r\n                            components={{\r\n                                Pagination: renderFooter\r\n                            }}\r\n                            columns={[\r\n                                { title: 'Nome', field: 'name' },\r\n                                { title: 'Identificador', field: 'uuid', editable: 'never' },\r\n                                { title: 'Linha', field: 'lineNumber', type: 'numeric', min: 0 },\r\n                                { title: 'Descrição da linha', field: 'lineDescription', editable: 'never' },\r\n                            ]}\r\n                            title=\"Dispositivos\"\r\n                            onRowClick={console.log}\r\n                            data={props.docs}\r\n                            editable={{\r\n                                onRowUpdate: (newData) =>\r\n                                    new Promise((resolve) => {\r\n                                        updateDevice(newData, () => {\r\n                                            props.requestDevices(props.page, props.limit, text, resolve, () => {\r\n                                                toast.error('Falha na comunicação com o servidor')\r\n                                            })\r\n                                            toast.success('Dispositivo editado com sucesso')\r\n                                        }, ({ response }) => {\r\n                                            resolve()\r\n                                            if (response && response.status === 404) {\r\n                                                toast.error('A linha para associação não foi encontrada')\r\n                                            } else {\r\n                                                toast.error('Falha ao editar dispositivo')\r\n                                            }\r\n                                        })\r\n                                    }),\r\n                                onRowDelete: oldData =>\r\n                                    new Promise((resolve) => {\r\n                                        props.removeDevice(oldData._id, () => {\r\n                                            toast.success('Dispositivo removido com sucesso')\r\n                                            props.requestDevices(props.page, props.limit, text, resolve, () => {\r\n                                                toast.error('Falha na comunicação com o servidor')\r\n                                            })\r\n                                        }, () => toast.error('Falha ao remover dispositivo'))\r\n                                    })\r\n                            }}\r\n                        />\r\n                     </Paper>\r\n                </Grid>\r\n                <Fab onClick={() => props.history.push(ROUTES.ADD_DEVICES)} className={classes.fab} color=\"primary\">\r\n                    <Add />\r\n                </Fab>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.device.data,\r\n    isLoading: state.component.loading,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { requestDevices, removeDevice }),\r\n    withRouter\r\n)(Devices)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\n\r\nexport default function(props) {\r\n  const {\r\n      onClose,\r\n      value: valueProp,\r\n      open,\r\n      options,\r\n      title,\r\n      textCancel,\r\n      textConfirm,\r\n      ...other\r\n  } = props\r\n  const [value, setValue] = React.useState(valueProp)\r\n  const radioGroupRef = React.useRef(null)\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp)\r\n    }\r\n  }, [valueProp, open])\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current !== null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function handleCancel() {\r\n    onClose()\r\n  }\r\n\r\n  function handleOk() {\r\n    onClose(value)\r\n  }\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"ringtone\"\r\n          name=\"ringtone\"\r\n          value={value || ''}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option, index) => (\r\n            <FormControlLabel value={option._id} key={index.toString()} control={<Radio />} label={`${option.number || ''} - ${option.description}`} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          { textCancel }\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          { textConfirm }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport styles from './style'\r\nimport { connect } from 'react-redux'\r\nimport DialogRadio from '../../../components/dialogRadio'\r\nimport { Grid, TextField, Fab, Button } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport { updateName, openDialog, onClose, requestLines, clear, createDevice } from '../../../redux/devices/action'\r\nimport { toast } from 'react-toastify'\r\nimport { compose } from 'recompose'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst mapStateToProps = state => ({ ...state.device, loading: state.component.loading })\r\n\r\nexport default\r\ncompose(\r\n    connect( mapStateToProps, { updateName, openDialog, onClose, requestLines, clear, createDevice } ),\r\n    withRouter\r\n)(SecondStep)\r\n\r\n\r\nfunction SecondStep(props) {\r\n\r\n    const classes = styles()\r\n\r\n    useEffect(() => {\r\n        props.requestLines(() => toast.error('Falha na comunicação com o servidor'))\r\n        return props.clear\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [  ])\r\n\r\n    function save() {\r\n        const body = {\r\n            uuid: props.device.text,\r\n            name: props.name,\r\n            line: props.value,\r\n            latitude: props.device.latitude,\r\n            longitude: props.device.longitude\r\n        }\r\n        if (!body.uuid) {\r\n            toast.error('Identificador do dispositivo está vazio')\r\n            return\r\n        }\r\n        if (!body.line) {\r\n            toast.info('Falta escolher a linha para associação')\r\n            return\r\n        }\r\n        props.createDevice(body, () => {\r\n            toast.success('Dispositivo cadastrado com sucesso')\r\n            props.history.goBack()\r\n        }, ({response}) => {\r\n            if (response && response.status === 409) {\r\n                toast.error('Dispositivo já cadastrado')\r\n            } else {\r\n                toast.error('Falha ao cadastrar dispositivo')\r\n            }\r\n        })\r\n    }\r\n\r\n    function buildResult() {\r\n        if (props.value) {\r\n            const line = props.lines.find(li => li._id === props.value)\r\n            return <>{ line.number } - {line.description}</>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" className={clsx(classes.padding, classes.content)}>\r\n            <h2>Associar dispositivo com uma linha:</h2>\r\n            <TextField\r\n                value={props.name}\r\n                onChange={ev => props.updateName(ev.target.value)}\r\n                className={classes.input}\r\n                variant=\"outlined\"\r\n                placeholder=\"Informe um nome para o dispositivo\"\r\n                label=\"Nome\"\r\n            />\r\n            <Grid container wrap=\"nowrap\" justify=\"center\">\r\n                <p>Linha escolhida: </p>\r\n                <p className={classes.textResult}>{buildResult()}</p>\r\n            </Grid>\r\n            <Button\r\n                variant=\"outlined\"\r\n                disabled={props.loading}\r\n                onClick={() => props.lines.length ? props.openDialog(true) : toast.info('Nenhuma linha para associar')}>\r\n                Abrir opções\r\n            </Button>\r\n            <Grid>\r\n                <Fab disabled={props.loading} className={classes.margin} color=\"primary\" variant=\"extended\" onClick={save}>\r\n                    Salvar\r\n                </Fab>\r\n            </Grid>\r\n            <DialogRadio\r\n                open={props.open}\r\n                options={props.lines}\r\n                title=\"Atenção\"\r\n                textCancel=\"Cancelar\"\r\n                textConfirm=\"Ok\"\r\n                value={props.value}\r\n                onClose={props.onClose}\r\n            />\r\n        </Grid>\r\n    )\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Grid, Stepper, Step, StepLabel } from '@material-ui/core'\r\nimport FirstStep from './firstStep'\r\nimport SecondStep from './secondStep'\r\nimport styles from './style'\r\n\r\nconst steps = [ 'Conectar no dispositivo', 'Associar com uma linha' ]\r\n\r\nexport default function AddDevice() {\r\n    \r\n    const [ controller, setController ] = useState({ step: 0, device: null })\r\n    const classes = styles()\r\n\r\n    return (\r\n        <Grid wrap=\"nowrap\" container>\r\n            <Grid container direction=\"column\" wrap=\"nowrap\" className={classes.content}>\r\n                <Stepper activeStep={controller.step}>\r\n                    {\r\n                        steps.map(label => {\r\n                            return (\r\n                                <Step key={label}>\r\n                                    <StepLabel>{ label }</StepLabel>\r\n                                </Step>\r\n                            )\r\n                        })\r\n                    }\r\n                </Stepper>\r\n                {\r\n                    controller.step === 0 && <FirstStep finishProccess={device => setController({ ...controller, step: 1, device })} />\r\n                }\r\n                {\r\n                    controller.step === 1 && <SecondStep device={controller.device} />\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { ROUTES } from '../../utils/constants'\r\nimport DeviceList from './components/deviceList'\r\nimport AddDevice from './components/addDevice'\r\n\r\nexport default function(){\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={ROUTES.DEVICES} exact component={DeviceList} />\r\n            <Route path={ROUTES.ADD_DEVICES} exact component={AddDevice} />\r\n            <Redirect from=\"*\" to={ROUTES.DEVICES} />\r\n        </Switch>\r\n    )\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Dialog,\r\n    IconButton,\r\n    Grid,\r\n    Paper,\r\n    Tabs,\r\n    Tab,\r\n    makeStyles,\r\n    Typography,\r\n    Slide,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TableFooter,\r\n    TablePagination\r\n} from '@material-ui/core'\r\nimport { Close, StarRate } from '@material-ui/icons'\r\nimport network, { CancelToken } from '../../../services/network'\r\nimport { updateLoading } from '../../../redux/components/action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst createStyle = makeStyles({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    icon: {\r\n        position: 'absolute',\r\n        left: 16,\r\n    },\r\n    contentTitle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginBottom: 16\r\n    }\r\n})\r\n\r\nlet cancel\r\n\r\nconst TransitionSlide = React.forwardRef(function(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\nconst Comments = props => {\r\n\r\n    const dispatch = useDispatch()\r\n    const classes = createStyle()\r\n    const [tab, setTab] = useState(4)\r\n    const [ comment, setComment ] = useState({ docs: [], page: 1, pages: 1, limit: 10, total: 0 })\r\n\r\n    useEffect(() => {\r\n        if (props.idLine) {\r\n            requestServer(comment.page, tab)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.idLine ])\r\n\r\n    function requestServer(page = comment.page, star = tab, error) {\r\n        dispatch(updateLoading(true))\r\n        if (cancel) {\r\n            cancel('cancelled')\r\n        }\r\n        network.get(`line/score/${props.idLine}?page=${page}&limit=${comment.limit}&star=${star + 1}`, {\r\n            cancelToken: new CancelToken(c => cancel = c)\r\n        })\r\n        .then(response => {\r\n            dispatch(updateLoading(false))\r\n            setComment({ ...comment, ...response.data })\r\n        })\r\n        .catch(e => {\r\n            if (e && e.message === 'cancelled') {\r\n                return\r\n            }\r\n            if (error) {\r\n                error()\r\n            }\r\n            dispatch(updateLoading(false))\r\n            toast.error('Falha de comunicação com o servidor')\r\n        })\r\n    }\r\n    function buildItems() {\r\n        return comment.docs.map((sc, index) => {\r\n            return (\r\n                <TableRow key={index.toString()}>\r\n                    <TableCell>{sc.user.name}</TableCell>\r\n                    <TableCell>{sc.description}</TableCell>\r\n                    <TableCell>{sc.line.number} - {sc.line.description}</TableCell>\r\n                    <TableCell><Grid container wrap=\"nowrap\">{buildStar(sc.star)}</Grid></TableCell>\r\n                    <TableCell>{new Date(sc.createdAt).toLocaleString()}</TableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n\r\n    function buildStar(star) {\r\n        const stars = []\r\n        for (let i = 0; i < star; i ++) {\r\n            stars[i] = <StarRate key={i.toString()} />\r\n        }\r\n        return stars\r\n    }\r\n\r\n    function renderFooter() {\r\n        return (\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[]}\r\n                count={comment.total}\r\n                page={comment.page - 1}\r\n                onChangePage={(_, page) => {\r\n                    const newPage = page + 1\r\n                    requestServer(newPage)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <Dialog open={props.open} fullScreen TransitionComponent={TransitionSlide} style={{backgroundColor: 'transparent'}}>\r\n            <div className={classes.contentTitle}>\r\n                <IconButton className={classes.icon} onClick={props.onClose}>\r\n                    <Close />\r\n                </IconButton>\r\n                <Typography variant=\"h4\">Comentários</Typography>\r\n            </div>\r\n            <Grid container direction=\"column\" wrap=\"nowrap\">\r\n                <Paper className={classes.root}>\r\n                    <Tabs indicatorColor=\"primary\" textColor=\"primary\" centered value={tab} onChange={(ev, value) => {\r\n                        const oldTab = tab\r\n                        setTab(value)\r\n                        requestServer(1, value, () => setTab(oldTab))\r\n                    }} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"1 estrela\" />\r\n                    <Tab label=\"2 estrelas\"/>\r\n                    <Tab label=\"3 estrelas\" />\r\n                    <Tab label=\"4 estrelas\" />\r\n                    <Tab label=\"5 estrelas\" />\r\n                    </Tabs>\r\n                </Paper>\r\n                <Table size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" >Usuário</TableCell>\r\n                            <TableCell component=\"th\">Mensagem</TableCell>\r\n                            <TableCell component=\"th\">Linha</TableCell>\r\n                            <TableCell component=\"th\">Estrelas</TableCell>\r\n                            <TableCell component=\"th\">Criado em</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { buildItems() }\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                        { renderFooter() }\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </Grid>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default Comments","import { makeStyles } from '@material-ui/core'\r\n\r\nexport default makeStyles(theme => ({\r\n    input: {\r\n        minWidth: '30vw',\r\n        marginLeft: 16\r\n    },\r\n    inputLine: {\r\n        marginLeft: 16\r\n    },\r\n    contentBlockMap: {\r\n        maxHeight: '80vh',\r\n        padding: '16px 0px'\r\n    },\r\n    contentFields: {\r\n        flex: .5,\r\n        display: 'block',\r\n        padding: 8,\r\n        overflowY: 'auto'\r\n    },\r\n    contentMap: {\r\n        flex: 1\r\n    },\r\n    addIconField: {\r\n        padding: '12px 0px'\r\n    },\r\n    iconRemove: {\r\n        '&:hover $iconHiddenRemove': {\r\n            visibility: 'visible !important'\r\n        }\r\n    },\r\n    iconHiddenRemove: {\r\n        visibility: 'hidden'\r\n    },\r\n    contentContainerMap: {\r\n        height: 'calc(80vh - 16px)'\r\n    },\r\n    buttonSave: {\r\n        marginLeft: 16,\r\n        '& svg': {\r\n            marginRight: 10\r\n        }\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        padding: 32,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n        marginTop: 32,\r\n        width: '100%'\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    inputSearch: {\r\n        minWidth: '50%'\r\n    },\r\n    tableCellFooter: {\r\n        paddingRight: '32px !important'\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        zIndex: 1\r\n    }\r\n}))","import React, { useEffect, useState } from 'react'\r\nimport { requestLines, removeLine } from '../../../redux/lines/action'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableFooter,\r\n    TablePagination,\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button,\r\n    Fab\r\n} from '@material-ui/core'\r\nimport { Search, Delete, Add } from '@material-ui/icons'\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ROUTES } from '../../../utils/constants'\r\nimport { compose } from 'recompose'\r\nimport createStyle from '../styles'\r\n\r\nconst Lines = props => {\r\n\r\n    const classes = createStyle()\r\n    const subject = new Subject()\r\n    subject\r\n    .pipe(debounceTime(300))\r\n    .subscribe(value => {\r\n        setText(value)\r\n        props.requestLines(1, 10, value)\r\n    })\r\n    \r\n    const [ text, setText ] = useState('')\r\n    useEffect(() => {\r\n        if (props.location.pathname === ROUTES.LINES) {\r\n            props.requestLines(props.page, props.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n        }\r\n        return () => subject.complete()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.location.pathname ])\r\n    function requestServer(page = props.page) {\r\n        if (!props.isLoading) {\r\n            props.requestLines(page, props.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function renderFooter() {\r\n        return (\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[]}\r\n                count={props.total}\r\n                page={props.page - 1}\r\n                onChangePage={(_, page) => {\r\n                    const newPage = page + 1\r\n                    requestServer(newPage)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function buildItems() {\r\n        return props.docs.map(line => {\r\n            return (\r\n                <TableRow onClick={() => props.history.push(ROUTES.ADD_LINES.concat(`/${line._id}`))} hover key={line._id}>\r\n                    <TableCell align=\"center\">{line.number}</TableCell>\r\n                    <TableCell align=\"center\">{line.description}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                        <Button onClick={ev => {\r\n                            ev.stopPropagation()\r\n                            props.removeLine(line._id, () => {\r\n                                toast.success('Linha removida com sucesso')\r\n                                requestServer()\r\n                            }, () => toast.error('Falha ao remover linha'))\r\n                        }} color=\"secondary\">\r\n                            <Delete className={classes.rightIcon} />\r\n                            <span>Remover</span>\r\n                        </Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <Grid container>\r\n            <Grid className={classes.root}>\r\n                    <TextField\r\n                        onChange={ev => subject.next(ev.target.value)}\r\n                        className={classes.inputSearch}\r\n                        variant=\"outlined\"\r\n                        label=\"Procurar\"\r\n                        placeholder=\"Digite aqui para buscar por número ou descrição\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestLines(1, 10, text)}><Search /></IconButton></InputAdornment>\r\n                        }}\r\n                    />\r\n                    <Paper className={classes.tableWrapper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" component=\"th\" >Número</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\">Descrição</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\">Ação</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                { buildItems() }\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                <TableRow>\r\n                                { renderFooter() }\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </Paper>\r\n                </Grid>\r\n                <Fab onClick={() => props.history.push(ROUTES.ADD_LINES)} className={classes.fab} color=\"primary\">\r\n                    <Add />\r\n                </Fab>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.line.data,\r\n    isLoading: state.component.loading,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { requestLines, removeLine }),\r\n    withRouter\r\n)(Lines)\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function(props) {\r\n  return (\r\n    <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\r\n    <DialogTitle id=\"form-dialog-title\">{ props.title }</DialogTitle>\r\n    <DialogContent>\r\n        <DialogContentText>\r\n        { props.message }\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          onChange={ props.onChange }\r\n          margin=\"dense\"\r\n          label={ props.label }\r\n          fullWidth\r\n          value={props.text}\r\n        />\r\n    </DialogContent>\r\n    <DialogActions>\r\n        <Button onClick={props.onCancel} color=\"primary\">\r\n            { props.textCancel }\r\n        </Button>\r\n        <Button onClick={props.onConfirm} color=\"primary\">\r\n            { props.textButton }\r\n        </Button>\r\n    </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Tab, Tabs, Chip, makeStyles } from '@material-ui/core'\r\nimport { KeyboardTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\r\nimport { toast } from 'react-toastify'\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\n\r\nconst createStyles = makeStyles(theme => ({\r\n  chip: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nexport default function(props) {\r\n\r\n    const classes = createStyles()\r\n    const [ tab, setTab ] = useState(0)\r\n    const [ date, setDate ] = useState(new Date())\r\n    const [ horary, setHorary ] = useState({ mondayToSaturday: [], sundayAndHoliday: [] })\r\n\r\n    useEffect(() => {\r\n      setHorary(old => {\r\n        const newValue = {...old}\r\n        for (const index in props.horary) {\r\n          if (newValue[index]) {\r\n            newValue[index] = [...props.horary[index]]\r\n          }\r\n        }\r\n        return newValue\r\n      })\r\n      return () => setHorary({ mondayToSaturday: [], sundayAndHoliday: [] })\r\n    }, [ props.horary, props.open ])\r\n\r\n    function buildChips(filter) {\r\n      return sortHorary(horary[filter]).map((time, index) => {\r\n        return <Chip\r\n          className={classes.chip}\r\n          key={index.toString()}\r\n          label={ time }\r\n          onDelete={() => onDelete(tab === 0 ? 'mondayToSaturday' : 'sundayAndHoliday', index)}\r\n          color=\"primary\"\r\n        />\r\n      })\r\n    }\r\n\r\n    function onDelete(filter, index) {\r\n      setHorary(old => {\r\n        const newHorary = {...old}\r\n        newHorary[filter].splice(index, 1)\r\n        return newHorary\r\n      })\r\n    }\r\n\r\n    function sortHorary(values) {\r\n      return values.sort((a, b) => Number(a.split(':').join('')) - Number(b.split(':').join('')))\r\n    }\r\n\r\n    return (\r\n      <Dialog onClose={() => props.onOpen(false, horary)} fullWidth={true} maxWidth=\"sm\" open={props.open} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">Definir Horários</DialogTitle>\r\n      <DialogContent>\r\n        <Tabs\r\n          value={tab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={(_, newValue) => setTab(newValue)}\r\n          centered\r\n        >\r\n          <Tab label=\"Segunda - Sábado\" />\r\n          <Tab label=\"Domingo e feriados\" />\r\n        </Tabs>\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardTimePicker\r\n                okLabel=\"Ok\"\r\n                cancelLabel=\"Cancelar\"\r\n                margin=\"normal\"\r\n                label=\"Horário de saída\"\r\n                onChange={(date, time) => {\r\n                  const hour = date.getHours()\r\n                  const minutes = date.getMinutes()\r\n                  const filterDate = tab === 0 ? 'mondayToSaturday' : 'sundayAndHoliday'\r\n                  const timeString = `${hour.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`\r\n                  if (horary[filterDate].some(time => time === timeString)) {\r\n                    toast.info('Horário já incluso.', { autoClose: 2000 })\r\n                  } else {\r\n                    setDate(date)\r\n                    setHorary({ ...horary, [filterDate]: sortHorary([...horary[filterDate], timeString]) })\r\n                  }\r\n                }}\r\n                value={date}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        { buildChips(tab === 0 ? 'mondayToSaturday' : 'sundayAndHoliday') }\r\n      </DialogContent>\r\n      <DialogActions>\r\n          <Button onClick={() => props.onOpen(false)} color=\"primary\">\r\n              Cancelar\r\n          </Button>\r\n          <Button onClick={() => props.onOpen(false, horary)} color=\"primary\">\r\n              Salvar\r\n          </Button>\r\n      </DialogActions>\r\n      </Dialog>\r\n    )\r\n}","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Grid, TextField, IconButton, InputAdornment, Paper, Button, Fab } from '@material-ui/core'\r\nimport globalStyle from '../../../style/global'\r\nimport { Clear, AddCircle, Search, Save } from '@material-ui/icons'\r\nimport clsx from 'clsx'\r\nimport Maps from '../../../components/Map'\r\nimport { DirectionsRenderer, Marker, OverlayView } from 'react-google-maps'\r\nimport { toast } from 'react-toastify'\r\nimport localStyles from '../styles'\r\nimport DialogInput from '../../../components/dialogInput'\r\nimport { connect } from 'react-redux'\r\nimport { createLine, getLineById, editLine } from '../../../redux/lines/action'\r\nimport DialogHorary from './horary'\r\n\r\nconst AddLine = props => {\r\n\r\n    const classes = globalStyle()\r\n    const styles = localStyles()\r\n    const refDirections = useRef(null)\r\n    const { id } = props.match.params\r\n    const [ directions, setDirections ] = useState()\r\n    const [ horary, setHorary ] = useState({ mondayToSaturday: [], sundayAndHoliday: [] })\r\n    const [ information, setInformation ] = useState({ line: '', description: '', errorLine: '', errorDescription: '' })\r\n    const [ routes, setRoutes ] = useState([ { route: '' }, { route: '' } ])\r\n    const [ markers, setMarkers ] = useState([])\r\n    const [ dialog, setDialog ] = useState({ index: null, text: '', open: false })\r\n    const [ load, setLoad ] = useState(false)\r\n    const [ openDialogHorary, setOpenDialogHorary ] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        window.initMap = () => setLoad(true)\r\n        if (id) {\r\n            props.getLineById(id, () => {\r\n                toast.error('Falha ao buscar dados da linha, tente novamente')\r\n                props.history.goBack()\r\n            })\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ ])\r\n\r\n    useEffect(() => {\r\n        if (props.line && Object.keys(props.line).length && window.google) {\r\n            setRoutes([ ...props.line.routes ])\r\n            setMarkers([ ...props.line.points ])\r\n            if (props.line.horary) {\r\n                setHorary({...props.line.horary})\r\n            }\r\n            const { google } = window\r\n            const DirectionService = new google.maps.DirectionsService()\r\n            const routes = []\r\n            routes.push(props.line.directions.request.origin)\r\n            routes.push(...props.line.directions.request.waypoints)\r\n            routes.push(props.line.directions.request.destination)\r\n            const origin = routes[0]\r\n            const destination = routes[routes.length - 1]\r\n            const options = {\r\n                origin: filterRoute(origin),\r\n                destination: filterRoute(destination),\r\n                waypoints: routes.filter((_, index) => index !== 0 && index !== routes.length - 1)\r\n                .map(filterRoute),\r\n                optimizeWaypoints: true,\r\n                travelMode: google.maps.TravelMode.DRIVING,\r\n                avoidTolls: true\r\n            }\r\n            DirectionService.route(options, (result, status) => {\r\n                if (status === google.maps.DirectionsStatus.OK) {\r\n                    setDirections({ ...directions, ...result })\r\n                } else if (status === google.maps.DirectionsStatus.NOT_FOUND) {\r\n                    toast.error('Rota não encontrada, verifique os caminhos inseridos')\r\n                } else {\r\n                    toast.error('Falha ao requisitar rota')\r\n                }\r\n            })\r\n            setInformation({ line: props.line.number, description: props.line.description })\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.line, load ])\r\n\r\n    function filterRoute(route) {\r\n        const { google } = window\r\n        if ('location' in route) {\r\n            return route\r\n        } else if ('query' in route) {\r\n            return route.query\r\n        }\r\n        return new google.maps.LatLng(route.lat, route.lng)\r\n    }\r\n\r\n    function buildInputRoutes() {\r\n        return routes.map((content, index) => {\r\n            return (\r\n                <Grid alignItems=\"center\" className={clsx(styles.addIconField, { [styles.iconRemove]: routes.length > 2 })} container key={index.toString()} wrap=\"nowrap\">\r\n                    <TextField\r\n                        className={classes.maxWidth}\r\n                        value={content.route}\r\n                        onChange={ev => {\r\n                            const value = ev.target.value\r\n                            setRoutes(old => {\r\n                                const newRoutes = [...old]\r\n                                newRoutes[index].route = value\r\n                                return newRoutes\r\n                            })\r\n                        }}\r\n                        placeholder={index === 0 ? 'Informe início da rota' : index === routes.length - 1 ? \"Informe destino final\" : 'Informe caminho'}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton onClick={buildRoutes} edge=\"end\">\r\n                                        <Search />\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={() => {\r\n                        setRoutes([...routes.filter((_, i) => index !== i)])\r\n                    }} className={styles.iconHiddenRemove}><Clear /></IconButton>\r\n                </Grid>\r\n            )\r\n        })\r\n    }\r\n\r\n    function buildRoutes() {\r\n        if (!routes.every(content => !!content.route)) {\r\n            toast.error('Existe campo de rota sem preenchimento')\r\n        } else {\r\n            const { google } = window\r\n            const DirectionService = new google.maps.DirectionsService()\r\n            const options = {\r\n                origin: routes[0].route,\r\n                destination: routes[routes.length - 1].route,\r\n                waypoints: routes.filter((_, index) => index !== 0 && index !== routes.length - 1).map(content => ({location: content.route, stopover: true})),\r\n                optimizeWaypoints: true,\r\n                travelMode: google.maps.TravelMode.DRIVING,\r\n                avoidTolls: true\r\n            }\r\n            DirectionService.route(options, (result, status) => {\r\n                if (status === google.maps.DirectionsStatus.OK) {\r\n                    setDirections({ ...directions, ...result })\r\n                } else if (status === google.maps.DirectionsStatus.NOT_FOUND) {\r\n                    toast.error('Rota não encontrada, verifique os caminhos inseridos')\r\n                } else {\r\n                    toast.error('Falha ao requisitar rota')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function validateForms() {\r\n        let formOk = true\r\n        const info = { ...information }\r\n        if (!props.loading) {\r\n            if (!info.line) {\r\n                info.errorLine = 'Campo vazio'\r\n                formOk = false\r\n            }\r\n            if (!info.description) {\r\n                info.errorDescription = 'Campo vazio'\r\n                formOk = false\r\n            }\r\n            if (!formOk) {\r\n                setInformation(info)\r\n                return\r\n            } else {\r\n                saveLine()\r\n            }\r\n        }\r\n    }\r\n\r\n    function saveLine() {\r\n        if (refDirections.current) {\r\n            const directions = refDirections.current.getDirections()\r\n            const body = {\r\n                number: information.line,\r\n                description: information.description,\r\n                routes,\r\n                directions: {\r\n                    request: directions.request,\r\n                    routes: directions.routes[0].overview_path\r\n                },\r\n                points: markers,\r\n                horary\r\n            }\r\n            const callbackError = message => ({ response }) => {\r\n                if (response && response.status === 409) {\r\n                    toast.error('Já existe uma linha cadastrada com esse número')\r\n                } else {\r\n                    toast.error(message)\r\n                }\r\n            }\r\n            if (id) {\r\n                body._id = props.line._id\r\n                props.editLine(body, () => {\r\n                    toast.success('Linha editada com sucesso')\r\n                    props.history.goBack()\r\n                }, callbackError('Falha ao editar linha'))\r\n            } else {\r\n                props.createLine(body, () => {\r\n                    toast.success('Linha cadastrada com sucesso')\r\n                    props.history.goBack()\r\n                }, callbackError('Falha ao criar linha'))\r\n            }\r\n        } else {\r\n            toast.info('Busque pela rota adicionada para renderizar no mapa')\r\n        }\r\n    }\r\n\r\n    function onConfirm() {\r\n        if (!dialog.text) {\r\n            toast.info('Informe o nome do marcador')\r\n        } else {\r\n            if (dialog.index !== null) {\r\n                setMarkers(old => {\r\n                    const newMarkers = [...old]\r\n                    newMarkers[dialog.index].name = dialog.text\r\n                    return newMarkers\r\n                })\r\n            }\r\n            setDialog({ ...dialog, text: '', open: false, index: null })\r\n        }\r\n    }\r\n\r\n    function buildMarkers() {\r\n        const callbackCloseOverlay = index => _ => {\r\n            setMarkers(old => {\r\n                const newMarkers = [...old]\r\n                newMarkers[index].showOverlayView = !newMarkers[index].showOverlayView\r\n                return newMarkers\r\n            })\r\n         }\r\n        return markers.map((marker, index) => {\r\n            return (\r\n                <React.Fragment key={index.toString()}>\r\n                    <Marker onClick={callbackCloseOverlay(index)} title={marker.name} clickable={true} draggable={true} position={{ lat: marker.lat, lng: marker.lng }} />\r\n                    {\r\n                        marker.showOverlayView &&\r\n                        <OverlayView mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}  position={{ lat: marker.lat, lng: marker.lng }}>\r\n                            <Paper className={classes.container}>\r\n                                <Grid container direction=\"column\">\r\n                                    <h4>Nome do ponto: {marker.name}</h4>\r\n                                    <Button onClick={callbackCloseOverlay(index)}>Fechar</Button>\r\n                                    <Button onClick={() => {\r\n                                        setDialog({ ...dialog, index, text: marker.name, open: true })\r\n                                        callbackCloseOverlay(index)()\r\n                                    }}>Editar</Button>\r\n                                    <Button onClick={() => setMarkers([ ...markers.filter((_, i) => index !== i) ])}>Remover</Button>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </OverlayView>\r\n\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <Grid container className={classes.container} wrap=\"nowrap\" direction=\"column\">\r\n            <Grid alignItems=\"center\" container>\r\n                <h2>Informação: </h2>\r\n                <TextField\r\n                    className={styles.inputLine}\r\n                    value={information.line}\r\n                    onChange={ev => setInformation({ ...information, line: ev.target.value, errorLine: '' })}\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    label=\"Linha\"\r\n                    InputProps={{inputProps:{min: 0}}}\r\n                    placeholder=\"Número da linha\"\r\n                    error={!!information.errorLine}\r\n                    helperText={information.errorLine}\r\n                />\r\n                <TextField\r\n                    value={information.description}\r\n                    onChange={ev => setInformation({ ...information, description: ev.target.value, errorDescription: '' })}\r\n                    className={styles.input}\r\n                    variant=\"outlined\"\r\n                    label=\"Descrição\"\r\n                    placeholder=\"Informe a descrição\"\r\n                    error={!!information.errorDescription}\r\n                    helperText={information.errorDescription}\r\n                />\r\n                <Button variant=\"contained\" onClick={() => setOpenDialogHorary(true)} className={styles.buttonSave} color=\"primary\">\r\n                    <span>Horários</span>\r\n                </Button>\r\n            </Grid>\r\n            <Grid className={styles.contentBlockMap} container>\r\n                <Paper className={classes.maxWidth}>\r\n                    <Grid container wrap=\"nowrap\" className={styles.contentContainerMap}>\r\n                        <Grid className={styles.contentFields} container>\r\n                            { buildInputRoutes() }\r\n                            <IconButton className={styles.addIconField} onClick={() => setRoutes([...routes, { route: '' }])}>\r\n                                <AddCircle />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid className={styles.contentMap} container>\r\n                            <Maps onClick={({latLng}) => {\r\n                                if (!markers.some(marker => marker.showOverlayView)) {\r\n                                    setMarkers([ ...markers, { lat: latLng.lat(), lng: latLng.lng(), showOverlayView: false, name: '' } ])\r\n                                    setDialog({ ...dialog, index: markers.length, open: true })\r\n                                }\r\n                            }}>\r\n                                { directions && <DirectionsRenderer ref={refDirections} options={{draggable: true}} directions={directions} /> }\r\n                                { buildMarkers() }\r\n                            </Maps>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <DialogInput\r\n                open={dialog.open}\r\n                title=\"Atenção\"\r\n                message=\"Informe o nome do marcador\"\r\n                label=\"Nome\"\r\n                onChange={ev => setDialog({ ...dialog, text: ev.target.value })}\r\n                onConfirm={onConfirm}\r\n                textButton=\"Salvar\"\r\n                text={dialog.text}\r\n                textCancel=\"Cancelar\"\r\n                onCancel={() => setDialog({ ...dialog, text: '', index: null, open: false })}\r\n            />\r\n            <Fab variant=\"extended\" onClick={validateForms} className={clsx(styles.buttonSave, styles.fab)} color=\"primary\">\r\n                <Save />\r\n                <span>SALVAR</span>\r\n            </Fab>\r\n            <DialogHorary onOpen={(value, newHorary) => {\r\n                setOpenDialogHorary(value)\r\n                if (newHorary) {\r\n                    setHorary({...newHorary})\r\n                }\r\n            }} open={openDialogHorary} horary={horary} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ loading: state.component.loading, line: state.line.lineEdited })\r\n\r\nexport default connect(mapStateToProps, { createLine, getLineById, editLine })(AddLine)","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport List from './components/list'\r\nimport Add from './components/add'\r\nimport { ROUTES } from '../../utils/constants'\r\n\r\nexport default () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={ROUTES.LINES} exact component={List} />\r\n            <Route path={ROUTES.ADD_LINES} exact component={Add} />\r\n            <Route path={ROUTES.ADD_LINES.concat('/:id')} exact component={Add} />\r\n            <Redirect from=\"*\" to={ROUTES.LINES} />\r\n        </Switch>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nexport default makeStyles(theme => ({\r\n    input: {\r\n        minWidth: '30vw',\r\n        marginLeft: 16\r\n    },\r\n    inputLine: {\r\n        marginLeft: 16\r\n    },\r\n    contentBlockMap: {\r\n        maxHeight: '80vh',\r\n        padding: '16px 0px'\r\n    },\r\n    contentFields: {\r\n        flex: .5,\r\n        display: 'block',\r\n        padding: 8,\r\n        overflowY: 'auto'\r\n    },\r\n    contentMap: {\r\n        flex: 1\r\n    },\r\n    addIconField: {\r\n        padding: '12px 0px'\r\n    },\r\n    iconRemove: {\r\n        '&:hover $iconHiddenRemove': {\r\n            visibility: 'visible !important'\r\n        }\r\n    },\r\n    iconHiddenRemove: {\r\n        visibility: 'hidden'\r\n    },\r\n    contentContainerMap: {\r\n        height: 'calc(80vh - 16px)'\r\n    },\r\n    buttonSave: {\r\n        marginLeft: 16,\r\n        '& svg': {\r\n            marginRight: 10\r\n        }\r\n    },\r\n    inputRegisterNews: {\r\n        width: '50vw',\r\n        marginTop: 16\r\n    },\r\n    textMessage: {\r\n        margin: '16px 0px'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        padding: 32,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n        marginTop: 32,\r\n        width: '100%'\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    inputSearch: {\r\n        minWidth: '50%'\r\n    },\r\n    tableCellFooter: {\r\n        paddingRight: '32px !important'\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2)\r\n    }\r\n}))","import React, { useEffect, useState } from 'react'\r\nimport { requestNews, removeNews } from '../../../redux/news/action'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableFooter,\r\n    TablePagination,\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button,\r\n    Fab\r\n} from '@material-ui/core'\r\nimport { Search, Delete, Add } from '@material-ui/icons'\r\nimport { Subject } from 'rxjs'\r\nimport { debounceTime } from 'rxjs/operators'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ROUTES } from '../../../utils/constants'\r\nimport { compose } from 'recompose'\r\nimport createStyle from '../styles'\r\nimport parser from 'html-react-parser'\r\n\r\nconst News = props => {\r\n\r\n    const classes = createStyle()\r\n    const subject = new Subject()\r\n    subject\r\n    .pipe(debounceTime(300))\r\n    .subscribe(value => {\r\n        setText(value)\r\n        props.requestNews(1, 10, value)\r\n    })\r\n    \r\n    const [ text, setText ] = useState('')\r\n    useEffect(() => {\r\n        if (props.location.pathname === ROUTES.NEWS) {\r\n            props.requestNews(props.page, props.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n        }\r\n        return () => subject.complete()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.location.pathname ])\r\n    function requestServer(page = props.page) {\r\n        if (!props.isLoading) {\r\n            props.requestNews(page, props.limit, text, () => {\r\n                toast.error('Falha na comunicação com o servidor')\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function renderFooter() {\r\n        return (\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\r\n                rowsPerPage={10}\r\n                rowsPerPageOptions={[]}\r\n                count={props.total}\r\n                page={props.page - 1}\r\n                onChangePage={(_, page) => {\r\n                    const newPage = page + 1\r\n                    requestServer(newPage)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function buildItems() {\r\n        return props.docs.map(news => {\r\n            return (\r\n                <TableRow onClick={() => props.history.push(ROUTES.ADD_NEWS.concat(`/${news._id}`))} hover key={news._id}>\r\n                    <TableCell>{news.author ? news.author.name : ''}</TableCell>\r\n                    <TableCell>{news.title}</TableCell>\r\n                    <TableCell>{parser(news.message)}</TableCell>\r\n                    <TableCell>{new Date(news.createdAt).toLocaleString()}</TableCell>\r\n                    <TableCell>\r\n                        <Button onClick={ev => {\r\n                            ev.stopPropagation()\r\n                            props.removeNews(news._id, () => {\r\n                                toast.success('Notícia removida com sucesso')\r\n                                requestServer()\r\n                            }, () => toast.error('Falha ao remover notícia'))\r\n                        }} color=\"secondary\">\r\n                            <Delete className={classes.rightIcon} />\r\n                            <span>Remover</span>\r\n                        </Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <Grid container>\r\n            <Grid className={classes.root}>\r\n                    <TextField\r\n                        onChange={ev => subject.next(ev.target.value)}\r\n                        className={classes.inputSearch}\r\n                        variant=\"outlined\"\r\n                        label=\"Procurar\"\r\n                        placeholder=\"Digite aqui para filtrar\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestNews(1, 10, text)}><Search /></IconButton></InputAdornment>\r\n                        }}\r\n                    />\r\n                    <Paper className={classes.tableWrapper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" component=\"th\" >Autor</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\">Título</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\">Mensagem</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\">Criado em</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\">Ação</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                { buildItems() }\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                <TableRow>\r\n                                { renderFooter() }\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </Paper>\r\n                </Grid>\r\n                <Fab onClick={() => props.history.push(ROUTES.ADD_NEWS)} className={classes.fab} color=\"primary\">\r\n                    <Add />\r\n                </Fab>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.news.data,\r\n    isLoading: state.component.loading,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { requestNews, removeNews }),\r\n    withRouter\r\n)(News)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, Typography, Fab } from '@material-ui/core'\r\nimport createStyle from '../../../style/global'\r\nimport createLocalStyle from '../styles'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { createNews, editNews, getNewsById, clearNewsEdit } from '../../../redux/news/action'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst AddNews = props => {\r\n\r\n    const classes = createStyle()\r\n    const localClasses = createLocalStyle()\r\n    const [ editorState, setEditorState ] = useState(EditorState.createEmpty())\r\n    const [ title, setTitle ] = useState('')\r\n    const { id } = props.match.params\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            props.getNewsById(id, () => toast.error('Falha na comunicação com o servidor, tente novamente'))\r\n        }\r\n        return () => props.clearNewsEdit()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [  ])\r\n\r\n    useEffect(() => {\r\n        if (props.newsEdit) {\r\n            const { message, title } = props.newsEdit\r\n            setTitle(title)\r\n            const blocksFromHtml = htmlToDraft(message)\r\n            const { contentBlocks, entityMap } = blocksFromHtml\r\n            const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap)\r\n            setEditorState(EditorState.createWithContent(contentState))\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ props.newsEdit ])\r\n\r\n    function saveNews() {\r\n        const message = draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n        if (title && message) {\r\n            const body = {\r\n                title,\r\n                message, \r\n                author: props.user._id,\r\n            }\r\n            const callbackSuccess = message => () => {\r\n                toast.success(message)\r\n                props.history.goBack()\r\n            }\r\n            const callbackError = message => () => toast.error(message)\r\n            if (id) {\r\n                body._id = id\r\n                props.editNews(body, callbackSuccess('Notícia editada com sucesso'), callbackError('Falha ao editar notícia'))\r\n            } else {\r\n                props.createNews(body, callbackSuccess('Notícia registrada com sucesso'), callbackError('Falha ao registrar notícia'))\r\n            }\r\n        } else\r\n            toast.info('Verifique os campos')\r\n    }\r\n\r\n    return(\r\n        <Grid className={classes.container} container direction=\"column\" wrap=\"nowrap\">\r\n            <Typography variant=\"h4\">Notícia:</Typography>\r\n            <TextField\r\n                value={title}\r\n                onChange={ev => setTitle(ev.target.value)}\r\n                className={localClasses.inputRegisterNews}\r\n                placeholder=\"Informe título\"\r\n                label=\"Título\"\r\n                inputProps={{\r\n                    maxLength: 100\r\n                }}\r\n            />\r\n            <Typography className={localClasses.textMessage} variant=\"h5\">Mensagem:</Typography>\r\n            <Grid style={{backgroundColor: '#FFF', minHeight: 400}}>\r\n                <Editor editorClassName=\"editor\" editorState={editorState} onEditorStateChange={state => setEditorState(state)} />\r\n            </Grid>\r\n            <Fab onClick={saveNews} variant=\"extended\" color=\"primary\" className={localClasses.fab}>\r\n                <span>Salvar</span>\r\n            </Fab>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ newsEdit: state.news.newsEdit, user: state.home.user })\r\n\r\nexport default connect(mapStateToProps, { createNews, editNews, getNewsById, clearNewsEdit })(AddNews)","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport List from './components/list'\r\nimport Add from './components/add'\r\nimport { ROUTES } from '../../utils/constants'\r\n\r\nexport default () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={ROUTES.NEWS} exact component={List} />\r\n            <Route path={ROUTES.ADD_NEWS} exact component={Add} />\r\n            <Route path={ROUTES.ADD_NEWS.concat('/:id')} exact component={Add} />\r\n            <Redirect from=\"*\" to={ROUTES.NEWS} />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LinearProgress } from '@material-ui/core'\r\nimport createStyle from '../style/global'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function(){\r\n    \r\n    const classes = createStyle()\r\n    const loading = useSelector(state => state.component.loading)\r\n    if (!loading) {\r\n        return <div></div>\r\n    }\r\n    return (\r\n        <LinearProgress color=\"primary\" className={classes.linearProgress} />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport createStyleLocal from '../style' \r\nimport { Paper, Typography, Icon, Grid, IconButton } from '@material-ui/core'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport { Replay } from '@material-ui/icons'\r\n\r\nconst Card = props => {\r\n\r\n    const { title, content, icon, isLoading, error, buttonError, styleIcon, textColors, styleCard } = props\r\n    const classesLocal = createStyleLocal()\r\n    const checkLoading = () => {\r\n        if (isLoading) {\r\n            return <Skeleton circle={true} height={50} width={50} />\r\n        } else if (error) {\r\n            return (\r\n                <div>\r\n                    <IconButton onClick={buttonError} >\r\n                        <Replay style={textColors && {color: textColors}} />\r\n                    </IconButton>\r\n                </div>\r\n            )\r\n        }\r\n        return <Typography style={textColors && {color: textColors}} className={classesLocal.result} variant=\"h4\">{content}</Typography>\r\n    }\r\n\r\n    return (\r\n        <Grid className={classesLocal.card} item xs={12} sm={4} md={4} lg={3} xl={3}>\r\n            <Paper style={styleCard} className={classesLocal.paper}>\r\n                <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\r\n                    <Grid className={classesLocal.contentInformation} item container direction=\"column\">\r\n                        <p style={textColors && {color: textColors}}>{title}</p>\r\n                        { checkLoading() }\r\n                    </Grid>\r\n                    <Grid className={classesLocal.contentIcon} container>\r\n                        <Icon className={classesLocal.icon} style={styleIcon}>{icon}</Icon>\r\n                    </Grid>\r\n                </Grid>                      \r\n            </Paper>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Card","import React, { useEffect, useState } from 'react'\r\nimport { Grid, Paper, Divider, Typography, Button, IconButton } from '@material-ui/core'\r\nimport { Replay } from '@material-ui/icons'\r\nimport createStyle from '../../../style/global'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport DialogRadio from '../../../components/dialogRadio'\r\nimport { connect } from 'react-redux'\r\nimport { requestScore } from '../../../redux/home/actions'\r\nimport { requestLines } from '../../../redux/devices/action'\r\nimport { toast } from 'react-toastify'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport Comments from './Comments'\r\n\r\nfunction InformationLine(props) {\r\n\r\n    const DEFAULT_VALUE = { _id: 'all', description: 'Todas as linhas', number: null }\r\n    const classes = createStyle()\r\n    const [ open, setOpenDialog ] = useState(false)\r\n    const [ comments, setComments ] = useState({ open: false, id: '' })\r\n    const [ value, setValueFilter ] = useState(DEFAULT_VALUE)\r\n\r\n    useEffect(() => {\r\n      props.requestLines()\r\n      props.requestScore()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [  ])\r\n\r\n    function onClose(id) {\r\n      setOpenDialog(false)\r\n      if (id) {\r\n        getScore(id)\r\n      }\r\n    }\r\n\r\n    function getScore(id) {\r\n      props.requestScore(\r\n        id || DEFAULT_VALUE._id,\r\n        setValueFilter({ ...value, ...(props.lines.find(line => line._id === id) || DEFAULT_VALUE) }),\r\n        () => toast.error('Falha ao fazer filtragem'))\r\n    }\r\n\r\n    function loadChart() {\r\n      if (props.errorToLoadScore) {\r\n        return (\r\n          <IconButton onClick={() => getScore()}>\r\n              <Replay />\r\n          </IconButton>\r\n        )\r\n      } else if (props.isLoadingScore) {\r\n        return <Skeleton height={200} width={400} />\r\n      } else if (props.score.every(value => !value)) {\r\n        return <Typography variant=\"h5\">Sem registro de score</Typography>\r\n      } else {\r\n        return (\r\n          <Grid container item sm={5}>\r\n              <Doughnut\r\n                data={{\r\n                datasets: [{\r\n                    data: props.score,\r\n                    backgroundColor: [\r\n                    '#FF6384',\r\n                    '#36A2EB',\r\n                    '#FFCE56',\r\n                    '#56ff5e',\r\n                    '#6756ff'\r\n                    ]\r\n                }],\r\n                labels: [ '1 estrela', '2 estrelas', '3 estrelas', '4 estrelas', '5 estrelas' ]\r\n             }}\r\n            />\r\n          </Grid>\r\n        )\r\n      }\r\n    }\r\n    const lines = [ DEFAULT_VALUE, ...props.lines ]\r\n    return (\r\n      <Grid item className={classes.container}>\r\n        <Paper>\r\n          <Grid\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            container\r\n            wrap=\"nowrap\"\r\n            className={classes.container}\r\n          >\r\n            <Typography variant=\"h5\">Pontuação das linhas</Typography>\r\n            <Grid>\r\n              { (value._id !== 'all' && props.score.some(value => value)) &&\r\n              <Button color=\"primary\" variant=\"outlined\" onClick={() => setComments({ open: true, id: value._id })}>Ver comentários</Button>}\r\n              <Button onClick={() => setOpenDialog(true)}>Filtro: {value.number} - {value.description}</Button>\r\n              <IconButton onClick={() => getScore()}>\r\n                <Replay />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid container justify=\"center\" alignItems=\"center\" style={{minHeight: 200}}>\r\n            { loadChart() }\r\n          </Grid>\r\n        </Paper>\r\n        <DialogRadio\r\n            open={open}\r\n            options={lines}\r\n            title=\"Filtrar\"\r\n            textCancel=\"Cancelar\"\r\n            textConfirm=\"Ok\"\r\n            value={value._id}\r\n            onClose={onClose}\r\n        />\r\n        <Comments\r\n          idLine={comments.id}\r\n          open={comments.open}\r\n          onClose={() => setComments({ open: false, id: '' })}\r\n        />\r\n      </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lines: state.device.lines,\r\n  errorToLoadLines: state.device.errorToLoadLines,\r\n  score: state.home.score,\r\n  isLoadingScore: state.home.isLoadingScore,\r\n  errorToLoadScore: state.home.errorToLoadScore\r\n})\r\n\r\nexport default connect(mapStateToProps, { requestLines, requestScore })(InformationLine)\r\n","import React, { useEffect } from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport createStyle from \"../style\"\r\nimport createGlobalStyle from '../../../style/global'\r\nimport Card from \"./Card\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  requestTotalUsers,\r\n  requestTotalDevices,\r\n  requestTotalLines,\r\n} from \"../../../redux/home/actions\"\r\nimport InformationLine from './InformationLine'\r\nimport Auth from '../../auth/auth'\r\n\r\nfunction Dashboard(props) {\r\n  const classes = createStyle()\r\n  const globalClasses = createGlobalStyle()\r\n\r\n  useEffect(() => {\r\n    props.requestTotalUsers()\r\n    props.requestTotalDevices()\r\n    props.requestTotalLines()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Auth>\r\n      <Grid className={globalClasses.maxWidth}>\r\n        <Grid className={classes.contentCard} justify=\"space-between\" container>\r\n            <Card\r\n                buttonError={() => props.requestTotalDevices()}\r\n                error={props.errorLoadTotalDevices}\r\n                isLoading={props.isLoadingTotalDevices}\r\n                icon=\"location_on\"\r\n                title=\"Total de dispositivos\"\r\n                content={props.totalDevices}\r\n            />\r\n            <Card\r\n                buttonError={() => props.requestTotalLines()}\r\n                error={props.errorLoadTotalLines}\r\n                isLoading={props.isLoadingTotalLines}\r\n                styleIcon={{backgroundColor: \"rgb(251, 140, 0)\"}}\r\n                icon=\"directions\"\r\n                title=\"Total de linhas\"\r\n                content={props.totalLines}\r\n            />\r\n            <Card\r\n                buttonError={() => props.requestTotalUsers()}\r\n                error={props.errorLoadTotalUsers}\r\n                isLoading={props.isLoadingTotalUsers}\r\n                textColors=\"#FFF\"\r\n                styleIcon={{backgroundColor: \"#FFF\", color: '#000'}}\r\n                styleCard={{backgroundColor: '#3f51b5', color: '#FFF'}}\r\n                icon=\"people_outline\"\r\n                title=\"Total de usuários\"\r\n                content={props.totalUsers}\r\n            />\r\n        </Grid>\r\n        <InformationLine />\r\n      </Grid>\r\n    </Auth>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingTotalUsers: state.home.isLoadingTotalUsers,\r\n  totalUsers: state.home.totalUsers,\r\n  errorLoadTotalUsers: state.home.errorLoadTotalUsers,\r\n  totalDevices: state.home.totalDevices,\r\n  isLoadingTotalDevices: state.home.isLoadingTotalDevices,\r\n  errorLoadTotalDevices: state.home.errorLoadTotalDevices,\r\n  totalLines: state.home.totalLines,\r\n  isLoadingTotalLines: state.home.isLoadingTotalLines,\r\n  errorLoadTotalLines: state.home.errorLoadTotalLines\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { requestTotalUsers, requestTotalDevices, requestTotalLines }\r\n)(Dashboard)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport createStyle from '../../style/global'\r\nimport Dialog from '../../components/dialog'\r\nimport AppBar from '../../components/AppBar'\r\nimport CustomDialog from '../../components/CustomDialog'\r\nimport createStyleLocal from './style'\r\nimport { requestEmployeeToEnable, requestUser, logout } from '../../redux/home/actions'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport storage from '../../services/storage'\r\nimport clsx from 'clsx'\r\nimport { ROUTES } from '../../utils/constants'\r\nimport Employee from '../employess/employees'\r\nimport Account from '../account/account'\r\nimport History from '../history/history'\r\nimport Maps from '../maps/maps'\r\nimport Suggestion from '../suggestion/suggestion'\r\nimport Devices from '../devices/devices'\r\nimport Lines from '../lines/lines'\r\nimport News from '../news/news'\r\nimport Loading from '../../components/loading'\r\nimport Dashboard from './components/Dashboard'\r\nimport Auth from '../auth/auth'\r\n\r\nconst Home = props => {\r\n    const {\r\n        requestEmployeeToEnable,\r\n        usersNotAuthorized,\r\n        requestUser,\r\n        logout } = props\r\n    const classes = createStyle()\r\n    const classesLocal = createStyleLocal()\r\n    const [ open, setOpen ] = useState(false)\r\n    const [ openCustomDialog, setOpenCustomDialog ] = useState(false)\r\n    const [ redirect, setRedirect ] = useState(false)\r\n    const [ user, setUser ] = useState(null)\r\n    const [ openDrawer, onDrawer ] = useState(false)\r\n    const handleClose = () => setOpen(!open)\r\n    const handleCloseCustomDialog = () => setOpenCustomDialog(!openCustomDialog)\r\n    const handleLogout = () => {\r\n        logout()\r\n        handleClose(!open)\r\n        storage.removeUser()\r\n        setRedirect(true)\r\n    }\r\n\r\n    const handleUserToAprrove = user => {\r\n        setUser(user)\r\n        handleCloseCustomDialog()\r\n    }\r\n    useEffect(() => {\r\n        if (!storage.getUser()) {\r\n            setRedirect(true)\r\n        } else {\r\n            let show = true\r\n            const callback = () => {\r\n                if (show && props.location.pathname === ROUTES.HOME) {\r\n                    toast.error('Erro de comunicação com servidor, verique sua conexão')\r\n                }\r\n                show = false\r\n            }\r\n            requestEmployeeToEnable(callback)\r\n            requestUser(callback)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    }, [ props.location ])\r\n\r\n    if (redirect) {\r\n        return <Redirect to={ROUTES.LOGIN}/>\r\n    } \r\n    return (\r\n        <Auth onlyToken>\r\n            <Grid className={classes.maxContainer} container item direction=\"column\" wrap=\"nowrap\" alignItems=\"center\">\r\n                <Loading />\r\n                <AppBar onDrawer={onDrawer} handleClose={handleClose} usersNotAuthorized={usersNotAuthorized} onSelectedUser={handleUserToAprrove} />\r\n                <Dialog\r\n                    transition=\"Slide\"\r\n                    title=\"Atenção\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    message=\"Deseja sair da aplicaçao?\"\r\n                    negativeButton=\"Não\"\r\n                    positiveButton=\"Sim\"\r\n                    negativeAction={handleClose}\r\n                    positiveAction={handleLogout}/>\r\n                <CustomDialog\r\n                    message=\"Deseja aprovar a entrada desse usuário no sistema?\"\r\n                    messageCheckBox=\"Aprovar usuário como admin?\"\r\n                    success={() => {\r\n                        setOpenCustomDialog(false)\r\n                        requestEmployeeToEnable()\r\n                        toast.success('Usuário aprovado com sucesso')\r\n                    }}\r\n                    error={() => {\r\n                        setOpenCustomDialog(false)\r\n                        toast.error('Falha ao aprovar usuário no sistema')\r\n                    }}\r\n                    user={user}\r\n                    open={openCustomDialog}\r\n                    negativeAction={handleCloseCustomDialog}\r\n                />\r\n\r\n                <Grid item container className={clsx(classesLocal.content, { [classesLocal.contentShift]: openDrawer })}>\r\n                    <Switch>\r\n                        <Route exact path={ROUTES.HOME} component={Dashboard} />\r\n                        <Route exact path={ROUTES.MAP} component={Maps} />\r\n                        <Route path={ROUTES.EMPLOYEES} component={Employee} />\r\n                        <Route path={ROUTES.ACCOUNT} component={Account} />\r\n                        <Route path={ROUTES.HISTORY} component={History} />\r\n                        <Route path={ROUTES.SUGGESTION} component={Suggestion} />\r\n                        <Route path={ROUTES.DEVICES} component={Devices} />\r\n                        <Route path={ROUTES.LINES} component={Lines} />\r\n                        <Route path={ROUTES.NEWS} component={News} />\r\n                        <Redirect from=\"*\" to={ROUTES.HOME} />\r\n                    </Switch>\r\n                </Grid>\r\n            </Grid>\r\n        </Auth>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        usersNotAuthorized: state.home.usersNotAuthorized,\r\n        user: state.home.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestEmployeeToEnable, requestUser, logout })(Home)","import React from 'react'\r\nimport './App.css'\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport store from './redux/index'\r\nimport { Provider } from 'react-redux'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Login from './pages/login/login'\r\nimport Home from './pages/home/home'\r\nimport './services/mqtt'\r\n\r\nfunction App() {\r\n  toast.configure({ position: toast.POSITION.BOTTOM_CENTER })\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/home\" component={Home} />\r\n          <Redirect from=\"*\" to='/login' />\r\n          <Redirect from=\"/\" to='/login' />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/google-maps.24ebd30f.png\";","module.exports = __webpack_public_path__ + \"static/media/connected_world.eb6cf72e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.af9c6ac7.png\";","module.exports = __webpack_public_path__ + \"static/media/bus.f1a35d33.png\";"],"sourceRoot":""}