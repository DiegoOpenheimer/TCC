{"version":3,"sources":["services/storage.js","services/network.js","redux/login/actions.js","redux/login/reducer.js","redux/home/actions.js","redux/home/reducer.js","redux/components/action.js","redux/employees/action.js","redux/employees/reducer.js","redux/components/reducer.js","redux/history/action.js","redux/history/reducer.js","redux/suggestion/action.js","redux/suggestion/reducer.js","redux/lines/action.js","redux/lines/reducer.js","redux/devices/action.js","redux/devices/reducer.js","redux/news/action.js","redux/news/reducer.js","redux/reducers.js","redux/index.js","pages/login/styles.js","pages/login/components/fieldsLogin.js","pages/login/components/fieldsRegister.js","pages/login/components/forgotPassword.js","pages/login/login.js","style/global.js","components/dialog.js","pages/home/style.js","utils/constants.js","components/Drawer.js","components/AppBar.js","components/CustomDialog.js","components/status.js","pages/employess/employees.js","pages/account/account.js","pages/auth/auth.js","pages/history/history.js","components/Map.js","pages/maps/styles.js","services/mqtt.js","pages/maps/maps.js","pages/devices/components/firstStep.js","pages/suggestion/components/styles.js","pages/suggestion/components/talk.js","pages/suggestion/suggestion.js","pages/devices/components/style.js","pages/devices/components/deviceList.js","components/dialogRadio.js","pages/devices/components/secondStep.js","pages/devices/components/addDevice.js","pages/devices/devices.js","pages/home/components/Comments.js","pages/lines/styles.js","pages/lines/components/list.js","components/dialogInput.js","pages/lines/components/horary.js","pages/lines/components/add.js","pages/lines/lines.js","pages/news/styles.js","pages/news/components/list.js","pages/news/components/add.js","pages/news/news.js","components/loading.js","pages/home/components/Card.js","pages/home/components/InformationLine.js","pages/home/components/Dashboard.js","pages/home/home.js","App.js","serviceWorker.js","index.js","assets/google-maps.png","assets/connected_world.svg","assets/logo.png","assets/bus.png"],"names":["storage","getUser","data","localStorage","getItem","user","JSON","parse","jwtDecode","token","saveUser","setItem","stringify","getToken","removeUser","removeItem","instance","axios","create","baseURL","timeout","headers","Content-Type","interceptors","request","use","config","Authorization","CancelToken","type","handleLoading","value","payload","handleResponse","response","INITAL_STATE","isLoading","login","state","arguments","length","undefined","action","Object","objectSpread2","handleLoadingTotalUsers","handleErrorTotalUsers","handleLoadingTotalDevices","handleErrorTotalDevices","handleLoadingTotalLines","handleErrorTotalLines","handleLoadingScore","handleErrorScore","handleUser","deleteUserFromNotAuthorized","INITIAL_STATE","totalUsers","isLoadingTotalUsers","errorLoadTotalUsers","totalDevices","isLoadingTotalDevices","errorLoadTotalDevices","totalLines","isLoadingTotalLines","errorLoadTotalLines","usersNotAuthorized","name","email","role","score","isLoadingScore","errorToLoadScore","types","UPDATE_COMPONENT_LOADING","updateLoading","handleReducer","INIT_STATE","docs","total","limit","page","pages","loading","suggestion","lineEdited","updateDevices","updateErrorLines","requestLines","error","console","log","dispatch","network","get","then","catch","e","open","lines","errorToLoadLines","devices","currentDevice","newsEdit","reducers","combineReducers","home","toConsumableArray","filter","_id","employee","component","history","line","device","news","store","createStore","applyMiddleware","thunk","styles","makeStyles","root","minHeight","contentLogo","color","flex","fontFamily","@media (max-width: 1200px)","display","background","concat","backgroundImage","backgroundSize","position","tabs","marginBottom","fields","textTab","fontSize","textPresent","textFields","margin","contentForgotPassword","width","height","linearProgress","top","left","addMarginBottom","content","padding","backgroundFilter","bottom","right","FieldsLogin","_ref","onClick","onClickRecoverPassword","useEffect","callback","key","verifyUser","document","addEventListener","removeEventListener","classes","createStyle","_useState","useState","password","_useState2","slicedToArray","setUser","handleInput","target","event","defineProperty","keyCode","_","react_default","a","createElement","Fragment","Grid","className","container","direction","TextField","onChange","label","placeholder","justify","Button","disabled","variant","FieldsRegister","cpf","confirmPassword","react_input_mask_default","mask","props","assign","ForgotPassword","setEmail","item","ev","recoverPassword","goBack","connect","requestLogin","success","post","createAccount","setState","handleChange","newValue","theme","useTheme","handleChangeIndex","index","push","registerUser","toast","autoClose","wrap","LinearProgress","alignItems","Typography","style","zIndex","react_router","path","match","url","exact","render","Tabs","indicatorColor","textColor","Tab","react_swipeable_views_lib_default","axis","onChangeIndex","fieldsLogin","fieldsRegister","forgotPassword","from","to","maxContainer","marginVertical","maxWidth","maxHeight","TransitionSlide","React","forwardRef","ref","Slide","CustomDialog","Dialog","TransitionComponent","transition","buildTransition","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","negativeAction","negativeButton","positiveAction","positiveButton","appBar","boxShadow","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","toolbar","backgroundColor","borderBottom","flexGrow","paper","border","contentShift","result","contentIcon","contentInformation","icon","borderRadius","popoverHeader","image","backgroundRepeat","backgroundPosition","removePadding","contentCard","card","marginTop","drawer","flexShrink","drawerPaper","EMPLOYEE_ROLE","COMMON","ADMIN","USER_STATUS","ENABLED","PENDING","NOT_AUTHORIZED","ROUTES","HOME","EMPLOYEES","ACCOUNT","HISTORY","SUGGESTION","DEVICES","ADD_DEVICES","LINES","ADD_LINES","MAP","LOGIN","NEWS","ADD_NEWS","header","listItem","cursor","borderLeft","&:hover","&:hover $icon","activeRoute","listItemText","fontWeight","listItemActive","iconActive","minWidth","list","paddingLeft","img","withRouter","useSelector","pathname","location","classesLocal","isAdmin","items","Dashboard","text","show","isActive","includes","handleRoute","Map","AccountBox","People","esm_History","QuestionAnswer","LocationOn","Directions","Drafts","route","Drawer","anchor","Divider","src","LOGO","alt","List","map","ListItem","toString","clsx","ListItemIcon","ListItemText","_titles","titles","createStyleLocal","setOpen","_useState3","_useState4","openDrawer","setDrawer","_useState5","_useState6","anchorEl","setAnchorEl","size","handleClose","handleDrawer","onDrawer","AppBar","Toolbar","IconButton","edge","menuButton","aria-label","Close","Menu","currentTarget","Badge","badgeContent","Notifications","ExitToApp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onSelectedUser","button","primary","secondary","ListItemSecondaryAction","ChevronRight","components_Drawer","field","information","checkBox","useDispatch","setValue","setLoading","requestServer","body","status","cb","loadingGlobal","patch","Checkbox","checked","messageCheckBox","CircularProgress","Status","Role","_ref2","tableWrapper","overflowX","rightIcon","spacing","input","tableCellFooter","paddingRight","requestEmployees","typesLoading","URI","removeEmployee","delete","subject","Subject","pipe","debounceTime","subscribe","setText","openCustomDialog","setOpenCustomDialog","_useState7","_useState8","complete","next","InputProps","startAdornment","InputAdornment","Search","Paper","Table","TableHead","TableRow","TableCell","TableBody","hover","status_Status","status_Role","stopPropagation","Delete","TableFooter","TablePagination","labelDisplayedRows","count","rowsPerPage","rowsPerPageOptions","onChangePage","components_dialog","components_CustomDialog","contentPadding","contentButton","Account","auth","REDIRECT_TO_LOGIN","REDIRECT_TO_MAP","RENDER_CHILDREN","storageUser","onlyToken","getRedirectRoute","children","requestHistories","reason","Date","createdAt","toLocaleString","compose","withProps","googleMapURL","center","lat","lng","loadingElement","containerElement","mapElement","withScriptjs","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","filterBtn","contentMap","clientId","Math","random","substr","client","username","on","requestAllDevices","requestDeviceById","load","setLoad","controller","setController","createLocalStyle","onMessage","topic","endsWith","split","stateDevices","getState","deviceFound","find","uuid","String","latitude","longitude","lon","_unused","window","initMap","google","mqtt","addListener","removeListener","unsubscribe","components_Map","lineNumber","lineDescription","MarkerWithLabel_default","BUS","scaledSize","maps","Size","labelAnchor","Point","labelStyle","buildMarker","directions","routes","geodesic","options","strokeColor","strokeWeight","buildRoute","points","point","buildPoints","buildDrawer","subscription","contentTitle","& h3","contentTalk","contentMessages","overflowY","contentInputMessage","footer","contentField","flexDirection","justifyContent","contentList","cardMessage","& p","contentRight","date","fontStyle","contentTime","getSuggestionById","removeMessage","params","entity","listRef","useRef","_createMessage","asyncToGenerator","regenerator_default","mark","_callee","_context","prev","by","onModel","t0","stop","apply","this","scrollHeight","current","clientHeight","maxScrollTop","scrollTop","messages","Input","multiline","maxLength","disableUnderline","Send","requestSuggestions","renderFooter","align","talk","& h2","colorPositive","colors","green","A700","colorNegative","red","textResult","inputSearch","fab","requestDevices","removeDevice","dist_default","search","actionsColumnIndex","localization","actions","emptyDataSourceMessage","filterRow","filterTooltip","editRow","deleteText","searchTooltip","searchPlaceholder","components","Pagination","columns","editable","min","onRowClick","onRowUpdate","newData","Promise","resolve","put","updateDevice","onRowDelete","oldData","Fab","Add","CONNECTED","DISCONNECTED","CONNECTING","firstStep","_clsx","setStatus","time","setDevice","publish","timer","info","finishProccess","dialogRadio","valueProp","textCancel","textConfirm","other","objectWithoutProperties","_React$useState","_React$useState2","radioGroupRef","disableBackdropClick","disableEscapeKeyDown","onEntering","focus","dividers","RadioGroup","option","FormControlLabel","control","Radio","number","description","updateName","openDialog","clear","createDevice","li","buildResult","steps","AddDevice","step","Stepper","activeStep","Step","StepLabel","secondStep","cancel","devices_devices","DeviceList","inputLine","contentBlockMap","contentFields","addIconField","iconRemove","&:hover $iconHiddenRemove","visibility","iconHiddenRemove","contentContainerMap","buttonSave","& svg","marginRight","removeLine","dialogInput","autoFocus","fullWidth","onCancel","onConfirm","textButton","createStyles","chip","components_horary","tab","setTab","setDate","mondayToSaturday","sundayAndHoliday","horary","setHorary","sortHorary","values","sort","b","Number","join","old","onOpen","centered","useUtils_cfb96ac9","utils","DateFnsUtils","TimePicker","okLabel","cancelLabel","hour","getHours","minutes","getMinutes","filterDate","timeString","padStart","some","Chip","onDelete","newHorary","splice","createLine","getLineById","editLine","globalStyle","localStyles","refDirections","setDirections","errorLine","errorDescription","setInformation","setRoutes","_useState9","_useState10","markers","setMarkers","_useState11","_useState12","dialog","setDialog","_useState13","_useState14","_useState15","_useState16","openDialogHorary","setOpenDialogHorary","filterRoute","query","LatLng","buildRoutes","every","DirectionService","DirectionsService","origin","destination","waypoints","stopover","optimizeWaypoints","travelMode","TravelMode","DRIVING","avoidTolls","DirectionsStatus","OK","NOT_FOUND","keys","inputProps","helperText","newRoutes","endAdornment","i","Clear","AddCircle","latLng","marker","showOverlayView","draggable","callbackCloseOverlay","newMarkers","clickable","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","buildMarkers","formOk","getDirections","overview_path","callbackError","saveLine","Save","lines_lines","inputRegisterNews","textMessage","requestNews","removeNews","author","parser","createNews","editNews","getNewsById","clearNewsEdit","localClasses","EditorState","createEmpty","editorState","setEditorState","setTitle","_props$newsEdit","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","react_draft_wysiwyg","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","callbackSuccess","news_news","components_loading","Card","buttonError","styleIcon","textColors","styleCard","xs","sm","md","lg","xl","bundle_default","circle","Replay","Icon","Comments","comment","setComment","star","idLine","cancelToken","c","fullScreen","oldTab","sc","stars","StarRate","buildStar","requestScore","DEFAULT_VALUE","setOpenDialog","comments","setComments","setValueFilter","getScore","react_chartjs_2_es","datasets","labels","components_Comments","requestTotalUsers","requestTotalDevices","requestTotalLines","globalClasses","createGlobalStyle","components_Card","components_InformationLine","requestEmployeeToEnable","requestUser","logout","redirect","setRedirect","handleCloseCustomDialog","components_AppBar","Maps","Employee","History","Suggestion","Devices","Lines","News","App","configure","POSITION","BOTTOM_CENTER","react_redux_es","react_router_dom","Login","Home","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f9d8c247.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\n\nexport default {\n    getUser() {\n        const data = localStorage.getItem('user')\n        if (data) {\n            const user = JSON.parse(data)\n            return jwtDecode(user.token)\n        }\n        return null\n    },\n    saveUser(user) {\n        localStorage.setItem('user', JSON.stringify(user))\n    },\n    getToken() {\n        const data = localStorage.getItem('user')\n        if (data) {\n            return JSON.parse(data).token\n        }\n    },\n    removeUser() {\n        localStorage.removeItem('user')\n    }\n}","import axios from 'axios'\nimport storage from './storage'\n\nconst instance = axios.create({\n    baseURL: 'http://bus-locator.online:3000/',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n})\n\ninstance.interceptors.request.use(config => {\n    config.headers.Authorization = storage.getToken()\n    return config\n})\n\nexport const CancelToken = axios.CancelToken\n\nexport default instance","import network from '../../services/network'\nimport storage from '../../services/storage'\n\nexport const type = {\n    LOADING: 'LOADING',\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n}\n\nexport const requestLogin = (user, success, error) => dispatch => {\n    dispatch(handleLoading(true))\n    network.post('auth/employee', user)\n    .then(response => {\n        dispatch(handleLoading(false))\n        dispatch(handleResponse(response))\n        storage.saveUser(response.data)\n        success()\n    })\n    .catch(e => {\n        dispatch(handleLoading(false))\n        if (e.response) {\n            error('Sem permissão para acesso')\n        } else {\n            error('Falha de comunicação com o servidor')\n        }\n    })\n}\n\nexport const createAccount = (user, success, error) => dispatch => {\n    dispatch(handleLoading(true))\n    network.post('employee', user)\n    .then(_ => {\n        dispatch(handleLoading(false))\n        success()\n    })\n    .catch(_ => {\n        dispatch(handleLoading(false))\n        error('Error ao criar conta')\n    })\n}\n\nexport const recoverPassword = (email, success, error) => dispatch => {\n    dispatch(handleLoading(true))\n    network.post('employee/recover-password', { email })\n    .then(_ => {\n        dispatch(handleLoading(false))\n        success()\n    })\n    .catch(_ => {\n        dispatch(handleLoading(false))\n        error('Error ao recuperar senha')\n    })\n}\n\nconst handleLoading = value => ({\n    type: type.LOADING,\n    payload: { value }\n})\n\nconst handleResponse = response => ({\n    type: type.LOGIN_SUCCESS,\n    payload: {\n        value: response.data.token\n    }\n})\n\n","import { type } from './actions'\n\nconst INITAL_STATE = {\n    isLoading: false,\n    token: '',\n}\n\nconst login = (state = INITAL_STATE, action) => {\n    switch(action.type) {\n        case type.LOGIN_SUCCESS:\n            return { ...state, token: action.payload.value }\n        case type.LOADING:\n            return { ...state, isLoading: action.payload.value }\n        default:\n            return { ...state }\n    }\n}\n\nexport default login","import network from '../../services/network'\nimport storage from '../../services/storage'\n\nexport const type = {\n    LOADING_TOTAL_USERS: 'LOADING_TOTAL_USERS',\n    TOTAL_USERS: 'TOTAL_USERS',\n    ERROR_LOAD_TOTAL_USERS: 'ERROR_LOAD_TOTAL_USERS',\n    TOTAL_DEVICES: 'TOTAL_DEVICES',\n    ERROR_LOAD_TOTAL_DEVICES: 'ERROR_LOAD_TOTAL_DEVICES',\n    LOADING_TOTAL_DEVICES: 'LOADING_TOTAL_DEVICES',\n    TOTAL_LINES: 'TOTAL_LINES',\n    ERROR_LOAD_TOTAL_LINES: 'ERROR_LOAD_TOTAL_LINES',\n    LOADING_TOTAL_LINES: 'LOADING_TOTAL_LINES',\n    USERS_NOT_AUTHORIZED: 'USERS_NOT_AUTHORIZED',\n    UPDATE_USER: 'UPDATE_USER',\n    UPDATE_SCORE: 'UPDATE_SCORE',\n    LOADING_SCORE: 'LOADING_SCORE',\n    ERROR_LOAD_SCORE: 'ERROR_LOAD_SCORE',\n    REMOVE_FROM_NOT_AUTHORIZED: 'REMOVE_FROM_NOT_AUTHORIZED',\n}\n\nconst handleTotalUsers = value => ({ type: type.TOTAL_USERS, payload: { value } })\nconst handleLoadingTotalUsers = value => ({ type: type.LOADING_TOTAL_USERS, payload: { value } })\nconst handleErrorTotalUsers = value => ({ type: type.ERROR_LOAD_TOTAL_USERS, payload: { value } })\nconst handleTotalDevices = value => ({ type: type.TOTAL_DEVICES, payload: { value } })\nconst handleLoadingTotalDevices = value => ({ type: type.LOADING_TOTAL_DEVICES, payload: { value } })\nconst handleErrorTotalDevices = value => ({ type: type.ERROR_LOAD_TOTAL_DEVICES, payload: { value } })\nconst handleTotalLines = value => ({ type: type.TOTAL_LINES, payload: { value } })\nconst handleLoadingTotalLines = value => ({ type: type.LOADING_TOTAL_LINES, payload: { value } })\nconst handleErrorTotalLines = value => ({ type: type.ERROR_LOAD_TOTAL_LINES, payload: { value } })\nconst handleTotalUsersNotAuthorized = value => ({ type: type.USERS_NOT_AUTHORIZED, payload: { value } })\nconst handleScore = value => ({ type: type.UPDATE_SCORE, payload: { value } })\nconst handleLoadingScore = value => ({ type: type.LOADING_SCORE, payload: { value } })\nconst handleErrorScore = value => ({ type: type.ERROR_LOAD_SCORE, payload: { value } })\nexport const handleUser = value => ({ type: type.UPDATE_USER, payload: { value } })\n\n\nexport const logout = () => ({ type: type.UPDATE_USER, payload: { value: { email: '', name: '', role: '' } } })\n\nexport const requestTotalUsers = (error = console.log) => dispatch => {\n  dispatch(handleLoadingTotalUsers(true));\n  dispatch(handleErrorTotalUsers(false));\n  network\n    .get(\"user/count\")\n    .then(response => {\n      dispatch(handleLoadingTotalUsers(false));\n      dispatch(handleTotalUsers(response.data.count));\n    })\n    .catch(e => {\n      error(e);\n      dispatch(handleLoadingTotalUsers(false));\n      dispatch(handleErrorTotalUsers(true));\n    });\n};\n\nexport const requestTotalDevices = (error = console.log) => dispatch => {\n  dispatch(handleErrorTotalDevices(false));\n  dispatch(handleLoadingTotalDevices(true));\n  network\n    .get(\"device/count\")\n    .then(response => {\n      dispatch(handleLoadingTotalDevices(false));\n      dispatch(handleTotalDevices(response.data.count));\n    })\n    .catch(e => {\n      error(e);\n      dispatch(handleLoadingTotalDevices(false));\n      dispatch(handleErrorTotalDevices(true));\n    });\n};\n\nexport const requestTotalLines = (error = console.log) => dispatch => {\n  dispatch(handleErrorTotalLines(false));\n  dispatch(handleLoadingTotalLines(true));\n  network\n    .get(\"line/count\")\n    .then(response => {\n      dispatch(handleLoadingTotalLines(false));\n      dispatch(handleTotalLines(response.data.count));\n    })\n    .catch(e => {\n      error(e);\n      dispatch(handleLoadingTotalLines(false));\n      dispatch(handleErrorTotalLines(true));\n    });\n};\n\nexport const requestScore = (filter = 'all', success = console.log, error = console.log) => dispatch => {\n  dispatch(handleErrorScore(false))\n  dispatch(handleLoadingScore(true))\n  network\n    .get(`line/score?filter=${filter}`)\n    .then(response => {\n      dispatch(handleLoadingScore(false))\n      dispatch(handleScore(response.data))\n      success()\n    })\n    .catch(e => {\n      error(e)\n      dispatch(handleLoadingScore(false))\n      dispatch(handleErrorScore(true))\n    })\n}\n\nexport const requestEmployeeToEnable = (error = console.log) => dispatch => {\n    network.get('employee/not_authorized')\n    .then(response => dispatch(handleTotalUsersNotAuthorized(response.data)))\n    .catch(error)\n}\n\nexport const requestUser = (error = console.log) => dispatch => {\n    network.get('employee/current')\n    .then(response => {\n      if (!response.data) {\n        storage.removeUser()\n      }\n      dispatch(handleUser(response.data))\n    })\n    .catch(error)\n}\n\nexport const deleteUserFromNotAuthorized = value => ({ type: type.REMOVE_FROM_NOT_AUTHORIZED, payload: { value } })","import { type } from \"./actions\";\n\nconst INITIAL_STATE = {\n  totalUsers: 0,\n  isLoadingTotalUsers: false,\n  errorLoadTotalUsers: false,\n  totalDevices: 0,\n  isLoadingTotalDevices: false,\n  errorLoadTotalDevices: false,\n  totalLines: 0,\n  isLoadingTotalLines: false,\n  errorLoadTotalLines: false,\n  usersNotAuthorized: [],\n  user: { name: \"\", email: \"\", role: \"\" },\n  score: [],\n  isLoadingScore: false,\n  errorToLoadScore: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case type.LOADING_TOTAL_USERS:\n      return { ...state, isLoadingTotalUsers: action.payload.value };\n\n    case type.TOTAL_USERS:\n      return { ...state, totalUsers: action.payload.value };\n\n    case type.ERROR_LOAD_TOTAL_USERS:\n      return { ...state, errorLoadTotalUsers: action.payload.value };\n\n    case type.LOADING_TOTAL_DEVICES:\n      return { ...state, isLoadingTotalDevices: action.payload.value };\n\n    case type.TOTAL_DEVICES:\n      return { ...state, totalDevices: action.payload.value };\n\n    case type.ERROR_LOAD_TOTAL_DEVICES:\n      return { ...state, errorLoadTotalDevices: action.payload.value };\n\n    case type.LOADING_TOTAL_LINES:\n      return { ...state, isLoadingTotalLines: action.payload.value };\n\n    case type.TOTAL_LINES:\n      return { ...state, totalLines: action.payload.value };\n\n    case type.ERROR_LOAD_TOTAL_LINES:\n      return { ...state, errorLoadTotalLines: action.payload.value };\n\n    case type.USERS_NOT_AUTHORIZED:\n      return { ...state, usersNotAuthorized: [...action.payload.value] };\n      \n    case type.UPDATE_USER:\n      return { ...state, user: { ...action.payload.value } };\n\n    case type.UPDATE_SCORE:\n        return { ...state, score: action.payload.value }\n\n    case type.LOADING_SCORE:\n        return { ...state, isLoadingScore: action.payload.value }\n\n    case type.ERROR_LOAD_SCORE:\n        return { ...state, errorToLoadScore: action.payload.value }\n    \n    case type.REMOVE_FROM_NOT_AUTHORIZED:\n        return { ...state, usersNotAuthorized: [...state.usersNotAuthorized.filter(user => user._id !== action.payload.value)] }\n    default:\n      return { ...state };\n  }\n};\n","export const types = {\n    UPDATE_COMPONENT_LOADING: 'UPDATE_COMPONENT_LOADING'\n}\n\nexport function updateLoading(value) {\n    return {\n        type: types.UPDATE_COMPONENT_LOADING,\n        payload: { value }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\nimport { deleteUserFromNotAuthorized } from '../home/actions'\n\nexport const types = {\n    UPDATE_EMPLOYEES: 'UPDATE_EMPLOYEES',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestEmployees = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `employee?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_EMPLOYEES, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeEmployee = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete('employee', { data: body })\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(deleteUserFromNotAuthorized(body._id))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}","import { types } from './action'\n\nconst INIT_STATE = {\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_EMPLOYEES:\n            return { ...state, data: { ...action.payload.value } }\n        default:\n            return { ...state }\n    }\n}","import { types } from './action'\n\nconst INITIAL_STATE = {\n    loading: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_COMPONENT_LOADING:\n            return { ...state, loading: action.payload.value }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_HISTORY: 'UPDATE_HISTORY',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestHistories = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `history?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_HISTORY, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n","import { types } from './action'\n\nconst INIT_STATE = {\n    docs: [],\n    total: 0,\n    limit: 10,\n    page: 1,\n    pages: 1\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_HISTORY:\n            return { ...state, ...action.payload.value }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_SUGGESTION: 'UPDATE_SUGGESTION',\n    UPDATE_SUGGESTION_CHOOSED: 'UPDATE_SUGGESTION_CHOOSED',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestSuggestions = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `suggestion?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_SUGGESTION, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const getSuggestionById = (id, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.get(`suggestion/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_SUGGESTION_CHOOSED, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeMessage = (suggestion, message, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete('suggestion/message', { data: { suggestion, message } })\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n\n\n} ","import { types } from './action'\n\nconst INIT_STATE = {\n    docs: [],\n    total: 0,\n    limit: 10,\n    page: 1,\n    pages: 1,\n    suggestion: null\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_SUGGESTION:\n            return { ...state, ...action.payload.value }\n        case types.UPDATE_SUGGESTION_CHOOSED:\n            return { ...state, suggestion: {...action.payload.value} }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_LINES: 'UPDATE_LINES',\n    UPDATE_LINE_EDITED: 'UPDATE_LINE_EDITED',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestLines = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `line?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_LINES, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const createLine = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.post(`line`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const editLine = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.put(`line`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const getLineById = (id, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.get(`line/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_LINE_EDITED, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeLine = (id, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete(`line/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}","import { types } from './action'\n\nconst INIT_STATE = {\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n    lineEdited: null\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_LINES:\n            return { ...state, data: { ...action.payload.value }, lineEdited: null }\n        case types.UPDATE_LINE_EDITED:\n            return { ...state, lineEdited: { ...action.payload.value } }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { updateLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_DEVICE_LINES: 'UPDATE_DEVICE_LINES',\n    ERROR_LOAD_LINES: 'ERROR_LOAD_LINES',\n    UPDATE_DEVICE_NAME: 'UPDATE_DEVICE_NAME',\n    UPDATE_DEVICE_DIALOG: 'UPDATE_DEVICE_DIALOG',\n    UPDATE_LINE_VALUE: 'UPDATE_LINE_VALUE',\n    DEVICE_CLEAR: 'DEVICE_CLEAR',\n    UPDATE_DEVICES_DOCS: 'UPDATE_DEVICES_DOCS',\n    UPDATE_DEVICES: 'UPDATE_DEVICES',\n    UPDATE_CURRENT_DEVICE: 'UPDATE_CURRENT_DEVICE'\n}\n\nexport const updateName = value => ({ type: types.UPDATE_DEVICE_NAME, payload: { value }})\n\nexport const openDialog = value => ({ type: types.UPDATE_DEVICE_DIALOG, payload: { value }})\n\nexport const updateLines = value => ({ type: types.UPDATE_DEVICE_LINES, payload: { value }})\n\nexport const updateDevicesDocs = value => ({ type: types.UPDATE_DEVICES_DOCS, payload: { value }})\n\nexport const updateDevices = value => ({ type: types.UPDATE_DEVICES, payload: { value }})\n\nexport const updateCurrentDevice = value => ({ type: types.UPDATE_CURRENT_DEVICE, payload: { value }})\n\nexport const updateErrorLines = value => ({ type: types.ERROR_LOAD_LINES, payload: { value }})\n\nexport const onClose = value => ({ type: types.UPDATE_LINE_VALUE, payload: { value } })\n\nexport const clear = () => ({ type: types.DEVICE_CLEAR })\n\nexport const requestLines = (error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    dispatch(updateErrorLines(false))\n    network.get('line/associate')\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateLines(response.data))\n    })\n    .catch(e => {\n        dispatch(updateErrorLines(true))\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const requestDevices = (page = 1, limit = 10, field, success, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    let URI = `device?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateDevicesDocs(response.data))\n        if (success) {\n            success()\n        }\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const requestAllDevices = (success, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    let URI = `device?all=all`\n    network.get(URI)\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateDevices(response.data))\n        if (success) {\n            success()\n        }\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const requestDeviceById = (id, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    let URI = `device/${id}`\n    network.get(URI)\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateCurrentDevice(response.data))\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const createDevice = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    network.post('device', body)\n    .then(response => {\n        dispatch(updateLoading(false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const updateDevice = (body, success = console.log, error = console.log) => {\n    network.put('device', body)\n    .then(response => {\n        success(response)\n    })\n    .catch(e => {\n        error(e)\n    })\n}\n\nexport const removeDevice = (id, success = console.log, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    network.delete(`device/${id}`)\n    .then(response => {\n        dispatch(updateLoading(false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\n","import { types } from './action'\n\nconst INITIAL_STATE = {\n    name: '',\n    open: false,\n    lines: [],\n    errorToLoadLines: false,\n    value: '',\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n    devices: [],\n    currentDevice: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_DEVICE_NAME:\n            return { ...state, name: action.payload.value }\n        case types.UPDATE_DEVICE_LINES:\n            return { ...state, lines: action.payload.value }\n        case types.UPDATE_DEVICES_DOCS:\n            return { ...state, data: action.payload.value }\n        case types.UPDATE_DEVICES:\n            return { ...state, devices: action.payload.value, currentDevice: null }\n        case types.UPDATE_CURRENT_DEVICE:\n            return { ...state, currentDevice: action.payload.value }\n        case types.UPDATE_DEVICE_DIALOG:\n            return { ...state, open: action.payload.value }\n        case types.ERROR_LOAD_LINES:\n            return { ...state, errorToLoadLines: action.payload.value }\n        case types.UPDATE_LINE_VALUE:\n            return { ...state, open: false, value: action.payload.value || state.value }\n        case types.DEVICE_CLEAR:\n            return { ...state, open: false, name: '', lines: [], value: '' }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_NEWS: 'UPDATE_NEWS',\n    UPDATE_NEWS_EDITED: 'UPDATE_NEWS_EDITED',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestNews = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `news?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_NEWS, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const createNews = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.post(`news`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const editNews = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.put(`news`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const getNewsById = (id, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.get(`news/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_NEWS_EDITED, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeNews = (id, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete(`news/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const clearNewsEdit = () => handleReducer(types.UPDATE_NEWS_EDITED, null)","import { types } from './action'\n\nconst INIT_STATE = {\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n    newsEdit: null\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_NEWS:\n            return { ...state, data: { ...action.payload.value }, newsEdit: null }\n        case types.UPDATE_NEWS_EDITED:\n            return { ...state, newsEdit: { ...action.payload.value } }\n        default:\n            return { ...state }\n    }\n}","import {\n    combineReducers\n} from 'redux'\nimport login from './login/reducer'\nimport home from './home/reducer'\nimport employee from './employees/reducer'\nimport component from './components/reducer'\nimport history from './history/reducer'\nimport suggestion from './suggestion/reducer'\nimport line from './lines/reducer'\nimport device from './devices/reducer'\nimport news from './news/reducer'\n\nconst reducers = combineReducers({\n    login,\n    home,\n    employee,\n    component,\n    history,\n    suggestion,\n    line,\n    device,\n    news\n})\n\nexport default reducers","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nexport default store\n\n","import { makeStyles } from '@material-ui/core'\nimport backgroundImage from '../../assets/google-maps.png'\n\nconst styles = makeStyles({\n    root: {\n        minHeight: '100vh',\n    },\n    contentLogo: {\n        color: '#FFF',\n        flex: 2,\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;`,\n        '@media (max-width: 1200px)': {\n            display: 'none'\n        },\n        background: `url(${backgroundImage}) no-repeat center center`,\n        backgroundSize: 'cover',\n        position: 'relative'\n    },\n    tabs: {\n        marginBottom: 16\n    },\n    fields: {\n        flex: 1.4,\n    },\n    textTab: {\n        fontSize: '20px'\n    },\n    textPresent: {\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;`,\n        color: '#4A4A4A'\n    },\n    textFields: {\n        margin: '16px 0px'\n    },\n    contentForgotPassword: {\n        width: '70%',\n        height: '80%',\n    },\n    linearProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%'\n    },\n    addMarginBottom: {\n        marginBottom: 10\n    },\n    content: {\n        padding: '0px 16px'\n    },\n    backgroundFilter: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        background: 'linear-gradient(to bottom, rgba(211, 218, 222, 0.8) 14%, rgba(200, 213, 226, 0.8) 45%, rgba(57, 143, 241, 0.8) 100%)'\n    }\n})\n\nexport default styles","import React, { useState, useEffect } from 'react'\nimport { TextField, Grid, Button } from '@material-ui/core'\nimport createStyle from '../styles'\n\nconst FieldsLogin = ({ onClick, onClickRecoverPassword }) => {\n\n    useEffect(() => {\n        const callback = e => {\n            if (e.key === 'Enter' && !verifyUser()) {\n                onClick(user)\n            }\n        }\n        document.addEventListener('keypress', callback)\n        return () => document.removeEventListener('keypress', callback)\n    })\n\n    const classes = createStyle()\n    const [ user, setUser ] = useState({\n        email: '',\n        password: ''\n    })\n    const handleInput = target => event => {\n        setUser({ ...user, [target]: event.target.value })\n        if (!verifyUser() && event.keyCode === 13) {\n            onClick(user)\n        }\n    }\n    const verifyUser = _ => {\n        if (user.email && user.password) {\n            return false\n        }\n        return true\n    }\n    return (\n        <>\n            <Grid className={classes.content} container direction=\"column\" >\n                <TextField\n                    onChange={handleInput('email')}\n                    label=\"Email\"\n                    margin=\"normal\"\n                    className={classes.textFields}\n                    placeholder=\"Informe email\"\n                    />\n                <TextField\n                    onChange={handleInput('password')}\n                    className={classes.textFields}\n                    label=\"Senha\"\n                    margin=\"normal\"\n                    type=\"password\"\n                    placeholder=\"Informe senha\"\n                />\n                <Grid container justify=\"space-between\">\n                    <Button onClick={_ => onClick(user)} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\n                        Entrar\n                    </Button>\n                    <Button onClick={onClickRecoverPassword} color=\"primary\">\n                        Esqueceu a senha?\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n\n}\n\n\nexport default FieldsLogin","import React, { useState } from 'react'\nimport { TextField, Grid, Button } from '@material-ui/core'\nimport InputMask from 'react-input-mask'\nimport createStyle from '../styles'\n\nconst FieldsRegister = ({ onClick }) => {\n    const classes = createStyle()\n    const [ user, setUser ] = useState({\n        name: '',\n        email: '',\n        cpf: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const handleInput = target => event => {\n        setUser({ ...user, [target]: event.target.value })\n    }\n    const verifyUser = () => {\n        if (user) {\n            const { email, cpf, password, confirmPassword, name } = user\n            if (email && cpf && password && confirmPassword && name) {\n                return false\n            }\n            return true\n        }\n        return true\n    }\n    return (\n        <>\n        <Grid className={classes.content} container direction=\"column\" >\n            <TextField\n                onChange={handleInput('name')}\n                label=\"Nome\"\n                margin=\"normal\"\n                className={classes.textFields}\n                placeholder=\"Informe email\"\n                />\n            <TextField\n                onChange={handleInput('email')}\n                label=\"Email\"\n                margin=\"normal\"\n                className={classes.textFields}\n                placeholder=\"Informe email\"\n                />\n            <InputMask mask=\"999.999.999-99\" onChange={handleInput('cpf')}>\n                {\n                    props => <TextField\n                        {...props}\n                        label=\"Cpf\"\n                        margin=\"normal\"\n                        className={classes.textFields}\n                    />\n                }\n            </InputMask>\n            <TextField\n                onChange={handleInput('password')}\n                label=\"Senha\"\n                margin=\"normal\"\n                type=\"password\"\n                className={classes.textFields}\n                placeholder=\"Informe senha\"\n            />\n            <TextField\n                onChange={handleInput('confirmPassword')}\n                label=\"Confirme senha\"\n                margin=\"normal\"\n                type=\"password\"\n                className={classes.textFields}\n                placeholder=\"Informe senha\"\n            />\n            <Button onClick={() => onClick(user)} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\n                Entrar\n            </Button>\n        </Grid>\n    </>\n    )\n\n}\n\n\nexport default FieldsRegister","import React, { useState } from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport createStyle from '../styles'\n\nconst ForgotPassword = props => {\n    const classes = createStyle()\n    const [ email, setEmail ] = useState('')\n    return (\n        <Grid item container direction=\"column\" justify=\"flex-start\" className={classes.contentForgotPassword}>\n            <h2 className={classes.textPresent}>Recuperar senha:</h2>\n            <TextField\n                className={classes.textFields}\n                label=\"Email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"Informe email\"\n                onChange={ev => setEmail(ev.target.value)}\n            />\n            <Button disabled={!email} className={classes.addMarginBottom} variant=\"contained\" color=\"primary\" onClick={() => props.recoverPassword(email)}>Enviar</Button>\n            <Button onClick={props.goBack}>Voltar</Button>\n        </Grid>\n    )\n}\n\nexport default ForgotPassword","import React, { useState, useEffect } from 'react'\nimport { Grid, Tabs, Tab, useTheme, LinearProgress, Typography } from '@material-ui/core'\nimport SwipeableViews from 'react-swipeable-views'\nimport createStyle from './styles'\nimport { toast } from 'react-toastify'\nimport { Route, Redirect } from 'react-router-dom'\nimport FieldsLogin from './components/fieldsLogin'\nimport FieldsRegister from './components/fieldsRegister'\nimport ForgotPassword from './components/forgotPassword'\nimport { connect } from 'react-redux'\nimport { requestLogin, createAccount, recoverPassword } from '../../redux/login/actions'\nimport storage from '../../services/storage'\n\nconst Login = props => {\n    const [ state, setState ] = useState(0)\n    const handleChange = (_, newValue) => setState(newValue)\n    const classes = createStyle()\n    const theme = useTheme()\n\n    function handleChangeIndex(index) {\n        setState(index);\n    }\n\n    useEffect(() => {\n        if (storage.getUser()) {\n            props.history.push('/home')\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ ])\n\n    const registerUser = user => {\n        if (!props.isLoading) {\n            if (user.password !== user.confirmPassword) {\n                toast.error('Senhas diferentes')\n            } else {\n                props.createAccount(\n                    user,\n                    () => toast.success('Conta criada com sucesso, confirme no seu email'),\n                    e => toast.error(e)\n                )\n            }\n        }\n    }\n    \n    const requestLogin = user => {\n        if (!props.isLoading) {\n            props.requestLogin(user, () => {\n                toast.success('Login efetuado com sucesso', { autoClose: 2000 })\n                props.history.push('/home')\n            }, e => toast.error(e))\n        }\n    }\n\n    const recoverPassword = email => {\n        props.recoverPassword(email, () => toast.success('Verifique seu email'), e => toast.error(e))\n    }\n\n    return (\n        <>\n            <Grid container className={classes.root} wrap=\"nowrap\">\n                {\n                    props.isLoading &&\n                    <LinearProgress className={classes.linearProgress} />\n                }\n                <Grid container justify=\"center\" alignItems=\"center\" item className={classes.contentLogo}>\n                    <div className={classes.backgroundFilter}></div>\n                    <Typography style={{zIndex: 10}} variant=\"h1\">Bus Locator</Typography>\n                </Grid>\n\n\n                <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.fields} >\n                    <Route path={props.match.url} exact render={() => {\n                        return (\n                        <Grid item container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{width: '80%'}}>\n                            <Tabs\n                            className={classes.tabs}\n                            variant=\"fullWidth\"\n                            value={state}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                                >\n                                <Tab className={classes.textTab} label=\"Entrar\" />\n                                <Tab className={classes.textTab} label=\"Nova Conta\" />\n                            </Tabs>\n                            <Typography variant=\"h5\" className={classes.textPresent}>Bem vindo</Typography>\n                            <SwipeableViews\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                            index={state}\n                            onChangeIndex={handleChangeIndex}>\n                                <FieldsLogin onClick={requestLogin} onClickRecoverPassword={() => props.history.push('/login/forgot-password')} />\n                                <FieldsRegister onClick={registerUser} />\n                            </SwipeableViews>\n                        </Grid>\n                        )\n                    }}/>\n\n                    <Route path={props.match.url + '/forgot-password'} exact render={() => <ForgotPassword goBack={props.history.goBack} recoverPassword={recoverPassword} />} />\n                </Grid>\n            </Grid>\n            <Redirect from=\"*\" to=\"/login\" />\n        </>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.login.isLoading,\n    }\n}\n\nexport default connect(mapStateToProps, { requestLogin, createAccount, recoverPassword })(Login)","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles({\n    maxContainer: {\n        minHeight: '100vh',\n    },\n    linearProgress: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        zIndex: 10000\n    },\n    container: {\n        padding: 16\n    },\n    marginVertical: {\n        margin: props => `${props.marginVertical} 0px`\n    },\n    maxWidth: {\n        width: '100%'\n    },\n    maxHeight: {\n        height: '100%'\n    }\n})","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Slide } from '@material-ui/core'\n\nconst TransitionSlide = React.forwardRef(function(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n})\n\nconst CustomDialog = props => {\n\n    const buildTransition = () => {\n        if (props.transition && props.transition === 'Slide') {\n            return TransitionSlide\n        }\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            TransitionComponent={buildTransition()}\n            keepMounted\n            onClose={props.onClose}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">{props.title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    {props.message}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.negativeAction} color=\"primary\">\n                    { props.negativeButton }\n                </Button>\n                <Button onClick={props.positiveAction} color=\"primary\">\n                    { props.positiveButton }\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n\n\n}\n\nexport default CustomDialog","import { makeStyles } from '@material-ui/core'\nimport image from '../../assets/connected_world.svg'\n\nconst drawerWidth = 240\n\nexport default makeStyles(theme => ({\n    appBar: {\n        boxShadow: 'none',\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px) !important`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    toolbar: {\n        backgroundColor: '#FFF',\n        borderBottom: '1px solid #DFE3E8',\n    },\n    title: {\n        flexGrow: 1,\n        color: '#000'\n    },\n    paper: {\n        boxShadow: 'none',\n        border: '1px solid #DFE3E8',\n        padding: 16,\n        color: '#66788A'\n    },\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        backgroundColor: '#f8fafc'\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px) !important`\n    },\n    result: {\n        color: '#000'\n    },\n    contentIcon: {\n        flex: 1\n    },\n    contentInformation: {\n        flex: 2\n    },\n    icon: {\n        backgroundColor: '#45B880',\n        color: '#FFF',\n        padding: 16,\n        fontSize: 50,\n        borderRadius: '50%',\n    },\n    popoverHeader: {\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'contain',\n        backgroundColor: '#f8fafc',\n        backgroundPosition: 'right',\n        width: 350,\n        padding: 30\n    },\n    removePadding: {\n        padding: 0\n    },\n    contentCard: {\n        padding: 16,\n    },\n    card: {\n        marginTop: 5\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    }\n}))","export const EMPLOYEE_ROLE = {\n    COMMON: 'COMMON',\n    ADMIN: 'ADMIN'\n}\n\nexport const USER_STATUS = {\n    ENABLED: 'ENABLED',\n    PENDING: 'PEDING',\n    NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n}\n\nexport const ROUTES = {\n    HOME: '/home/dashboard',\n    EMPLOYEES: '/home/employess',\n    ACCOUNT: '/home/account',\n    HISTORY: '/home/history',\n    SUGGESTION: '/home/suggestion',\n    DEVICES: '/home/devices',\n    ADD_DEVICES: '/home/devices/add',\n    LINES: '/home/lines',\n    ADD_LINES: '/home/lines/add',\n    MAP: '/home/maps',\n    LOGIN: '/login',\n    NEWS: '/home/news',\n    ADD_NEWS: '/home/news/add'\n}","import React from 'react'\nimport { Drawer, Grid, makeStyles, Divider, Typography, List, ListItemIcon, ListItemText, ListItem }  from '@material-ui/core'\nimport createStyle from '../pages/home/style'\nimport { Dashboard, People, AccountBox, History, QuestionAnswer, LocationOn, Directions, Map, Drafts } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES, EMPLOYEE_ROLE } from '../utils/constants'\nimport { useSelector } from 'react-redux'\nimport LOGO from '../assets/logo.png'\n\nconst styles = makeStyles({\n    header: {\n        height: 200,\n    },\n    listItem: {\n        cursor: 'pointer',\n        margin: '8px 0px',\n        borderLeft: '4px solid transparent',\n        '&:hover': {\n            borderLeft: '4px solid #0767DB',\n            borderRadius: 4,\n            backgroundColor: '#F6F9FD',\n            color: '#0767DB !important'\n        },\n        '&:hover $icon': {\n            color: '#0767DB !important'\n        }\n    },\n    activeRoute: {\n        borderLeft: '4px solid #0767DB',\n        borderRadius: 4,\n        backgroundColor: '#F6F9FD'\n    },\n    listItemText: {\n        fontWeight: 500,\n        color: '#66788A',\n        marginLeft: 8,\n    },\n    listItemActive: {\n        color: '#12161B'\n    },\n    iconActive: {\n        color: '#0767DB !important'\n    },\n    icon: {\n        minWidth: 'unset !important',\n        fontWeight: 500,\n        color: '#66788A',\n    },\n    list: {\n        paddingLeft: 8\n    },\n    img: {\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'contain',\n        height: '15vh'\n    }\n})\n\nconst CustomDrawer = props => {\n\n    const user = useSelector(state => state.home.user)\n    const { onClose, open, location: { pathname } } = props\n    const classesLocal = createStyle()\n    const classes = styles()\n    const isAdmin = user.role === EMPLOYEE_ROLE.ADMIN\n    const items = [\n        {\n            icon: <Dashboard/>,\n            text: 'Painel de controle',\n            url: ROUTES.HOME,\n            show: isAdmin,\n            isActive: pathname.includes(ROUTES.HOME),\n            onClick() { pathname !== ROUTES.HOME && handleRoute(ROUTES.HOME) }\n        },\n        {\n            icon: <Map/>,\n            text: 'Mapa',\n            url: ROUTES.MAP,\n            show: true,\n            isActive: pathname.includes(ROUTES.MAP),\n            onClick() { pathname !== ROUTES.MAP && handleRoute(ROUTES.MAP) }\n        },\n        {\n            icon: <AccountBox/>,\n            text: 'Minha Conta',\n            url: ROUTES.ACCOUNT,\n            show: true,\n            isActive: pathname.includes(ROUTES.ACCOUNT),\n            onClick() { pathname !== ROUTES.ACCOUNT && handleRoute(ROUTES.ACCOUNT) }\n        },\n        {\n            icon: <People/>,\n            text: 'Funcionários',\n            url: ROUTES.EMPLOYEES,\n            show: true,\n            isActive: pathname.includes(ROUTES.EMPLOYEES),\n            onClick() { pathname !== ROUTES.EMPLOYEES && handleRoute(ROUTES.EMPLOYEES) }\n        },\n        {\n            icon: <History/>,\n            text: 'Histórico',\n            url: ROUTES.HISTORY,\n            show: isAdmin,\n            isActive: pathname.includes(ROUTES.HISTORY),\n            onClick() { pathname !== ROUTES.HISTORY && handleRoute(ROUTES.HISTORY) }\n        },\n        {\n            icon: <QuestionAnswer/>,\n            text: 'Dúvidas e sugestões',\n            url: ROUTES.SUGGESTION,\n            show: true,\n            isActive: pathname.includes(ROUTES.SUGGESTION),\n            onClick() { pathname !== ROUTES.SUGGESTION && handleRoute(ROUTES.SUGGESTION) }\n        },\n        {\n            icon: <LocationOn/>,\n            text: 'Dispositivos',\n            url: ROUTES.DEVICES,\n            show: true,\n            isActive: pathname.includes(ROUTES.DEVICES),\n            onClick() { pathname !== ROUTES.DEVICES && handleRoute(ROUTES.DEVICES) }\n        },\n        {\n            icon: <Directions/>,\n            text: 'Linhas',\n            url: ROUTES.LINES,\n            show: true,\n            isActive: pathname.includes(ROUTES.LINES),\n            onClick() { pathname !== ROUTES.LINES && handleRoute(ROUTES.LINES) }\n        },\n        {\n            icon: <Drafts/>,\n            text: 'Notícias',\n            url: ROUTES.NEWS,\n            show: true,\n            isActive: pathname.includes(ROUTES.NEWS),\n            onClick() { pathname !== ROUTES.NEWS && handleRoute(ROUTES.NEWS) }\n        },\n    ]\n    function handleRoute(route) {\n        props.history.push(route)\n    }\n\n    function buildListItem() {\n        return items.map((item, index) => {\n            if (item.show) {\n                return (\n                    <ListItem key={index.toString()} onClick={item.onClick} className={clsx(classes.listItem, { [classes.activeRoute]: item.isActive })} >\n                        <ListItemIcon className={clsx(classes.icon, { [classes.iconActive]:item.isActive })}>\n                        { item.icon }\n                        </ListItemIcon>\n                        <ListItemText className={clsx(classes.listItemText, { [classes.listItemActive]: item.isActive })}>\n                        { item.text }\n                        </ListItemText>\n                    </ListItem>\n                )\n            }\n            return null\n        })\n    }\n\n    return (\n        <Drawer\n            variant=\"persistent\"\n            onClose={onClose}\n            className={classesLocal.drawer}\n            anchor=\"left\"\n            open={open}\n            classes={{\n            paper: classesLocal.drawerPaper,\n            }}\n        >\n            <Divider />\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.header} >\n                <img className={classes.img} src={LOGO} alt=\"logo\" />\n                <Typography variant=\"h6\" >{ user.name }</Typography>\n                <span>{ user.email }</span>\n            </Grid>\n            <Divider />\n            <List className={classes.list}>\n                { buildListItem() }\n            </List>\n        </Drawer>\n    )\n\n}\n\nexport default withRouter(CustomDrawer)","import React, { useState } from 'react'\nimport createStyle from '../style/global'\nimport createStyleLocal from '../pages/home/style'\nimport { Menu, Close } from '@material-ui/icons'\nimport { Notifications, ExitToApp, ChevronRight } from '@material-ui/icons'\nimport {\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Badge,\n    Popover,\n    Grid,\n    List,\n    ListItemText,\n    ListItemSecondaryAction,\n    ListItem,\n    Divider\n} from '@material-ui/core'\nimport { EMPLOYEE_ROLE } from '../utils/constants'\nimport Drawer from './Drawer'\nimport clsx from 'clsx'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../utils/constants'\nimport { useSelector } from 'react-redux'\n\nconst CustomAppBar = props => {\n\n    const titles = {\n        [ROUTES.HOME]: 'Painel de controle',\n        [ROUTES.EMPLOYEES]: 'Funcionários',\n        [ROUTES.ACCOUNT]: 'Minha Conta',\n        [ROUTES.HISTORY]: 'Histórico',\n        [ROUTES.SUGGESTION]: 'Dúvidas e sugestões',\n        [ROUTES.DEVICES]: 'Dipositivos',\n        [ROUTES.ADD_DEVICES]: 'Adicionar dispositivo',\n        [ROUTES.LINES]: 'Linhas',\n        [ROUTES.ADD_LINES]: 'Adicionar linha',\n        [ROUTES.MAP]: 'Mapa',\n        [ROUTES.NEWS]: 'Notícias'\n    }\n    const user = useSelector(state => state.home.user)\n    const classes = createStyle()\n    const classesLocal = createStyleLocal()\n    const [ open, setOpen ] = useState(false)\n    const [ openDrawer, setDrawer ] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const size = props.usersNotAuthorized.length\n\n    const handleClose = () => setOpen(!open)\n    const handleDrawer = () => {\n        props.onDrawer(!openDrawer)\n        setDrawer(!openDrawer)\n    }\n\n    function handleClick(event) {\n        if (size) {\n            if (!open) {\n                setAnchorEl(event.currentTarget)\n            } else {\n                setAnchorEl(null)    \n            }\n            setOpen(!open)\n        }\n    }\n    function verifyNotification() {\n        if (size) {\n            return (\n                <Badge badgeContent={size} color=\"secondary\">\n                    <Notifications />\n                </Badge>\n            )\n        }\n        return <Notifications />\n    }\n\n    function buildItems() {\n        return props.usersNotAuthorized.map(user => {\n            return (\n                <React.Fragment key={user._id}>\n                    <ListItem onClick={() => {\n                        handleClose()\n                        props.onSelectedUser(user)\n                    }} button className={classesLocal.content}>\n                        <ListItemText primary={user.name} secondary={user.email} />\n                        <ListItemSecondaryAction>\n                            <ChevronRight />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider />\n                </React.Fragment>\n            )\n        })\n    }\n\n    return (\n        <>\n            <AppBar position=\"relative\" className={clsx(classesLocal.appBar, { [classesLocal.appBarShift]: openDrawer })}>\n                <Toolbar className={classesLocal.toolbar}>\n                    <IconButton\n                        onClick={handleDrawer}\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        aria-label=\"Open drawer\"\n                    >\n                    {\n                        openDrawer ? <Close /> : <Menu />\n                    }\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classesLocal.title}>\n                        { titles[props.location.pathname] || 'Painel de controle' }\n                    </Typography>\n                    {   (user && user.role === EMPLOYEE_ROLE.ADMIN) &&\n                        <IconButton onClick={handleClick}>\n                            { verifyNotification() }\n                        </IconButton>\n                    }\n                    <IconButton onClick={props.handleClose}>\n                        <ExitToApp />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n                }}\n                transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n                }}\n            >\n                <Grid className={classesLocal.popoverHeader}>\n                    <Typography variant=\"h5\">\n                        Solicitação de entrada\n                    </Typography>\n                </Grid>\n                <Grid>\n                    <List className={classesLocal.removePadding}>\n                        { buildItems() }\n                    </List>\n                </Grid>\n            </Popover>\n            <Drawer onClose={handleDrawer} open={openDrawer} />\n        </>\n    )\n}\n\nexport default withRouter(CustomAppBar)","import React, { useState, useEffect } from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n    Grid,\n    Typography,\n    makeStyles,\n    Checkbox,\n    CircularProgress\n} from '@material-ui/core'\nimport { EMPLOYEE_ROLE, USER_STATUS } from '../utils/constants'\nimport network from '../services/network'\nimport { useDispatch } from 'react-redux'\nimport { updateLoading as loadingGlobal } from '../redux/components/action'\nimport { deleteUserFromNotAuthorized } from '../redux/home/actions'\n\nconst createStyle = makeStyles({\n    field: {\n        flex: 1\n    },\n    information: {\n        flex: 3\n    },\n    checkBox: {\n        paddingLeft: 0,\n        '&:hover': {\n            backgroundColor: 'transparent !important'\n        }\n    }\n})\n\nconst CustomDialog = props => {\n\n    const dispatch = useDispatch()\n    let { user } = props\n    if (!user) {\n        user = { name: '', email: '', cpf: '', role: EMPLOYEE_ROLE.COMMON }\n    }\n    const isAdmin = user.role === EMPLOYEE_ROLE.ADMIN\n    const styles = createStyle()\n    const [ value, setValue ] = useState()\n    const [ loading, setLoading ] = useState(false)\n    useEffect(() => {\n        setValue(isAdmin)\n        if (!props.open) {\n            setValue(false)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.open ])\n\n    function requestServer() {\n        const body = {\n            name: user.name,\n            cpf: user.cpf,\n            status: USER_STATUS.ENABLED,\n            email: user.email\n        }\n        if (value) {\n            body.role = EMPLOYEE_ROLE.ADMIN\n        } else {\n            body.role = EMPLOYEE_ROLE.COMMON\n        }\n        const callback = cb => {\n            cb()\n            setLoading(false)\n            dispatch(loadingGlobal(false))\n            dispatch(deleteUserFromNotAuthorized(user._id))\n        }\n        setLoading(true)\n        dispatch(loadingGlobal(true))\n        network.patch('employee/edit', body)\n        .then(() => callback(props.success))\n        .catch(e => callback(props.error))\n    }\n\n    function handleLoading() {\n        if (loading) {\n            return <CircularProgress/>\n        } else {\n            return (\n            <Button onClick={requestServer} color=\"primary\">\n                Sim\n            </Button>\n            )\n        }\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            keepMounted\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Atenção</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    { props.message }\n                </DialogContentText>\n                <Grid container direction=\"row\" wrap=\"nowrap\">\n                    <Grid container className={styles.field}  ><Typography>Nome: </Typography></Grid>\n                    <Grid container className={styles.information} ><Typography >{ user.name }</Typography></Grid>\n                </Grid>\n                <Grid container direction=\"row\" wrap=\"nowrap\" >\n                    <Grid container className={styles.field} ><Typography>Cpf: </Typography></Grid>\n                    <Grid container className={styles.information} ><Typography >{ user.cpf }</Typography></Grid>\n                </Grid>\n                <Grid container direction=\"row\" wrap=\"nowrap\" >\n                    <Grid container className={styles.field} ><Typography>Email: </Typography></Grid>\n                    <Grid container className={styles.information} >\n                        <Typography >{ user.email }</Typography>\n                    </Grid>\n                </Grid>\n                <Grid container direction=\"row\" wrap=\"nowrap\" alignItems=\"center\" >\n                    <Grid>\n                        <Checkbox color=\"primary\" checked={value} onChange={event => setValue(event.target.checked)} className={styles.checkBox} />\n                    </Grid>\n                    <Grid>\n                        <Typography >{ props.messageCheckBox }</Typography>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.negativeAction} color=\"primary\">\n                    Não\n                </Button>\n                { handleLoading() }\n            </DialogActions>\n        </Dialog>\n    )\n\n\n}\n\nexport default CustomDialog","import React from 'react'\nimport { EMPLOYEE_ROLE, USER_STATUS } from '../utils/constants'\n\nexport const Status = ({ status }) => {\n    \n    function getMessage() {\n        if (status === USER_STATUS.PENDING) {\n            return 'Usuário pendente'\n        } else if (status === USER_STATUS.NOT_AUTHORIZED) {\n            return 'Não autorizado'\n        } else if (status === USER_STATUS.ENABLED) {\n            return 'Usuário habilitado'\n        }\n        return 'Desconhecido'\n    }\n    \n    return (\n        <p>{ getMessage() }</p>\n    )\n}\n\nexport const Role = ({ role }) => {\n    \n    function getMessage() {\n        if (role === EMPLOYEE_ROLE.ADMIN) {\n            return 'Administrador'\n        } else if (role === EMPLOYEE_ROLE.COMMON) {\n            return 'Comum'\n        }\n        return 'Desconhecido'\n    }\n    \n    return (\n        <p>{ getMessage() }</p>\n    )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { requestEmployees, removeEmployee } from '../../redux/employees/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    makeStyles,\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    Button,\n    TextField,\n    InputAdornment,\n    IconButton,\n} from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { Status, Role } from '../../components/status'\nimport { EMPLOYEE_ROLE } from '../../utils/constants'\nimport { Delete } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport Dialog from '../../components/dialog'\nimport CustomDialog from '../../components/CustomDialog'\n\nconst createStyle = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 32\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    input: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    }\n}))\n\nconst Employee = props => {\n\n    const classes = createStyle()\n\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestEmployees(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    const [ open, setOpen ] = useState(false)\n    const [ openCustomDialog, setOpenCustomDialog ] = useState(false)\n    const [ user, setUser ] = useState({ name: '', email: ''})\n    const isAdmin = props.user.role === EMPLOYEE_ROLE.ADMIN\n    useEffect(() => {\n        props.requestEmployees(props.page, props.data.limit, text, () => {\n            toast.error('Falha na comunicação com o servidor')\n        })\n\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    function requestServer(page = props.data.page) {\n        if (!props.isLoading) {\n            props.requestEmployees(page, props.data.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.data.total}\n                page={props.data.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.data.docs.map(employee => {\n            return (\n                <TableRow onClick={() => {\n                    if (isAdmin) {\n                        setUser(employee)\n                        setOpenCustomDialog(true)\n                    }\n                }} hover={isAdmin} key={employee._id}>\n                    <TableCell>{employee.name}</TableCell>\n                    <TableCell>{employee.email}</TableCell>\n                    <TableCell><Status status={employee.status} /></TableCell>\n                    <TableCell><Role role={employee.role} /></TableCell>\n                    {\n                        isAdmin &&\n                        <TableCell component=\"th\">\n                            <Button onClick={ev => {\n                                ev.stopPropagation()\n                                setOpen(true)\n                                setUser(employee)\n                            }} variant=\"outlined\" color=\"secondary\">\n                                Remover\n                                <Delete className={classes.rightIcon} />\n                            </Button>\n                        </TableCell>\n                    }\n                </TableRow>\n            )\n        })\n    }\n\n    function deleteUser() {\n        setOpen(false)\n        if (user.email) {\n            props.removeEmployee(user, () => {\n                toast.success('Usuário removido com sucesso', { autoClose: 2000 })\n                props.requestEmployees(props.data.page, props.data.limit)\n            }, () => toast.error('Falha ao deletar usuário'))\n        }\n    }\n    return (\n        <Grid className={classes.root}>\n            <TextField\n                onChange={ev => subject.next(ev.target.value)}\n                className={classes.input}\n                variant=\"outlined\"\n                label=\"Procurar\"\n                placeholder=\"Digite aqui para buscar\"\n                InputProps={{\n                    startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestEmployees(1, 10, text)}><Search /></IconButton></InputAdornment>\n                }}\n            />\n            <Paper className={classes.tableWrapper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell component=\"th\" >Nome</TableCell>\n                            <TableCell component=\"th\">Email</TableCell>\n                            <TableCell component=\"th\">Status</TableCell>\n                            <TableCell component=\"th\">Papel</TableCell>\n                            {\n                                isAdmin &&\n                                <TableCell component=\"th\">Remover</TableCell>\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { buildItems() }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow>\n                           { renderFooter() }\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n            <Dialog \n                open={open}\n                onClose={setOpen}\n                title=\"Atenção\"\n                message={`Deseja remover o usuário ${user.name}?`}\n                negativeButton=\"Não\"\n                positiveButton=\"Sim\"\n                negativeAction={() => setOpen(false)}\n                positiveAction={() => deleteUser()}\n            />\n            <CustomDialog\n                message=\"Deseja aleterar permissão desse usuário?\"\n                messageCheckBox=\"Administrador\"\n                success={() => {\n                    setOpenCustomDialog(false)\n                    requestServer()\n                    toast.success('Usuário editado', { autoClose: 2000 })\n                }}\n                error={() => {\n                    setOpenCustomDialog(false)\n                    toast.error('Falha editar usuário', { autoClose: 2000 })\n                }}\n                user={user}\n                open={openCustomDialog}\n                negativeAction={() => setOpenCustomDialog(false)}\n            />\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    data: state.employee.data,\n    isLoading: state.component.loading,\n    user: state.home.user,\n})\n\nexport default connect(mapStateToProps, { requestEmployees, removeEmployee })(Employee)","import React, { useState, useEffect } from 'react'\nimport { Paper, Grid, TextField, Button, Typography, Divider, makeStyles } from '@material-ui/core'\nimport InputMask from 'react-input-mask'\nimport {toast} from 'react-toastify'\nimport network from '../../services/network'\nimport { useDispatch } from 'react-redux'\nimport { updateLoading } from '../../redux/components/action'\nimport { handleUser } from '../../redux/home/actions'\n\nconst styles = makeStyles({\n    root: {\n        padding: 16\n    },\n    contentPadding: {\n        padding: 32,\n    },\n    content: {\n        width: '70%'\n    },\n    contentButton: {\n        margin: '16px 32px'\n    }\n})\n\nfunction Account(props) {\n\n    useEffect(() => {\n        network.get('employee/current')\n        .then(({data}) => setUser(data))\n        .catch(e => toast.error('Falha de comunicação com o servidor'))\n    }, [  ])\n    const dispatch = useDispatch()\n    const classes = styles()\n    const [ user, setUser ] = useState({\n        name: '',\n        email: '',\n        cpf: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const handleInput = target => event => {\n        setUser({ ...user, [target]: event.target.value })\n    }\n    const verifyUser = () => {\n        if (user) {\n            const { email, cpf, password, confirmPassword, name } = user\n            if (email && cpf && password && confirmPassword && name) {\n                return false\n            }\n            return true\n        }\n        return true\n    }\n\n    function editUser() {\n        if (user.password !== user.confirmPassword) {\n            toast.error('Senhas diferentes')\n        } else {\n            dispatch(updateLoading(true))\n            network.patch('employee/edit', user)\n            .then(({data}) => {\n                dispatch(updateLoading(false))\n                dispatch(handleUser(data.user))\n                toast.success('Conta editada com sucesso')\n            })\n            .catch(e => {\n                dispatch(updateLoading(false))\n                toast.error('Falha editar conta')\n            })\n        }\n    }\n\n    return (\n        <Grid className={classes.root} container justify=\"center\" alignItems=\"center\">\n            <Paper className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid className={classes.contentPadding}>\n                        <Typography variant=\"h5\">Perfil</Typography>\n                        <Typography variant=\"h6\">As informações podem ser editadas</Typography>\n                    </Grid>\n                    <Divider />\n                    <Grid className={classes.contentPadding} container direction=\"column\">\n                        <TextField\n                            onChange={handleInput('name')}\n                            label=\"Nome\"\n                            margin=\"normal\"\n                            placeholder=\"Informe email\"\n                            variant=\"outlined\"\n                            value={user.name}\n                            />\n                        <TextField\n                            label=\"Email\"\n                            margin=\"normal\"\n                            placeholder=\"Informe email\"\n                            variant=\"outlined\"\n                            value={user.email}\n                            disabled\n                            />\n                        <InputMask mask=\"999.999.999-99\" value={user.cpf || ''} onChange={handleInput('cpf')}>\n                            {\n                                props => <TextField\n                                    {...props}\n                                    label=\"Cpf\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                />\n                            }\n                        </InputMask>\n                        <TextField\n                            onChange={handleInput('password')}\n                            label=\"Senha\"\n                            margin=\"normal\"\n                            type=\"password\"\n                            placeholder=\"Informe senha\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            onChange={handleInput('confirmPassword')}\n                            label=\"Confirme senha\"\n                            margin=\"normal\"\n                            type=\"password\"\n                            placeholder=\"Informe senha\"\n                            variant=\"outlined\"\n                            \n                        />\n                    </Grid>\n                    <Divider />\n                    <Grid className={classes.contentButton}>\n                        <Button onClick={editUser} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\n                            Salvar\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    )\n\n}\n\nexport default Account","import React from 'react'\nimport storage from '../../services/storage'\nimport { EMPLOYEE_ROLE, ROUTES } from '../../utils/constants'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nexport default props => {\n\n    const REDIRECT_TO_LOGIN = 3\n    const REDIRECT_TO_MAP = 2\n    const RENDER_CHILDREN = 1\n\n    const user = useSelector(state => state.home.user)\n    \n    function getRedirectRoute() {\n        const storageUser = storage.getUser()\n        if (!storageUser) {\n            return REDIRECT_TO_LOGIN\n        }\n        if (props.onlyToken) {\n            return RENDER_CHILDREN\n        }\n        if ((!user.role && storageUser.role === EMPLOYEE_ROLE.ADMIN) ||\n            (user.role === EMPLOYEE_ROLE.ADMIN)) {\n            return RENDER_CHILDREN\n        }\n        return REDIRECT_TO_MAP\n    }\n\n    function handleRoute() {\n        const result = getRedirectRoute()\n        if (result === REDIRECT_TO_LOGIN) {\n            return <Redirect to={ROUTES.LOGIN} />\n        } else if (result === RENDER_CHILDREN) {\n            return props.children\n        } else {\n            return <Redirect to={ROUTES.MAP} />\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {handleRoute()}\n        </React.Fragment>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { requestHistories } from '../../redux/history/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    makeStyles,\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n} from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport Auth from '../auth/auth'\n\nconst createStyle = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 32\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    input: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    }\n}))\n\nconst History = props => {\n\n    const classes = createStyle()\n\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestHistories(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        props.requestHistories(props.page, props.limit, text, () => {\n            toast.error('Falha na comunicação com o servidor')\n        })\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestHistories(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(history => {\n            return (\n                <TableRow key={history._id}>\n                    <TableCell>{history.email}</TableCell>\n                    <TableCell>{history.reason}</TableCell>\n                    <TableCell>{new Date(history.createdAt).toLocaleString()}</TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Auth>\n            <Grid className={classes.root}>\n                <TextField\n                    onChange={ev => subject.next(ev.target.value)}\n                    className={classes.input}\n                    variant=\"outlined\"\n                    label=\"Procurar\"\n                    placeholder=\"Digite aqui para buscar, para data: yyyy-mm-dd\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestHistories(1, 10, text)}><Search /></IconButton></InputAdornment>\n                    }}\n                />\n                <Paper className={classes.tableWrapper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell component=\"th\" >Usuário</TableCell>\n                                <TableCell component=\"th\">Mensagem</TableCell>\n                                <TableCell component=\"th\">Criado em</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            { buildItems() }\n                        </TableBody>\n                        <TableFooter>\n                            <TableRow>\n                            { renderFooter() }\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </Paper>\n            </Grid>\n        </Auth>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.history,\n    isLoading: state.component.loading,\n})\n\nexport default connect(mapStateToProps, { requestHistories })(History)","import React from 'react'\nimport { compose, withProps } from 'recompose'\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps'\n\nexport default compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCfg6PgpQycYtUFaSRl336lsM8EDPmpmfI&v=3.exp&libraries=geometry,drawing,places&callback=initMap\",\n        center: { lat: -22.2295935, lng: -45.9434848 },\n        loadingElement: <div style={{ width: '100%' }} />,\n        containerElement: <div style={{ width: '100%' }} />,\n        mapElement: <div style={{ height: `100%`, width: '100%' }} />\n    }),\n    withScriptjs,\n    withGoogleMap\n)(HandleMap)\n\nfunction HandleMap(props) {\n\n    const { children, onClick } = props\n    \n    return (\n        <GoogleMap defaultZoom={15} onClick={ev => onClick && onClick(ev)} defaultCenter={props.center} >\n            { children && children }\n        </GoogleMap>\n    )\n}","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles({\n    filterBtn: {\n        position: 'absolute',\n        top: 20,\n        right: 20,\n        zIndex: 1\n    },\n    contentMap: {\n        position: 'relative'\n    }\n})","import { connect } from 'mqtt'\n\nconst clientId = 'mqtt_rasp' + Math.random().toString(16).substr(2, 8)\n\nconst client = connect('ws://ec2-18-228-196-51.sa-east-1.compute.amazonaws.com:9001', { username: 'TCC', password: 'TCC', clientId })\n\nclient.on('connect', () => console.log('connected'))\nclient.on('reconnect', () => console.log('reconnect'))\nclient.on('disconnect', () => console.log('disconnected'))\nclient.on('error', (e) => console.log('error', e))\nclient.on('offline', () => console.log('offline'))\n\nexport default client","import React, { useEffect, useState } from 'react'\nimport { Grid, Drawer, Button, Typography } from '@material-ui/core'\nimport Maps from '../../components/Map'\nimport MarkerWithLabel from 'react-google-maps/lib/components/addons/MarkerWithLabel'\nimport { connect } from 'react-redux'\nimport { requestAllDevices, updateDevices, requestDeviceById } from '../../redux/devices/action'\nimport BUS from '../../assets/bus.png'\nimport createStyle from '../../style/global'\nimport createLocalStyle from './styles'\nimport { toast } from 'react-toastify'\nimport { Polyline } from 'react-google-maps'\nimport mqtt from '../../services/mqtt'\nimport store from '../../redux/index'\n\nconst mapStateToProps = state => ({devices: state.device.devices, loading: state.component.loading, currentDevice: state.device.currentDevice})\n\nexport default connect(mapStateToProps, { requestAllDevices, updateDevices, requestDeviceById })(PageMaps)\n\nfunction PageMaps(props) {\n\n    const [ load, setLoad ] = useState(false)\n    const [ controller, setController ] = useState({ device: null, open: false, filter: false })\n    const classes = createStyle({ marginVertical: '16px' })\n    const classesLocal = createLocalStyle()\n\n    useEffect(() => {\n        window.initMap = () => setLoad(true)\n        if (load || window.google) {\n            props.requestAllDevices()\n            mqtt.subscribe('#')\n            mqtt.addListener('message', onMessage)\n        }\n        return () => {\n            props.updateDevices([])\n            mqtt.removeListener('message', onMessage)\n            mqtt.unsubscribe('#')\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ load ])\n\n    useEffect(() => {\n        if (props.currentDevice) {\n            setController({ device: props.currentDevice, open: false, filter: true })\n        }\n    }, [ props.currentDevice ])\n\n    function onMessage(topic, message) {\n        try {\n            if (topic.endsWith('/location')) {\n                const id = topic.split('/')[0]\n                const stateDevices = store.getState().device.devices\n                const devices = [...stateDevices]\n                const deviceFound = devices.find(device => device.uuid === id)\n                if (deviceFound) {\n                    const payload = JSON.parse(String(message))\n                    deviceFound.latitude = payload.lat\n                    deviceFound.longitude = payload.lon\n                    props.updateDevices(devices) \n                }\n            }\n        } catch {}\n    }\n\n    function buildRoute() {\n        if (controller.filter && controller.device.line.directions) {\n            return <Polyline\n                path={controller.device.line.directions.routes}\n                geodesic={true}\n                options={{\n                    strokeColor: \"#ff2527\",\n                    strokeWeight: 3,\n                 }}\n            />\n        }\n    }\n\n    function buildPoints() {\n        if (controller.filter && controller.device.line.points) {\n            return controller.device.line.points.map((point, index) => {\n                return (\n                    <MarkerWithLabel\n                        key={index.toString()}\n                        position={point}\n                        labelAnchor={new window.google.maps.Point(0, 0)}\n                        labelStyle={point.name && {backgroundColor: \"#FFF\", fontSize: \"12px\", padding: \"8px\", borderRadius: '8px'}}\n                    >\n                        { point.name ? <div>{point.name}</div> : <div></div> }\n                    </MarkerWithLabel>\n                )\n            })\n        }\n    }\n\n    function buildMarker() {\n        const { google } = window\n        if (google) {\n            return props.devices\n            .filter(device => !(controller.filter && controller.device && controller.device._id !== device._id))\n            .map(device => {\n                const message = device.lineNumber ? `${device.lineNumber} - ${device.lineDescription}` : null\n                if (device.latitude && device.longitude) {\n                    return (\n                        <MarkerWithLabel\n                            onClick={() => setController({ ...controller, open: true, device })}\n                            key={device._id}\n                            icon={{\n                                url: BUS,\n                                scaledSize:  new google.maps.Size(50,50)\n                            }}\n                            position={{ lat: device.latitude, lng: device.longitude }}\n                            labelAnchor={new google.maps.Point(0, 0)}\n                            labelStyle={message && {backgroundColor: \"#FFF\", fontSize: \"12px\", padding: \"8px\", borderRadius: '8px'}}\n                        >\n                            { message ? <div>{message}</div> : <div></div> }\n                        </MarkerWithLabel>\n                    )\n                }\n                return null\n            })\n        }\n    }\n\n    function buildDrawer() {\n        if (controller.device) {\n            const message = controller.device.lineNumber ? `${controller.device.lineNumber} - ${controller.device.lineDescription}` : 'Sem linha associada'\n            return (\n                <Drawer open={controller.open} onClose={() => setController({...controller, open: false})} anchor=\"top\">\n                    <Grid className={classes.container} container direction=\"column\">\n                        <Typography className={classes.marginVertical} variant=\"h4\">{ controller.device.name }</Typography>\n                        <Typography variant=\"h5\">{ message }</Typography>\n                        <Grid>\n                            <Button onClick={() => {\n                                if (controller.device.line) {\n                                    props.requestDeviceById(controller.device._id, () => {\n                                        toast.error('Falha ao verificar rota')\n                                        setController({ device: null, filter: false, open: false })\n                                    })\n                                }\n                            }} className={classes.marginVertical} color=\"primary\" variant=\"outlined\">Visualizar linha</Button>\n                        </Grid>\n                    </Grid>\n                </Drawer>\n            )\n        }\n    }\n\n    return (\n      <Grid className={classesLocal.contentMap} container>\n        {controller.filter && (\n          <Button\n            onClick={() => setController({ device: null, filter: false, open: false })}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classesLocal.filterBtn}\n          >\n            Remover filtro\n          </Button>\n        )}\n        <Maps>\n          {buildMarker()}\n          {buildRoute()}\n          {buildPoints()}\n        </Maps>\n        {buildDrawer()}\n      </Grid>\n    );\n}","import React, { useState, useEffect } from 'react'\nimport { Grid, TextField, Fab } from '@material-ui/core'\nimport { updateLoading } from '../../../redux/components/action'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport clsx from 'clsx'\nimport client from '../../../services/mqtt'\nimport { timer } from 'rxjs'\nimport styles from './style'\n\nconst CONNECTED = 'Conectado'\nconst DISCONNECTED = 'Desconectado'\nconst CONNECTING = 'Conectando...'\nlet subscription\n\nexport default function(props) {\n    \n    const [ status, setStatus ] = useState('Status')\n    const [ device, setDevice ] = useState({ text: '', topic: '', latitude : '', longitude: '', time: '' })\n    const classes = styles()\n    const dispatch = useDispatch()\n    const loading = useSelector(state => state.component.loading)\n\n    useEffect(() => {\n        return () => {\n            client.removeListener('message', onMessage)\n            client.unsubscribe(device.topic)\n            dispatch(updateLoading(false))\n            if (subscription) {\n                subscription.unsubscribe()\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n   \n    function tryConnection() {\n        if (!loading) {\n            if (device) {\n                client.subscribe(device.topic)\n                client.publish(device.text.concat('/ping'), 'ping')\n                client.addListener('message', onMessage)\n                subscription = timer(10000).subscribe(() => {\n                    client.unsubscribe(device.topic)\n                    dispatch(updateLoading(false))\n                    setStatus(DISCONNECTED)\n                })\n                dispatch(updateLoading(true))\n                setStatus(CONNECTING)\n                \n            } else {\n                toast.info('Informe o identificador do dispositivo')\n            }\n        }\n    }\n\n    function onMessage(topic, message) {\n        if (topic === device.topic && message) {\n            client.unsubscribe(device.topic)\n            dispatch(updateLoading(false))\n            setStatus(CONNECTED)\n            subscription.unsubscribe()\n            const payload = JSON.parse(message.toString())\n            if (payload) {\n                setDevice({...device,latitude:payload.lat, longitude:payload.lon, time:payload.time}) \n            }\n        }\n    }\n    return (\n        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" className={clsx(classes.padding, classes.content)}>\n            <h2 className={clsx({ [classes.colorPositive]: status === CONNECTED, [classes.colorNegative]: status === DISCONNECTED })}>{status}</h2>\n            <TextField\n                disabled={loading}\n                value={device.text}\n                onChange={ev => setDevice({...device, text: ev.target.value, topic: ev.target.value + '/pong'})}\n                className={classes.input}\n                variant=\"outlined\"\n                placeholder=\"Informe identificador do dispositivo\"\n                label=\"Dispositivo\"\n            />\n            <Grid>\n                <Fab className={classes.margin} color=\"primary\" variant=\"extended\" onClick={tryConnection}>\n                    Conectar\n                </Fab>\n                <Fab disabled={status !== CONNECTED} className={classes.margin} variant=\"extended\" onClick={() => props.finishProccess(device)}>\n                    Próximo passo\n                </Fab>\n            </Grid>\n        </Grid>\n    )\n}\n\n","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(theme => ({\n    title: {\n        margin: 0,\n        fontWeight: 'normal',\n    },\n    contentTitle: {\n        display: 'flex',\n        margin: '5px 32px',\n        alignItems: 'center',\n        '& h3': {\n            marginLeft: 16,\n            marginTop: 3\n        }\n    },\n    contentTalk: {\n        maxHeight: 'calc(100vh - 65px)'\n    },\n    contentMessages: {\n        flex: 1,\n        overflowY: 'auto',\n    },\n    input: {\n        flex: 1,\n        alignItems: 'flex-start'\n    },\n    contentInputMessage: {\n        border: '1px solid #DFE3E8',\n        backgroundColor: '#FFF',\n        borderRadius: 2,\n        display: 'flex',\n        flex: 1,\n        padding: 5\n    },\n    icon: {\n        marginLeft: theme.spacing(1)\n    },\n    footer: {\n        flex: .3,\n        padding: 16\n    },\n    contentField: {\n        width: '100%',\n        minHeight: '20vh',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    contentButton: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    contentList: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        padding: '0px 32px 5px 32px'\n    },\n    card: {\n        boxShadow: '0 1px 15px rgba(0,0,0,.04), 0 1px 6px rgba(0,0,0,.04)',\n        borderRadius: 'calc(.15rem - 1px)',\n        border: 'initial',\n        backgroundColor: '#FFF',\n        padding: 16,\n        display: 'flex',\n        flexDirection: 'column',\n        width: 'max-content',\n        maxWidth: '70%'\n    },\n    cardMessage: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        '& p': {\n            margin: 0\n        }\n    },\n    contentCard: {\n        marginTop: 16,\n        width: '100%'\n    },\n    contentRight: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    date: {\n        marginLeft: '16px !important',\n        fontSize: '.6rem'\n    },\n    name: {\n        fontStyle: 'italic'\n    },\n    contentTime: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n","import React, { useEffect, useState, useRef } from 'react'\nimport { Grid, Input, Divider, Button, IconButton} from '@material-ui/core'\nimport { Send, Delete } from '@material-ui/icons'\nimport styles from './styles'\nimport { withRouter } from 'react-router-dom'\nimport { connect, useDispatch } from 'react-redux'\nimport { getSuggestionById, removeMessage } from '../../../redux/suggestion/action'\nimport { updateLoading } from '../../../redux/components/action'\nimport network from '../../../services/network'\nimport storage from '../../../services/storage'\nimport { toast } from 'react-toastify'\nimport clsx from 'clsx'\n\nconst mapStateToProps = state => ({ suggestion: state.suggestion.suggestion, user: state.home.user, loading: state.component.loading })\n\nexport default connect(\n    mapStateToProps,\n    { getSuggestionById, removeMessage }\n)(withRouter(function Talk(props) {\n\n    const { suggestion } = props\n    const { match: { params } } = props\n    const classes = styles()\n    const [ text, setText ] = useState('')\n    const dispatch = useDispatch()\n    const { entity } = storage.getUser()\n    const listRef = useRef(null)\n    useEffect(() => {\n        props.getSuggestionById(params.id, () => props.history.goBack())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(scrollBottom, [ suggestion ])\n    function buildItems() {\n        if (suggestion) {\n            return suggestion.messages.map((content, index) => {\n                return (\n                    <div key={index.toString()} className={clsx(classes.contentCard, { [classes.contentRight]: props.user._id === content.by._id })}>\n                        <div className={classes.card}>\n                            <div className={classes.cardMessage}>\n                                <p className={classes.name}>{ content.by.name }</p>\n                                <div className={classes.contentTime}>\n                                    <p className={classes.date}>{ new Date(content.createdAt).toLocaleString() }</p>\n                                    {\n                                        props.user._id === content.by._id &&\n                                        <IconButton onClick={() => removeMessage(content)}>\n                                            <Delete />\n                                        </IconButton>\n                                    }\n                                </div>\n                                \n                            </div>\n                            <div>\n                                <p>{ content.message }</p>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n        return null\n    }\n\n    function scrollBottom() {\n        const scrollHeight = listRef.current.scrollHeight;\n        const height = listRef.current.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        listRef.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n\n    async function createMessage() {\n        if (suggestion && entity) {\n            const body = {id: suggestion._id, data: { by: props.user._id, message: text, onModel: entity }}\n            dispatch(updateLoading(true))\n            try {\n                setText('')\n                await network.patch('suggestion', body)\n                props.getSuggestionById(params.id)\n            } catch {\n                dispatch(updateLoading(false))\n                toast.error('Falha ao enviar mensagem')\n            }\n        }\n    }\n\n    function removeMessage(message) {\n        if (!props.loading) {\n            props.removeMessage(\n                suggestion._id, \n                message._id,\n                () => props.getSuggestionById(params.id),\n                () => toast.error('Houve um erro ao remover mensagem', {autoClose: 3000})\n            )\n        }\n    }\n\n    return (\n        <Grid container direction=\"column\" wrap=\"nowrap\" className={classes.contentTalk}>\n            <Grid className={classes.contentMessages} container wrap=\"nowrap\" direction=\"column\">\n                <div className={classes.contentTitle}>\n                    <h2 className={classes.title}>Título: </h2>\n                    { suggestion && <h3 className={classes.title}>{ suggestion.title }</h3> }\n                </div>\n                <Divider />\n                <div ref={listRef} className={classes.contentList}>\n                    { buildItems() }\n                </div>\n            </Grid>\n            <Grid container className={classes.footer}>\n                <div className={classes.contentField}>\n                        <div className={classes.contentInputMessage}>\n                            <Input\n                                className={classes.input}\n                                placeholder=\"Responda aqui\"\n                                multiline\n                                maxLength=\"2\"\n                                disableUnderline={true}\n                                onChange={ev => setText(ev.target.value)}\n                                value={text}\n                            />\n                        </div>\n                        <div className={classes.contentButton}>\n                            <Button disabled={!text} onClick={createMessage}>\n                                Enviar\n                                <Send className={classes.icon} />\n                            </Button>\n                        </div>\n                    </div>\n            </Grid>\n        </Grid>\n    )\n}))\n","import React, { useEffect, useState } from 'react'\nimport { requestSuggestions } from '../../redux/suggestion/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    makeStyles,\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n} from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport Talk from './components/talk'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { ROUTES } from '../../utils/constants'\n\nconst createStyle = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    input: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    }\n}))\n\nconst Suggestion = props => {\n\n    const classes = createStyle()\n\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestSuggestions(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.SUGGESTION) {\n            props.requestSuggestions(props.page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestSuggestions(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(suggestion => {\n            return (\n                <TableRow onClick={() => props.history.push('/home/suggestion/' + suggestion._id)} hover key={suggestion._id}>\n                    <TableCell align=\"center\">{suggestion.name}</TableCell>\n                    <TableCell align=\"center\">{suggestion.title}</TableCell>\n                    <TableCell align=\"center\">{new Date(suggestion.createdAt).toLocaleString()}</TableCell>\n                    <TableCell align=\"center\">{suggestion.messages.length}</TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Grid container>\n            <Switch>\n                <Route exact path={ROUTES.SUGGESTION} render={() => {\n                    return (\n                        <Grid className={classes.root}>\n                            <TextField\n                                onChange={ev => subject.next(ev.target.value)}\n                                className={classes.input}\n                                variant=\"outlined\"\n                                label=\"Procurar\"\n                                placeholder=\"Digite aqui para buscar, para data: yyyy-mm-dd\"\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestSuggestions(1, 10, text)}><Search /></IconButton></InputAdornment>\n                                }}\n                            />\n                            <Paper className={classes.tableWrapper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\" component=\"th\" >Usuário</TableCell>\n                                            <TableCell align=\"center\" component=\"th\">Título</TableCell>\n                                            <TableCell align=\"center\" component=\"th\">Criado em</TableCell>\n                                            <TableCell align=\"center\" component=\"th\">Quantidade de mensagens</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        { buildItems() }\n                                    </TableBody>\n                                    <TableFooter>\n                                        <TableRow>\n                                        { renderFooter() }\n                                        </TableRow>\n                                    </TableFooter>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                    )\n                }} />\n                <Route exact path={ROUTES.SUGGESTION.concat('/:id')} render={() => <Talk />} />\n                <Redirect from=\"*\" to={ROUTES.HOME} />\n            </Switch>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.suggestion,\n    isLoading: state.component.loading,\n})\n\nexport default connect(mapStateToProps, { requestSuggestions })(Suggestion)","import { makeStyles, colors } from '@material-ui/core'\n\nexport default makeStyles(theme => ({\n    content: {\n        width: '100%',\n        '& h2': {\n            color: 'rgba(0,0,0,.38)'\n        }\n    },\n    padding: {\n        padding: 16,\n    },\n    margin: {\n        margin: 16,\n    },\n    input: {\n        width: '30%'\n    },\n    colorPositive: {\n        color: `${colors.green.A700} !important`\n    },\n    colorNegative: {\n        color: `${colors.red.A700} !important`\n    },\n    textResult: {\n        marginLeft: 16\n    },\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    inputSearch: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    },\n    fab: {\n        position: 'fixed !important',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        backgroundColor: '#3f51b5 !important',\n        color: '#FFF !important',\n        borderRadius: '50% !important'\n    }\n}))","import React, { useEffect, useState } from 'react'\nimport { requestDevices, removeDevice, updateDevice } from '../../../redux/devices/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Fab\n} from '@material-ui/core'\nimport { Search, Add } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../../../utils/constants'\nimport { compose } from 'recompose'\nimport MaterialTable from 'material-table'\nimport createStyle from './style'\n\nconst Devices = props => {\n\n    const classes = createStyle()\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestDevices(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.DEVICES) {\n            props.requestDevices(props.page, props.limit, text, null, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestDevices(page, props.limit, text, null, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    return (\n        <Grid container>\n            <Grid className={classes.root}>\n                    <TextField\n                        onChange={ev => subject.next(ev.target.value)}\n                        className={classes.inputSearch}\n                        variant=\"outlined\"\n                        label=\"Procurar\"\n                        placeholder=\"Digite aqui para filtrar na tabela\"\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestDevices(1, 10, text)}><Search /></IconButton></InputAdornment>\n                        }}\n                    />\n                    <Paper className={classes.tableWrapper}>\n                        <MaterialTable\n                                options={{\n                                 search: false,\n                                 actionsColumnIndex: -1\n                                }}\n                            localization={{\n                                    header: {\n                                        actions: 'Ações'\n                                    },\n                                    body: {\n                                        emptyDataSourceMessage: 'Nenhum dispositivo para mostrar',\n                                        filterRow: {\n                                            filterTooltip: 'Filtrar'\n                                        },\n                                        editRow: {\n                                            deleteText: 'Deseja remover esse dispositivo?'\n                                        }\n                                    },\n                                    toolbar: {\n                                        searchTooltip: 'Procurar',\n                                        searchPlaceholder: 'Digite aqui para buscar dispositivo'\n                                    }\n                                }}\n                            components={{\n                                Pagination: renderFooter\n                            }}\n                            columns={[\n                                { title: 'Nome', field: 'name' },\n                                { title: 'Identificador', field: 'uuid', editable: 'never' },\n                                { title: 'Linha', field: 'lineNumber', type: 'numeric', min: 0 },\n                                { title: 'Descrição da linha', field: 'lineDescription', editable: 'never' },\n                            ]}\n                            title=\"Dispositivos\"\n                            onRowClick={console.log}\n                            data={props.docs}\n                            editable={{\n                                onRowUpdate: (newData) =>\n                                    new Promise((resolve) => {\n                                        updateDevice(newData, () => {\n                                            props.requestDevices(props.page, props.limit, text, resolve, () => {\n                                                toast.error('Falha na comunicação com o servidor')\n                                            })\n                                            toast.success('Dispositivo editado com sucesso')\n                                        }, ({ response }) => {\n                                            resolve()\n                                            if (response && response.status === 404) {\n                                                toast.error('A linha para associação não foi encontrada')\n                                            } else {\n                                                toast.error('Falha ao editar dispositivo')\n                                            }\n                                        })\n                                    }),\n                                onRowDelete: oldData =>\n                                    new Promise((resolve) => {\n                                        props.removeDevice(oldData._id, () => {\n                                            toast.success('Dispositivo removido com sucesso')\n                                            props.requestDevices(props.page, props.limit, text, resolve, () => {\n                                                toast.error('Falha na comunicação com o servidor')\n                                            })\n                                        }, () => toast.error('Falha ao remover dispositivo'))\n                                    })\n                            }}\n                        />\n                     </Paper>\n                </Grid>\n                <Fab onClick={() => props.history.push(ROUTES.ADD_DEVICES)} className={classes.fab} color=\"primary\">\n                    <Add />\n                </Fab>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.device.data,\n    isLoading: state.component.loading,\n})\n\nexport default compose(\n    connect(mapStateToProps, { requestDevices, removeDevice }),\n    withRouter\n)(Devices)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\n\nexport default function(props) {\n  const {\n      onClose,\n      value: valueProp,\n      open,\n      options,\n      title,\n      textCancel,\n      textConfirm,\n      ...other\n  } = props\n  const [value, setValue] = React.useState(valueProp)\n  const radioGroupRef = React.useRef(null)\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp)\n    }\n  }, [valueProp, open])\n\n  function handleEntering() {\n    if (radioGroupRef.current !== null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  function handleCancel() {\n    onClose()\n  }\n\n  function handleOk() {\n    onClose(value)\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">{title}</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"ringtone\"\n          name=\"ringtone\"\n          value={value || ''}\n          onChange={handleChange}\n        >\n          {options.map((option, index) => (\n            <FormControlLabel value={option._id} key={index.toString()} control={<Radio />} label={`${option.number || ''} - ${option.description}`} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"primary\">\n          { textCancel }\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          { textConfirm }\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useEffect } from 'react'\nimport styles from './style'\nimport { connect } from 'react-redux'\nimport DialogRadio from '../../../components/dialogRadio'\nimport { Grid, TextField, Fab, Button } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { updateName, openDialog, onClose, requestLines, clear, createDevice } from '../../../redux/devices/action'\nimport { toast } from 'react-toastify'\nimport { compose } from 'recompose'\nimport { withRouter } from 'react-router-dom'\n\nconst mapStateToProps = state => ({ ...state.device, loading: state.component.loading })\n\nexport default\ncompose(\n    connect( mapStateToProps, { updateName, openDialog, onClose, requestLines, clear, createDevice } ),\n    withRouter\n)(SecondStep)\n\n\nfunction SecondStep(props) {\n\n    const classes = styles()\n\n    useEffect(() => {\n        props.requestLines(() => toast.error('Falha na comunicação com o servidor'))\n        return props.clear\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    function save() {\n        const body = {\n            uuid: props.device.text,\n            name: props.name,\n            line: props.value,\n            latitude: props.device.latitude,\n            longitude: props.device.longitude\n        }\n        if (!body.uuid) {\n            toast.error('Identificador do dispositivo está vazio')\n            return\n        }\n        if (!body.line) {\n            toast.info('Falta escolher a linha para associação')\n            return\n        }\n        props.createDevice(body, () => {\n            toast.success('Dispositivo cadastrado com sucesso')\n            props.history.goBack()\n        }, ({response}) => {\n            if (response && response.status === 409) {\n                toast.error('Dispositivo já cadastrado')\n            } else {\n                toast.error('Falha ao cadastrar dispositivo')\n            }\n        })\n    }\n\n    function buildResult() {\n        if (props.value) {\n            const line = props.lines.find(li => li._id === props.value)\n            return <>{ line.number } - {line.description}</>\n        }\n    }\n\n    return (\n        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" className={clsx(classes.padding, classes.content)}>\n            <h2>Associar dispositivo com uma linha:</h2>\n            <TextField\n                value={props.name}\n                onChange={ev => props.updateName(ev.target.value)}\n                className={classes.input}\n                variant=\"outlined\"\n                placeholder=\"Informe um nome para o dispositivo\"\n                label=\"Nome\"\n            />\n            <Grid container wrap=\"nowrap\" justify=\"center\">\n                <p>Linha escolhida: </p>\n                <p className={classes.textResult}>{buildResult()}</p>\n            </Grid>\n            <Button\n                variant=\"outlined\"\n                disabled={props.loading}\n                onClick={() => props.lines.length ? props.openDialog(true) : toast.info('Nenhuma linha para associar')}>\n                Abrir opções\n            </Button>\n            <Grid>\n                <Fab disabled={props.loading} className={classes.margin} color=\"primary\" variant=\"extended\" onClick={save}>\n                    Salvar\n                </Fab>\n            </Grid>\n            <DialogRadio\n                open={props.open}\n                options={props.lines}\n                title=\"Atenção\"\n                textCancel=\"Cancelar\"\n                textConfirm=\"Ok\"\n                value={props.value}\n                onClose={props.onClose}\n            />\n        </Grid>\n    )\n\n}","import React, { useState } from 'react'\nimport { Grid, Stepper, Step, StepLabel } from '@material-ui/core'\nimport FirstStep from './firstStep'\nimport SecondStep from './secondStep'\nimport styles from './style'\n\nconst steps = [ 'Conectar no dispositivo', 'Associar com uma linha' ]\n\nexport default function AddDevice() {\n    \n    const [ controller, setController ] = useState({ step: 0, device: null })\n    const classes = styles()\n\n    return (\n        <Grid wrap=\"nowrap\" container>\n            <Grid container direction=\"column\" wrap=\"nowrap\" className={classes.content}>\n                <Stepper activeStep={controller.step}>\n                    {\n                        steps.map(label => {\n                            return (\n                                <Step key={label}>\n                                    <StepLabel>{ label }</StepLabel>\n                                </Step>\n                            )\n                        })\n                    }\n                </Stepper>\n                {\n                    controller.step === 0 && <FirstStep finishProccess={device => setController({ ...controller, step: 1, device })} />\n                }\n                {\n                    controller.step === 1 && <SecondStep device={controller.device} />\n                }\n            </Grid>\n        </Grid>\n    )\n}\n\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { ROUTES } from '../../utils/constants'\nimport DeviceList from './components/deviceList'\nimport AddDevice from './components/addDevice'\n\nexport default function(){\n\n    return (\n        <Switch>\n            <Route path={ROUTES.DEVICES} exact component={DeviceList} />\n            <Route path={ROUTES.ADD_DEVICES} exact component={AddDevice} />\n            <Redirect from=\"*\" to={ROUTES.DEVICES} />\n        </Switch>\n    )\n\n}","import React, { useState, useEffect } from 'react'\nimport {\n    Dialog,\n    IconButton,\n    Grid,\n    Paper,\n    Tabs,\n    Tab,\n    makeStyles,\n    Typography,\n    Slide,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableFooter,\n    TablePagination\n} from '@material-ui/core'\nimport { Close, StarRate } from '@material-ui/icons'\nimport network, { CancelToken } from '../../../services/network'\nimport { updateLoading } from '../../../redux/components/action'\nimport { useDispatch } from 'react-redux'\nimport { toast } from 'react-toastify'\n\nconst createStyle = makeStyles({\n    root: {\n        flexGrow: 1\n    },\n    icon: {\n        position: 'absolute',\n        left: 16,\n    },\n    contentTitle: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: 16\n    }\n})\n\nlet cancel\n\nconst TransitionSlide = React.forwardRef(function(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst Comments = props => {\n\n    const dispatch = useDispatch()\n    const classes = createStyle()\n    const [tab, setTab] = useState(4)\n    const [ comment, setComment ] = useState({ docs: [], page: 1, pages: 1, limit: 10, total: 0 })\n\n    useEffect(() => {\n        if (props.idLine) {\n            requestServer(comment.page, tab)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.idLine ])\n\n    function requestServer(page = comment.page, star = tab, error) {\n        dispatch(updateLoading(true))\n        if (cancel) {\n            cancel('cancelled')\n        }\n        network.get(`line/score/${props.idLine}?page=${page}&limit=${comment.limit}&star=${star + 1}`, {\n            cancelToken: new CancelToken(c => cancel = c)\n        })\n        .then(response => {\n            dispatch(updateLoading(false))\n            setComment({ ...comment, ...response.data })\n        })\n        .catch(e => {\n            if (e && e.message === 'cancelled') {\n                return\n            }\n            if (error) {\n                error()\n            }\n            dispatch(updateLoading(false))\n            toast.error('Falha de comunicação com o servidor')\n        })\n    }\n    function buildItems() {\n        return comment.docs.map((sc, index) => {\n            return (\n                <TableRow key={index.toString()}>\n                    <TableCell>{sc.user.name}</TableCell>\n                    <TableCell>{sc.description}</TableCell>\n                    <TableCell>{sc.line.number} - {sc.line.description}</TableCell>\n                    <TableCell><Grid container wrap=\"nowrap\">{buildStar(sc.star)}</Grid></TableCell>\n                    <TableCell>{new Date(sc.createdAt).toLocaleString()}</TableCell>\n                </TableRow>\n            )\n        })\n    }\n\n    function buildStar(star) {\n        const stars = []\n        for (let i = 0; i < star; i ++) {\n            stars[i] = <StarRate key={i.toString()} />\n        }\n        return stars\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={comment.total}\n                page={comment.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n    \n    return(\n        <Dialog open={props.open} fullScreen TransitionComponent={TransitionSlide} style={{backgroundColor: 'transparent'}}>\n            <div className={classes.contentTitle}>\n                <IconButton className={classes.icon} onClick={props.onClose}>\n                    <Close />\n                </IconButton>\n                <Typography variant=\"h4\">Comentários</Typography>\n            </div>\n            <Grid container direction=\"column\" wrap=\"nowrap\">\n                <Paper className={classes.root}>\n                    <Tabs indicatorColor=\"primary\" textColor=\"primary\" centered value={tab} onChange={(ev, value) => {\n                        const oldTab = tab\n                        setTab(value)\n                        requestServer(1, value, () => setTab(oldTab))\n                    }} aria-label=\"simple tabs example\">\n                    <Tab label=\"1 estrela\" />\n                    <Tab label=\"2 estrelas\"/>\n                    <Tab label=\"3 estrelas\" />\n                    <Tab label=\"4 estrelas\" />\n                    <Tab label=\"5 estrelas\" />\n                    </Tabs>\n                </Paper>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell component=\"th\" >Usuário</TableCell>\n                            <TableCell component=\"th\">Mensagem</TableCell>\n                            <TableCell component=\"th\">Linha</TableCell>\n                            <TableCell component=\"th\">Estrelas</TableCell>\n                            <TableCell component=\"th\">Criado em</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { buildItems() }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow>\n                        { renderFooter() }\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Grid>\n        </Dialog>\n    )\n}\n\nexport default Comments","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(theme => ({\n    input: {\n        minWidth: '30vw',\n        marginLeft: 16\n    },\n    inputLine: {\n        marginLeft: 16\n    },\n    contentBlockMap: {\n        maxHeight: '80vh',\n        padding: '16px 0px'\n    },\n    contentFields: {\n        flex: .5,\n        display: 'block',\n        padding: 8,\n        overflowY: 'auto'\n    },\n    contentMap: {\n        flex: 1\n    },\n    addIconField: {\n        padding: '12px 0px'\n    },\n    iconRemove: {\n        '&:hover $iconHiddenRemove': {\n            visibility: 'visible !important'\n        }\n    },\n    iconHiddenRemove: {\n        visibility: 'hidden'\n    },\n    contentContainerMap: {\n        height: 'calc(80vh - 16px)'\n    },\n    buttonSave: {\n        marginLeft: 16,\n        '& svg': {\n            marginRight: 10\n        }\n    },\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    inputSearch: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 1\n    }\n}))","import React, { useEffect, useState } from 'react'\nimport { requestLines, removeLine } from '../../../redux/lines/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Button,\n    Fab\n} from '@material-ui/core'\nimport { Search, Delete, Add } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../../../utils/constants'\nimport { compose } from 'recompose'\nimport createStyle from '../styles'\n\nconst Lines = props => {\n\n    const classes = createStyle()\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestLines(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.LINES) {\n            props.requestLines(props.page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestLines(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(line => {\n            return (\n                <TableRow onClick={() => props.history.push(ROUTES.ADD_LINES.concat(`/${line._id}`))} hover key={line._id}>\n                    <TableCell align=\"center\">{line.number}</TableCell>\n                    <TableCell align=\"center\">{line.description}</TableCell>\n                    <TableCell align=\"center\">\n                        <Button onClick={ev => {\n                            ev.stopPropagation()\n                            props.removeLine(line._id, () => {\n                                toast.success('Linha removida com sucesso')\n                                requestServer()\n                            }, () => toast.error('Falha ao remover linha'))\n                        }} color=\"secondary\">\n                            <Delete className={classes.rightIcon} />\n                            <span>Remover</span>\n                        </Button>\n                    </TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Grid container>\n            <Grid className={classes.root}>\n                    <TextField\n                        onChange={ev => subject.next(ev.target.value)}\n                        className={classes.inputSearch}\n                        variant=\"outlined\"\n                        label=\"Procurar\"\n                        placeholder=\"Digite aqui para buscar por número ou descrição\"\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestLines(1, 10, text)}><Search /></IconButton></InputAdornment>\n                        }}\n                    />\n                    <Paper className={classes.tableWrapper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\" component=\"th\" >Número</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Descrição</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Ação</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                { buildItems() }\n                            </TableBody>\n                            <TableFooter>\n                                <TableRow>\n                                { renderFooter() }\n                                </TableRow>\n                            </TableFooter>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <Fab onClick={() => props.history.push(ROUTES.ADD_LINES)} className={classes.fab} color=\"primary\">\n                    <Add />\n                </Fab>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.line.data,\n    isLoading: state.component.loading,\n})\n\nexport default compose(\n    connect(mapStateToProps, { requestLines, removeLine }),\n    withRouter\n)(Lines)\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function(props) {\n  return (\n    <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">{ props.title }</DialogTitle>\n    <DialogContent>\n        <DialogContentText>\n        { props.message }\n        </DialogContentText>\n        <TextField\n          autoFocus\n          onChange={ props.onChange }\n          margin=\"dense\"\n          label={ props.label }\n          fullWidth\n          value={props.text}\n        />\n    </DialogContent>\n    <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n            { props.textCancel }\n        </Button>\n        <Button onClick={props.onConfirm} color=\"primary\">\n            { props.textButton }\n        </Button>\n    </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Tab, Tabs, Chip, makeStyles } from '@material-ui/core'\nimport { KeyboardTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport { toast } from 'react-toastify'\nimport DateFnsUtils from \"@date-io/date-fns\"\n\nconst createStyles = makeStyles(theme => ({\n  chip: {\n    margin: theme.spacing(1)\n  }\n}))\n\nexport default function(props) {\n\n    const classes = createStyles()\n    const [ tab, setTab ] = useState(0)\n    const [ date, setDate ] = useState(new Date())\n    const [ horary, setHorary ] = useState({ mondayToSaturday: [], sundayAndHoliday: [] })\n\n    useEffect(() => {\n      setHorary(old => {\n        const newValue = {...old}\n        for (const index in props.horary) {\n          if (newValue[index]) {\n            newValue[index] = [...props.horary[index]]\n          }\n        }\n        return newValue\n      })\n      return () => setHorary({ mondayToSaturday: [], sundayAndHoliday: [] })\n    }, [ props.horary, props.open ])\n\n    function buildChips(filter) {\n      return sortHorary(horary[filter]).map((time, index) => {\n        return <Chip\n          className={classes.chip}\n          key={index.toString()}\n          label={ time }\n          onDelete={() => onDelete(tab === 0 ? 'mondayToSaturday' : 'sundayAndHoliday', index)}\n          color=\"primary\"\n        />\n      })\n    }\n\n    function onDelete(filter, index) {\n      setHorary(old => {\n        const newHorary = {...old}\n        newHorary[filter].splice(index, 1)\n        return newHorary\n      })\n    }\n\n    function sortHorary(values) {\n      return values.sort((a, b) => Number(a.split(':').join('')) - Number(b.split(':').join('')))\n    }\n\n    return (\n      <Dialog onClose={() => props.onOpen(false, horary)} fullWidth={true} maxWidth=\"sm\" open={props.open} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Definir Horários</DialogTitle>\n      <DialogContent>\n        <Tabs\n          value={tab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={(_, newValue) => setTab(newValue)}\n          centered\n        >\n          <Tab label=\"Segunda - Sábado\" />\n          <Tab label=\"Domingo e feriados\" />\n        </Tabs>\n        <div>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardTimePicker\n                okLabel=\"Ok\"\n                cancelLabel=\"Cancelar\"\n                margin=\"normal\"\n                label=\"Horário de saída\"\n                onChange={(date, time) => {\n                  const hour = date.getHours()\n                  const minutes = date.getMinutes()\n                  const filterDate = tab === 0 ? 'mondayToSaturday' : 'sundayAndHoliday'\n                  const timeString = `${hour.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`\n                  if (horary[filterDate].some(time => time === timeString)) {\n                    toast.info('Horário já incluso.', { autoClose: 2000 })\n                  } else {\n                    setDate(date)\n                    setHorary({ ...horary, [filterDate]: sortHorary([...horary[filterDate], timeString]) })\n                  }\n                }}\n                value={date}\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n        { buildChips(tab === 0 ? 'mondayToSaturday' : 'sundayAndHoliday') }\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={() => props.onOpen(false)} color=\"primary\">\n              Cancelar\n          </Button>\n          <Button onClick={() => props.onOpen(false, horary)} color=\"primary\">\n              Salvar\n          </Button>\n      </DialogActions>\n      </Dialog>\n    )\n}","import React, { useState, useRef, useEffect } from 'react'\nimport { Grid, TextField, IconButton, InputAdornment, Paper, Button, Fab } from '@material-ui/core'\nimport globalStyle from '../../../style/global'\nimport { Clear, AddCircle, Search, Save } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport Maps from '../../../components/Map'\nimport { DirectionsRenderer, Marker, OverlayView } from 'react-google-maps'\nimport { toast } from 'react-toastify'\nimport localStyles from '../styles'\nimport DialogInput from '../../../components/dialogInput'\nimport { connect } from 'react-redux'\nimport { createLine, getLineById, editLine } from '../../../redux/lines/action'\nimport DialogHorary from './horary'\n\nconst AddLine = props => {\n\n    const classes = globalStyle()\n    const styles = localStyles()\n    const refDirections = useRef(null)\n    const { id } = props.match.params\n    const [ directions, setDirections ] = useState()\n    const [ horary, setHorary ] = useState({ mondayToSaturday: [], sundayAndHoliday: [] })\n    const [ information, setInformation ] = useState({ line: '', description: '', errorLine: '', errorDescription: '' })\n    const [ routes, setRoutes ] = useState([ { route: '' }, { route: '' } ])\n    const [ markers, setMarkers ] = useState([])\n    const [ dialog, setDialog ] = useState({ index: null, text: '', open: false })\n    const [ load, setLoad ] = useState(false)\n    const [ openDialogHorary, setOpenDialogHorary ] = useState(false)\n    \n    useEffect(() => {\n        window.initMap = () => setLoad(true)\n        if (id) {\n            props.getLineById(id, () => {\n                toast.error('Falha ao buscar dados da linha, tente novamente')\n                props.history.goBack()\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ ])\n\n    useEffect(() => {\n        if (props.line && Object.keys(props.line).length && window.google) {\n            setRoutes([ ...props.line.routes ])\n            setMarkers([ ...props.line.points ])\n            if (props.line.horary) {\n                setHorary({...props.line.horary})\n            }\n            const { google } = window\n            const DirectionService = new google.maps.DirectionsService()\n            const routes = []\n            routes.push(props.line.directions.request.origin)\n            routes.push(...props.line.directions.request.waypoints)\n            routes.push(props.line.directions.request.destination)\n            const origin = routes[0]\n            const destination = routes[routes.length - 1]\n            const options = {\n                origin: filterRoute(origin),\n                destination: filterRoute(destination),\n                waypoints: routes.filter((_, index) => index !== 0 && index !== routes.length - 1)\n                .map(filterRoute),\n                optimizeWaypoints: true,\n                travelMode: google.maps.TravelMode.DRIVING,\n                avoidTolls: true\n            }\n            DirectionService.route(options, (result, status) => {\n                if (status === google.maps.DirectionsStatus.OK) {\n                    setDirections({ ...directions, ...result })\n                } else if (status === google.maps.DirectionsStatus.NOT_FOUND) {\n                    toast.error('Rota não encontrada, verifique os caminhos inseridos')\n                } else {\n                    toast.error('Falha ao requisitar rota')\n                }\n            })\n            setInformation({ line: props.line.number, description: props.line.description })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.line, load ])\n\n    function filterRoute(route) {\n        const { google } = window\n        if ('location' in route) {\n            return route\n        } else if ('query' in route) {\n            return route.query\n        }\n        return new google.maps.LatLng(route.lat, route.lng)\n    }\n\n    function buildInputRoutes() {\n        return routes.map((content, index) => {\n            return (\n                <Grid alignItems=\"center\" className={clsx(styles.addIconField, { [styles.iconRemove]: routes.length > 2 })} container key={index.toString()} wrap=\"nowrap\">\n                    <TextField\n                        className={classes.maxWidth}\n                        value={content.route}\n                        onChange={ev => {\n                            const value = ev.target.value\n                            setRoutes(old => {\n                                const newRoutes = [...old]\n                                newRoutes[index].route = value\n                                return newRoutes\n                            })\n                        }}\n                        placeholder={index === 0 ? 'Informe início da rota' : index === routes.length - 1 ? \"Informe destino final\" : 'Informe caminho'}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton onClick={buildRoutes} edge=\"end\">\n                                        <Search />\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <IconButton onClick={() => {\n                        setRoutes([...routes.filter((_, i) => index !== i)])\n                    }} className={styles.iconHiddenRemove}><Clear /></IconButton>\n                </Grid>\n            )\n        })\n    }\n\n    function buildRoutes() {\n        if (!routes.every(content => !!content.route)) {\n            toast.error('Existe campo de rota sem preenchimento')\n        } else {\n            const { google } = window\n            const DirectionService = new google.maps.DirectionsService()\n            const options = {\n                origin: routes[0].route,\n                destination: routes[routes.length - 1].route,\n                waypoints: routes.filter((_, index) => index !== 0 && index !== routes.length - 1).map(content => ({location: content.route, stopover: true})),\n                optimizeWaypoints: true,\n                travelMode: google.maps.TravelMode.DRIVING,\n                avoidTolls: true\n            }\n            DirectionService.route(options, (result, status) => {\n                if (status === google.maps.DirectionsStatus.OK) {\n                    setDirections({ ...directions, ...result })\n                } else if (status === google.maps.DirectionsStatus.NOT_FOUND) {\n                    toast.error('Rota não encontrada, verifique os caminhos inseridos')\n                } else {\n                    toast.error('Falha ao requisitar rota')\n                }\n            })\n        }\n    }\n\n    function validateForms() {\n        let formOk = true\n        const info = { ...information }\n        if (!props.loading) {\n            if (!info.line) {\n                info.errorLine = 'Campo vazio'\n                formOk = false\n            }\n            if (!info.description) {\n                info.errorDescription = 'Campo vazio'\n                formOk = false\n            }\n            if (!formOk) {\n                setInformation(info)\n                return\n            } else {\n                saveLine()\n            }\n        }\n    }\n\n    function saveLine() {\n        if (refDirections.current) {\n            const directions = refDirections.current.getDirections()\n            const body = {\n                number: information.line,\n                description: information.description,\n                routes,\n                directions: {\n                    request: directions.request,\n                    routes: directions.routes[0].overview_path\n                },\n                points: markers,\n                horary\n            }\n            const callbackError = message => ({ response }) => {\n                if (response && response.status === 409) {\n                    toast.error('Já existe uma linha cadastrada com esse número')\n                } else {\n                    toast.error(message)\n                }\n            }\n            if (id) {\n                body._id = props.line._id\n                props.editLine(body, () => {\n                    toast.success('Linha editada com sucesso')\n                    props.history.goBack()\n                }, callbackError('Falha ao editar linha'))\n            } else {\n                props.createLine(body, () => {\n                    toast.success('Linha cadastrada com sucesso')\n                    props.history.goBack()\n                }, callbackError('Falha ao criar linha'))\n            }\n        } else {\n            toast.info('Busque pela rota adicionada para renderizar no mapa')\n        }\n    }\n\n    function onConfirm() {\n        if (!dialog.text) {\n            toast.info('Informe o nome do marcador')\n        } else {\n            if (dialog.index !== null) {\n                setMarkers(old => {\n                    const newMarkers = [...old]\n                    newMarkers[dialog.index].name = dialog.text\n                    return newMarkers\n                })\n            }\n            setDialog({ ...dialog, text: '', open: false, index: null })\n        }\n    }\n\n    function buildMarkers() {\n        const callbackCloseOverlay = index => _ => {\n            setMarkers(old => {\n                const newMarkers = [...old]\n                newMarkers[index].showOverlayView = !newMarkers[index].showOverlayView\n                return newMarkers\n            })\n         }\n        return markers.map((marker, index) => {\n            return (\n                <React.Fragment key={index.toString()}>\n                    <Marker onClick={callbackCloseOverlay(index)} title={marker.name} clickable={true} draggable={true} position={{ lat: marker.lat, lng: marker.lng }} />\n                    {\n                        marker.showOverlayView &&\n                        <OverlayView mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}  position={{ lat: marker.lat, lng: marker.lng }}>\n                            <Paper className={classes.container}>\n                                <Grid container direction=\"column\">\n                                    <h4>Nome do ponto: {marker.name}</h4>\n                                    <Button onClick={callbackCloseOverlay(index)}>Fechar</Button>\n                                    <Button onClick={() => {\n                                        setDialog({ ...dialog, index, text: marker.name, open: true })\n                                        callbackCloseOverlay(index)()\n                                    }}>Editar</Button>\n                                    <Button onClick={() => setMarkers([ ...markers.filter((_, i) => index !== i) ])}>Remover</Button>\n                                </Grid>\n                            </Paper>\n                        </OverlayView>\n\n                    }\n                </React.Fragment>\n            )\n        })\n    }\n    return (\n        <Grid container className={classes.container} wrap=\"nowrap\" direction=\"column\">\n            <Grid alignItems=\"center\" container>\n                <h2>Informação: </h2>\n                <TextField\n                    className={styles.inputLine}\n                    value={information.line}\n                    onChange={ev => setInformation({ ...information, line: ev.target.value, errorLine: '' })}\n                    variant=\"outlined\"\n                    type=\"number\"\n                    label=\"Linha\"\n                    InputProps={{inputProps:{min: 0}}}\n                    placeholder=\"Número da linha\"\n                    error={!!information.errorLine}\n                    helperText={information.errorLine}\n                />\n                <TextField\n                    value={information.description}\n                    onChange={ev => setInformation({ ...information, description: ev.target.value, errorDescription: '' })}\n                    className={styles.input}\n                    variant=\"outlined\"\n                    label=\"Descrição\"\n                    placeholder=\"Informe a descrição\"\n                    error={!!information.errorDescription}\n                    helperText={information.errorDescription}\n                />\n                <Button variant=\"contained\" onClick={() => setOpenDialogHorary(true)} className={styles.buttonSave} color=\"primary\">\n                    <span>Horários</span>\n                </Button>\n            </Grid>\n            <Grid className={styles.contentBlockMap} container>\n                <Paper className={classes.maxWidth}>\n                    <Grid container wrap=\"nowrap\" className={styles.contentContainerMap}>\n                        <Grid className={styles.contentFields} container>\n                            { buildInputRoutes() }\n                            <IconButton className={styles.addIconField} onClick={() => setRoutes([...routes, { route: '' }])}>\n                                <AddCircle />\n                            </IconButton>\n                        </Grid>\n                        <Grid className={styles.contentMap} container>\n                            <Maps onClick={({latLng}) => {\n                                if (!markers.some(marker => marker.showOverlayView)) {\n                                    setMarkers([ ...markers, { lat: latLng.lat(), lng: latLng.lng(), showOverlayView: false, name: '' } ])\n                                    setDialog({ ...dialog, index: markers.length, open: true })\n                                }\n                            }}>\n                                { directions && <DirectionsRenderer ref={refDirections} options={{draggable: true}} directions={directions} /> }\n                                { buildMarkers() }\n                            </Maps>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n            <DialogInput\n                open={dialog.open}\n                title=\"Atenção\"\n                message=\"Informe o nome do marcador\"\n                label=\"Nome\"\n                onChange={ev => setDialog({ ...dialog, text: ev.target.value })}\n                onConfirm={onConfirm}\n                textButton=\"Salvar\"\n                text={dialog.text}\n                textCancel=\"Cancelar\"\n                onCancel={() => setDialog({ ...dialog, text: '', index: null, open: false })}\n            />\n            <Fab variant=\"extended\" onClick={validateForms} className={clsx(styles.buttonSave, styles.fab)} color=\"primary\">\n                <Save />\n                <span>SALVAR</span>\n            </Fab>\n            <DialogHorary onOpen={(value, newHorary) => {\n                setOpenDialogHorary(value)\n                if (newHorary) {\n                    setHorary({...newHorary})\n                }\n            }} open={openDialogHorary} horary={horary} />\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({ loading: state.component.loading, line: state.line.lineEdited })\n\nexport default connect(mapStateToProps, { createLine, getLineById, editLine })(AddLine)","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport List from './components/list'\nimport Add from './components/add'\nimport { ROUTES } from '../../utils/constants'\n\nexport default () => {\n    return (\n        <Switch>\n            <Route path={ROUTES.LINES} exact component={List} />\n            <Route path={ROUTES.ADD_LINES} exact component={Add} />\n            <Route path={ROUTES.ADD_LINES.concat('/:id')} exact component={Add} />\n            <Redirect from=\"*\" to={ROUTES.LINES} />\n        </Switch>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(theme => ({\n    input: {\n        minWidth: '30vw',\n        marginLeft: 16\n    },\n    inputLine: {\n        marginLeft: 16\n    },\n    contentBlockMap: {\n        maxHeight: '80vh',\n        padding: '16px 0px'\n    },\n    contentFields: {\n        flex: .5,\n        display: 'block',\n        padding: 8,\n        overflowY: 'auto'\n    },\n    contentMap: {\n        flex: 1\n    },\n    addIconField: {\n        padding: '12px 0px'\n    },\n    iconRemove: {\n        '&:hover $iconHiddenRemove': {\n            visibility: 'visible !important'\n        }\n    },\n    iconHiddenRemove: {\n        visibility: 'hidden'\n    },\n    contentContainerMap: {\n        height: 'calc(80vh - 16px)'\n    },\n    buttonSave: {\n        marginLeft: 16,\n        '& svg': {\n            marginRight: 10\n        }\n    },\n    inputRegisterNews: {\n        width: '50vw',\n        marginTop: 16\n    },\n    textMessage: {\n        margin: '16px 0px'\n    },\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    inputSearch: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n    }\n}))","import React, { useEffect, useState } from 'react'\nimport { requestNews, removeNews } from '../../../redux/news/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Button,\n    Fab\n} from '@material-ui/core'\nimport { Search, Delete, Add } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../../../utils/constants'\nimport { compose } from 'recompose'\nimport createStyle from '../styles'\nimport parser from 'html-react-parser'\n\nconst News = props => {\n\n    const classes = createStyle()\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestNews(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.NEWS) {\n            props.requestNews(props.page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestNews(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(news => {\n            return (\n                <TableRow onClick={() => props.history.push(ROUTES.ADD_NEWS.concat(`/${news._id}`))} hover key={news._id}>\n                    <TableCell>{news.author ? news.author.name : ''}</TableCell>\n                    <TableCell>{news.title}</TableCell>\n                    <TableCell>{parser(news.message)}</TableCell>\n                    <TableCell>{new Date(news.createdAt).toLocaleString()}</TableCell>\n                    <TableCell>\n                        <Button onClick={ev => {\n                            ev.stopPropagation()\n                            props.removeNews(news._id, () => {\n                                toast.success('Notícia removida com sucesso')\n                                requestServer()\n                            }, () => toast.error('Falha ao remover notícia'))\n                        }} color=\"secondary\">\n                            <Delete className={classes.rightIcon} />\n                            <span>Remover</span>\n                        </Button>\n                    </TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Grid container>\n            <Grid className={classes.root}>\n                    <TextField\n                        onChange={ev => subject.next(ev.target.value)}\n                        className={classes.inputSearch}\n                        variant=\"outlined\"\n                        label=\"Procurar\"\n                        placeholder=\"Digite aqui para filtrar\"\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestNews(1, 10, text)}><Search /></IconButton></InputAdornment>\n                        }}\n                    />\n                    <Paper className={classes.tableWrapper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\" component=\"th\" >Autor</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Título</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Mensagem</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Criado em</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Ação</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                { buildItems() }\n                            </TableBody>\n                            <TableFooter>\n                                <TableRow>\n                                { renderFooter() }\n                                </TableRow>\n                            </TableFooter>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <Fab onClick={() => props.history.push(ROUTES.ADD_NEWS)} className={classes.fab} color=\"primary\">\n                    <Add />\n                </Fab>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.news.data,\n    isLoading: state.component.loading,\n})\n\nexport default compose(\n    connect(mapStateToProps, { requestNews, removeNews }),\n    withRouter\n)(News)\n","import React, { useState, useEffect } from 'react'\nimport { Grid, TextField, Typography, Fab } from '@material-ui/core'\nimport createStyle from '../../../style/global'\nimport createLocalStyle from '../styles'\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html'\nimport htmlToDraft from 'html-to-draftjs'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { createNews, editNews, getNewsById, clearNewsEdit } from '../../../redux/news/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\n\nconst AddNews = props => {\n\n    const classes = createStyle()\n    const localClasses = createLocalStyle()\n    const [ editorState, setEditorState ] = useState(EditorState.createEmpty())\n    const [ title, setTitle ] = useState('')\n    const { id } = props.match.params\n\n    useEffect(() => {\n        if (id) {\n            props.getNewsById(id, () => toast.error('Falha na comunicação com o servidor, tente novamente'))\n        }\n        return () => props.clearNewsEdit()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    useEffect(() => {\n        if (props.newsEdit) {\n            const { message, title } = props.newsEdit\n            setTitle(title)\n            const blocksFromHtml = htmlToDraft(message)\n            const { contentBlocks, entityMap } = blocksFromHtml\n            const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap)\n            setEditorState(EditorState.createWithContent(contentState))\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.newsEdit ])\n\n    function saveNews() {\n        const message = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        if (title && message) {\n            const body = {\n                title,\n                message, \n                author: props.user._id,\n            }\n            const callbackSuccess = message => () => {\n                toast.success(message)\n                props.history.goBack()\n            }\n            const callbackError = message => () => toast.error(message)\n            if (id) {\n                body._id = id\n                props.editNews(body, callbackSuccess('Notícia editada com sucesso'), callbackError('Falha ao editar notícia'))\n            } else {\n                props.createNews(body, callbackSuccess('Notícia registrada com sucesso'), callbackError('Falha ao registrar notícia'))\n            }\n        } else\n            toast.info('Verifique os campos')\n    }\n\n    return(\n        <Grid className={classes.container} container direction=\"column\" wrap=\"nowrap\">\n            <Typography variant=\"h4\">Notícia:</Typography>\n            <TextField\n                value={title}\n                onChange={ev => setTitle(ev.target.value)}\n                className={localClasses.inputRegisterNews}\n                placeholder=\"Informe título\"\n                label=\"Título\"\n                inputProps={{\n                    maxLength: 100\n                }}\n            />\n            <Typography className={localClasses.textMessage} variant=\"h5\">Mensagem:</Typography>\n            <Grid style={{backgroundColor: '#FFF', minHeight: 400}}>\n                <Editor editorClassName=\"editor\" editorState={editorState} onEditorStateChange={state => setEditorState(state)} />\n            </Grid>\n            <Fab onClick={saveNews} variant=\"extended\" color=\"primary\" className={localClasses.fab}>\n                <span>Salvar</span>\n            </Fab>\n        </Grid>\n    )\n\n}\n\nconst mapStateToProps = state => ({ newsEdit: state.news.newsEdit, user: state.home.user })\n\nexport default connect(mapStateToProps, { createNews, editNews, getNewsById, clearNewsEdit })(AddNews)","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport List from './components/list'\nimport Add from './components/add'\nimport { ROUTES } from '../../utils/constants'\n\nexport default () => {\n    return (\n        <Switch>\n            <Route path={ROUTES.NEWS} exact component={List} />\n            <Route path={ROUTES.ADD_NEWS} exact component={Add} />\n            <Route path={ROUTES.ADD_NEWS.concat('/:id')} exact component={Add} />\n            <Redirect from=\"*\" to={ROUTES.NEWS} />\n        </Switch>\n    )\n}\n","import React from 'react'\nimport { LinearProgress } from '@material-ui/core'\nimport createStyle from '../style/global'\nimport { useSelector } from 'react-redux'\n\nexport default function(){\n    \n    const classes = createStyle()\n    const loading = useSelector(state => state.component.loading)\n    if (!loading) {\n        return <div></div>\n    }\n    return (\n        <LinearProgress color=\"primary\" className={classes.linearProgress} />\n    )\n}\n","import React from 'react'\nimport createStyleLocal from '../style' \nimport { Paper, Typography, Icon, Grid, IconButton } from '@material-ui/core'\nimport Skeleton from 'react-loading-skeleton'\nimport { Replay } from '@material-ui/icons'\n\nconst Card = props => {\n\n    const { title, content, icon, isLoading, error, buttonError, styleIcon, textColors, styleCard } = props\n    const classesLocal = createStyleLocal()\n    const checkLoading = () => {\n        if (isLoading) {\n            return <Skeleton circle={true} height={50} width={50} />\n        } else if (error) {\n            return (\n                <div>\n                    <IconButton onClick={buttonError} >\n                        <Replay style={textColors && {color: textColors}} />\n                    </IconButton>\n                </div>\n            )\n        }\n        return <Typography style={textColors && {color: textColors}} className={classesLocal.result} variant=\"h4\">{content}</Typography>\n    }\n\n    return (\n        <Grid className={classesLocal.card} item xs={12} sm={4} md={4} lg={3} xl={3}>\n            <Paper style={styleCard} className={classesLocal.paper}>\n                <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\n                    <Grid className={classesLocal.contentInformation} item container direction=\"column\">\n                        <p style={textColors && {color: textColors}}>{title}</p>\n                        { checkLoading() }\n                    </Grid>\n                    <Grid className={classesLocal.contentIcon} container>\n                        <Icon className={classesLocal.icon} style={styleIcon}>{icon}</Icon>\n                    </Grid>\n                </Grid>                      \n            </Paper>\n        </Grid>\n    )\n\n}\n\nexport default Card","import React, { useEffect, useState } from 'react'\nimport { Grid, Paper, Divider, Typography, Button, IconButton } from '@material-ui/core'\nimport { Replay } from '@material-ui/icons'\nimport createStyle from '../../../style/global'\nimport { Doughnut } from 'react-chartjs-2'\nimport DialogRadio from '../../../components/dialogRadio'\nimport { connect } from 'react-redux'\nimport { requestScore } from '../../../redux/home/actions'\nimport { requestLines } from '../../../redux/devices/action'\nimport { toast } from 'react-toastify'\nimport Skeleton from 'react-loading-skeleton'\nimport Comments from './Comments'\n\nfunction InformationLine(props) {\n\n    const DEFAULT_VALUE = { _id: 'all', description: 'Todas as linhas', number: null }\n    const classes = createStyle()\n    const [ open, setOpenDialog ] = useState(false)\n    const [ comments, setComments ] = useState({ open: false, id: '' })\n    const [ value, setValueFilter ] = useState(DEFAULT_VALUE)\n\n    useEffect(() => {\n      props.requestLines()\n      props.requestScore()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    function onClose(id) {\n      setOpenDialog(false)\n      if (id) {\n        getScore(id)\n      }\n    }\n\n    function getScore(id) {\n      props.requestScore(\n        id || DEFAULT_VALUE._id,\n        setValueFilter({ ...value, ...(props.lines.find(line => line._id === id) || DEFAULT_VALUE) }),\n        () => toast.error('Falha ao fazer filtragem'))\n    }\n\n    function loadChart() {\n      if (props.errorToLoadScore) {\n        return (\n          <IconButton onClick={() => getScore()}>\n              <Replay />\n          </IconButton>\n        )\n      } else if (props.isLoadingScore) {\n        return <Skeleton height={200} width={400} />\n      } else if (props.score.every(value => !value)) {\n        return <Typography variant=\"h5\">Sem registro de score</Typography>\n      } else {\n        return (\n          <Grid container item sm={5}>\n              <Doughnut\n                data={{\n                datasets: [{\n                    data: props.score,\n                    backgroundColor: [\n                    '#FF6384',\n                    '#36A2EB',\n                    '#FFCE56',\n                    '#56ff5e',\n                    '#6756ff'\n                    ]\n                }],\n                labels: [ '1 estrela', '2 estrelas', '3 estrelas', '4 estrelas', '5 estrelas' ]\n             }}\n            />\n          </Grid>\n        )\n      }\n    }\n    const lines = [ DEFAULT_VALUE, ...props.lines ]\n    return (\n      <Grid item className={classes.container}>\n        <Paper>\n          <Grid\n            justify=\"space-between\"\n            alignItems=\"center\"\n            container\n            wrap=\"nowrap\"\n            className={classes.container}\n          >\n            <Typography variant=\"h5\">Pontuação das linhas</Typography>\n            <Grid>\n              { (value._id !== 'all' && props.score.some(value => value)) &&\n              <Button color=\"primary\" variant=\"outlined\" onClick={() => setComments({ open: true, id: value._id })}>Ver comentários</Button>}\n              <Button onClick={() => setOpenDialog(true)}>Filtro: {value.number} - {value.description}</Button>\n              <IconButton onClick={() => getScore()}>\n                <Replay />\n              </IconButton>\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid container justify=\"center\" alignItems=\"center\" style={{minHeight: 200}}>\n            { loadChart() }\n          </Grid>\n        </Paper>\n        <DialogRadio\n            open={open}\n            options={lines}\n            title=\"Filtrar\"\n            textCancel=\"Cancelar\"\n            textConfirm=\"Ok\"\n            value={value._id}\n            onClose={onClose}\n        />\n        <Comments\n          idLine={comments.id}\n          open={comments.open}\n          onClose={() => setComments({ open: false, id: '' })}\n        />\n      </Grid>\n    );\n}\n\nconst mapStateToProps = state => ({\n  lines: state.device.lines,\n  errorToLoadLines: state.device.errorToLoadLines,\n  score: state.home.score,\n  isLoadingScore: state.home.isLoadingScore,\n  errorToLoadScore: state.home.errorToLoadScore\n})\n\nexport default connect(mapStateToProps, { requestLines, requestScore })(InformationLine)\n","import React, { useEffect } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport createStyle from \"../style\"\nimport createGlobalStyle from '../../../style/global'\nimport Card from \"./Card\"\nimport { connect } from \"react-redux\"\nimport {\n  requestTotalUsers,\n  requestTotalDevices,\n  requestTotalLines,\n} from \"../../../redux/home/actions\"\nimport InformationLine from './InformationLine'\nimport Auth from '../../auth/auth'\n\nfunction Dashboard(props) {\n  const classes = createStyle()\n  const globalClasses = createGlobalStyle()\n\n  useEffect(() => {\n    props.requestTotalUsers()\n    props.requestTotalDevices()\n    props.requestTotalLines()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Auth>\n      <Grid className={globalClasses.maxWidth}>\n        <Grid className={classes.contentCard} justify=\"space-between\" container>\n            <Card\n                buttonError={() => props.requestTotalDevices()}\n                error={props.errorLoadTotalDevices}\n                isLoading={props.isLoadingTotalDevices}\n                icon=\"location_on\"\n                title=\"Total de dispositivos\"\n                content={props.totalDevices}\n            />\n            <Card\n                buttonError={() => props.requestTotalLines()}\n                error={props.errorLoadTotalLines}\n                isLoading={props.isLoadingTotalLines}\n                styleIcon={{backgroundColor: \"rgb(251, 140, 0)\"}}\n                icon=\"directions\"\n                title=\"Total de linhas\"\n                content={props.totalLines}\n            />\n            <Card\n                buttonError={() => props.requestTotalUsers()}\n                error={props.errorLoadTotalUsers}\n                isLoading={props.isLoadingTotalUsers}\n                textColors=\"#FFF\"\n                styleIcon={{backgroundColor: \"#FFF\", color: '#000'}}\n                styleCard={{backgroundColor: '#3f51b5', color: '#FFF'}}\n                icon=\"people_outline\"\n                title=\"Total de usuários\"\n                content={props.totalUsers}\n            />\n        </Grid>\n        <InformationLine />\n      </Grid>\n    </Auth>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  isLoadingTotalUsers: state.home.isLoadingTotalUsers,\n  totalUsers: state.home.totalUsers,\n  errorLoadTotalUsers: state.home.errorLoadTotalUsers,\n  totalDevices: state.home.totalDevices,\n  isLoadingTotalDevices: state.home.isLoadingTotalDevices,\n  errorLoadTotalDevices: state.home.errorLoadTotalDevices,\n  totalLines: state.home.totalLines,\n  isLoadingTotalLines: state.home.isLoadingTotalLines,\n  errorLoadTotalLines: state.home.errorLoadTotalLines\n})\n\nexport default connect(\n  mapStateToProps,\n  { requestTotalUsers, requestTotalDevices, requestTotalLines }\n)(Dashboard)\n","import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport createStyle from '../../style/global'\nimport Dialog from '../../components/dialog'\nimport AppBar from '../../components/AppBar'\nimport CustomDialog from '../../components/CustomDialog'\nimport createStyleLocal from './style'\nimport { requestEmployeeToEnable, requestUser, logout } from '../../redux/home/actions'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport storage from '../../services/storage'\nimport clsx from 'clsx'\nimport { ROUTES } from '../../utils/constants'\nimport Employee from '../employess/employees'\nimport Account from '../account/account'\nimport History from '../history/history'\nimport Maps from '../maps/maps'\nimport Suggestion from '../suggestion/suggestion'\nimport Devices from '../devices/devices'\nimport Lines from '../lines/lines'\nimport News from '../news/news'\nimport Loading from '../../components/loading'\nimport Dashboard from './components/Dashboard'\nimport Auth from '../auth/auth'\n\nconst Home = props => {\n    const {\n        requestEmployeeToEnable,\n        usersNotAuthorized,\n        requestUser,\n        logout } = props\n    const classes = createStyle()\n    const classesLocal = createStyleLocal()\n    const [ open, setOpen ] = useState(false)\n    const [ openCustomDialog, setOpenCustomDialog ] = useState(false)\n    const [ redirect, setRedirect ] = useState(false)\n    const [ user, setUser ] = useState(null)\n    const [ openDrawer, onDrawer ] = useState(false)\n    const handleClose = () => setOpen(!open)\n    const handleCloseCustomDialog = () => setOpenCustomDialog(!openCustomDialog)\n    const handleLogout = () => {\n        logout()\n        handleClose(!open)\n        storage.removeUser()\n        setRedirect(true)\n    }\n\n    const handleUserToAprrove = user => {\n        setUser(user)\n        handleCloseCustomDialog()\n    }\n    useEffect(() => {\n        if (!storage.getUser()) {\n            setRedirect(true)\n        } else {\n            let show = true\n            const callback = () => {\n                if (show && props.location.pathname === ROUTES.HOME) {\n                    toast.error('Erro de comunicação com servidor, verique sua conexão')\n                }\n                show = false\n            }\n            requestEmployeeToEnable(callback)\n            requestUser(callback)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps \n    }, [ props.location ])\n\n    if (redirect) {\n        return <Redirect to={ROUTES.LOGIN}/>\n    } \n    return (\n        <Auth onlyToken>\n            <Grid className={classes.maxContainer} container item direction=\"column\" wrap=\"nowrap\" alignItems=\"center\">\n                <Loading />\n                <AppBar onDrawer={onDrawer} handleClose={handleClose} usersNotAuthorized={usersNotAuthorized} onSelectedUser={handleUserToAprrove} />\n                <Dialog\n                    transition=\"Slide\"\n                    title=\"Atenção\"\n                    open={open}\n                    onClose={handleClose}\n                    message=\"Deseja sair da aplicaçao?\"\n                    negativeButton=\"Não\"\n                    positiveButton=\"Sim\"\n                    negativeAction={handleClose}\n                    positiveAction={handleLogout}/>\n                <CustomDialog\n                    message=\"Deseja aprovar a entrada desse usuário no sistema?\"\n                    messageCheckBox=\"Aprovar usuário como admin?\"\n                    success={() => {\n                        setOpenCustomDialog(false)\n                        requestEmployeeToEnable()\n                        toast.success('Usuário aprovado com sucesso')\n                    }}\n                    error={() => {\n                        setOpenCustomDialog(false)\n                        toast.error('Falha ao aprovar usuário no sistema')\n                    }}\n                    user={user}\n                    open={openCustomDialog}\n                    negativeAction={handleCloseCustomDialog}\n                />\n\n                <Grid item container className={clsx(classesLocal.content, { [classesLocal.contentShift]: openDrawer })}>\n                    <Switch>\n                        <Route exact path={ROUTES.HOME} component={Dashboard} />\n                        <Route exact path={ROUTES.MAP} component={Maps} />\n                        <Route path={ROUTES.EMPLOYEES} component={Employee} />\n                        <Route path={ROUTES.ACCOUNT} component={Account} />\n                        <Route path={ROUTES.HISTORY} component={History} />\n                        <Route path={ROUTES.SUGGESTION} component={Suggestion} />\n                        <Route path={ROUTES.DEVICES} component={Devices} />\n                        <Route path={ROUTES.LINES} component={Lines} />\n                        <Route path={ROUTES.NEWS} component={News} />\n                        <Redirect from=\"*\" to={ROUTES.HOME} />\n                    </Switch>\n                </Grid>\n            </Grid>\n        </Auth>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        usersNotAuthorized: state.home.usersNotAuthorized,\n        user: state.home.user\n    }\n}\n\nexport default connect(mapStateToProps, { requestEmployeeToEnable, requestUser, logout })(Home)","import React from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport store from './redux/index'\nimport { Provider } from 'react-redux'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Login from './pages/login/login'\nimport Home from './pages/home/home'\nimport './services/mqtt'\n\nfunction App() {\n  toast.configure({ position: toast.POSITION.BOTTOM_CENTER })\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/home\" component={Home} />\n          <Redirect from=\"*\" to='/login' />\n          <Redirect from=\"/\" to='/login' />\n        </Switch>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/google-maps.24ebd30f.png\";","module.exports = __webpack_public_path__ + \"static/media/connected_world.73ac2c2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.af9c6ac7.png\";","module.exports = __webpack_public_path__ + \"static/media/bus.f1a35d33.png\";"],"sourceRoot":""}