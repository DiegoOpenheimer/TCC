{"version":3,"sources":["services/storage.js","services/network.js","redux/login/actions.js","redux/login/reducer.js","redux/home/actions.js","redux/home/reducer.js","redux/components/action.js","redux/employees/action.js","redux/employees/reducer.js","redux/components/reducer.js","redux/history/action.js","redux/history/reducer.js","redux/suggestion/action.js","redux/suggestion/reducer.js","redux/lines/action.js","redux/lines/reducer.js","redux/devices/action.js","redux/devices/reducer.js","redux/news/action.js","redux/news/reducer.js","redux/reducers.js","redux/index.js","pages/login/styles.js","pages/login/components/fieldsLogin.js","pages/login/components/fieldsRegister.js","pages/login/components/forgotPassword.js","pages/login/login.js","style/global.js","components/dialog.js","pages/home/style.js","utils/constants.js","components/Drawer.js","components/AppBar.js","components/CustomDialog.js","components/status.js","pages/employess/employees.js","pages/account/account.js","pages/auth/auth.js","pages/history/history.js","components/Map.js","pages/maps/styles.js","pages/maps/maps.js","pages/suggestion/components/styles.js","pages/suggestion/components/talk.js","pages/suggestion/suggestion.js","pages/devices/components/style.js","pages/devices/components/deviceList.js","services/mqtt.js","pages/devices/components/firstStep.js","components/dialogRadio.js","pages/devices/components/secondStep.js","pages/devices/components/addDevice.js","pages/devices/devices.js","pages/home/components/Comments.js","pages/lines/components/list.js","pages/lines/styles.js","components/dialogInput.js","pages/lines/components/add.js","pages/lines/lines.js","pages/news/styles.js","pages/news/components/list.js","pages/news/components/add.js","pages/news/news.js","components/loading.js","pages/home/components/Card.js","pages/home/components/InformationLine.js","pages/home/components/Dashboard.js","pages/home/home.js","App.js","serviceWorker.js","index.js","assets/connected_world.svg","assets/bus.png"],"names":["storage","getUser","data","localStorage","getItem","user","JSON","parse","jwtDecode","token","saveUser","setItem","stringify","getToken","removeUser","removeItem","instance","axios","create","baseURL","timeout","headers","Content-Type","interceptors","request","use","config","Authorization","CancelToken","type","handleLoading","value","payload","handleResponse","response","INITAL_STATE","isLoading","login","state","arguments","length","undefined","action","Object","objectSpread","handleLoadingTotalUsers","handleErrorTotalUsers","handleLoadingTotalDevices","handleErrorTotalDevices","handleLoadingTotalLines","handleErrorTotalLines","handleLoadingScore","handleErrorScore","handleUser","INITIAL_STATE","totalUsers","isLoadingTotalUsers","errorLoadTotalUsers","totalDevices","isLoadingTotalDevices","errorLoadTotalDevices","totalLines","isLoadingTotalLines","errorLoadTotalLines","usersNotAuthorized","name","email","role","score","isLoadingScore","errorToLoadScore","types","UPDATE_COMPONENT_LOADING","updateLoading","handleReducer","INIT_STATE","docs","total","limit","page","pages","loading","suggestion","lineEdited","updateDevices","updateErrorLines","requestLines","error","console","log","dispatch","network","get","then","catch","e","open","lines","errorToLoadLines","devices","currentDevice","newsEdit","reducers","combineReducers","home","toConsumableArray","employee","component","history","line","device","news","store","createStore","applyMiddleware","thunk","styles","makeStyles","root","minHeight","contentLogo","backgroundColor","color","flex","fontFamily","@media (max-width: 1200px)","display","tabs","marginBottom","fields","textTab","fontSize","textPresent","textFields","margin","contentForgotPassword","width","height","linearProgress","position","top","left","addMarginBottom","content","padding","FieldsLogin","_ref","onClick","onClickRecoverPassword","useEffect","callback","key","verifyUser","document","addEventListener","removeEventListener","classes","createStyle","_useState","useState","password","_useState2","slicedToArray","setUser","handleInput","target","event","defineProperty","keyCode","_","react_default","a","createElement","Fragment","Grid","className","container","direction","TextField","onChange","label","placeholder","justify","Button","disabled","variant","FieldsRegister","cpf","confirmPassword","react_input_mask_default","mask","props","assign","ForgotPassword","setEmail","item","ev","recoverPassword","goBack","connect","requestLogin","success","post","createAccount","setState","handleChange","newValue","theme","useTheme","handleChangeIndex","index","push","registerUser","toast","POSITION","TOP_LEFT","BOTTOM_RIGHT","autoClose","wrap","LinearProgress","alignItems","Typography","react_router","path","match","url","exact","render","style","Tabs","indicatorColor","textColor","Tab","react_swipeable_views_lib_default","axis","onChangeIndex","fieldsLogin","fieldsRegister","forgotPassword","from","to","maxContainer","zIndex","marginVertical","concat","maxWidth","maxHeight","TransitionSlide","React","forwardRef","ref","Slide","CustomDialog","Dialog","TransitionComponent","transition","buildTransition","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","negativeAction","negativeButton","positiveAction","positiveButton","appBar","boxShadow","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","toolbar","borderBottom","flexGrow","paper","border","contentShift","result","contentIcon","contentInformation","icon","borderRadius","popoverHeader","backgroundImage","image","backgroundRepeat","backgroundSize","backgroundPosition","removePadding","contentCard","card","marginTop","drawer","flexShrink","drawerPaper","EMPLOYEE_ROLE","COMMON","ADMIN","USER_STATUS","ENABLED","PENDING","NOT_AUTHORIZED","ROUTES","HOME","EMPLOYEES","ACCOUNT","HISTORY","SUGGESTION","DEVICES","ADD_DEVICES","LINES","ADD_LINES","MAP","LOGIN","NEWS","ADD_NEWS","header","listItem","cursor","borderLeft","&:hover","&:hover $icon","activeRoute","listItemText","fontWeight","listItemActive","iconActive","minWidth","list","paddingLeft","withRouter","useSelector","pathname","location","classesLocal","isAdmin","items","Dashboard","text","show","isActive","includes","handleRoute","Map","AccountBox","People","esm_History","QuestionAnswer","LocationOn","Directions","Drafts","route","Drawer","anchor","Divider","List","map","ListItem","toString","clsx","ListItemIcon","ListItemText","_titles","titles","createStyleLocal","setOpen","_useState3","_useState4","openDrawer","setDrawer","_React$useState","_React$useState2","anchorEl","setAnchorEl","size","handleClose","handleDrawer","onDrawer","AppBar","Toolbar","IconButton","edge","menuButton","aria-label","Close","Menu","currentTarget","Badge","badgeContent","Notifications","ExitToApp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","_id","onSelectedUser","button","primary","secondary","ListItemSecondaryAction","ChevronRight","components_Drawer","field","information","checkBox","useDispatch","setValue","setLoading","requestServer","body","status","cb","loadingGlobal","patch","Checkbox","checked","messageCheckBox","CircularProgress","Status","Role","_ref2","tableWrapper","overflowX","rightIcon","spacing","input","tableCellFooter","paddingRight","requestEmployees","typesLoading","URI","removeEmployee","delete","subject","Subject","pipe","debounceTime","subscribe","setText","_useState5","_useState6","openCustomDialog","setOpenCustomDialog","_useState7","_useState8","complete","next","InputProps","startAdornment","InputAdornment","Search","Paper","Table","TableHead","TableRow","TableCell","TableBody","hover","status_Status","status_Role","stopPropagation","Delete","TableFooter","TablePagination","labelDisplayedRows","count","rowsPerPage","rowsPerPageOptions","onChangePage","components_dialog","components_CustomDialog","contentPadding","contentButton","Account","auth","REDIRECT_TO_LOGIN","REDIRECT_TO_MAP","RENDER_CHILDREN","storageUser","onlyToken","getRedirectRoute","children","requestHistories","reason","Date","createdAt","toLocaleString","compose","withProps","googleMapURL","center","lat","lng","loadingElement","containerElement","mapElement","withScriptjs","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","filterBtn","right","contentMap","requestAllDevices","requestDeviceById","load","setLoad","filter","controller","setController","createLocalStyle","window","initMap","google","components_Map","lineNumber","lineDescription","latitude","longitude","MarkerWithLabel_default","BUS","scaledSize","maps","Size","labelAnchor","Point","labelStyle","buildMarker","directions","routes","geodesic","options","strokeColor","strokeWeight","buildRoute","points","point","buildPoints","buildDrawer","contentTitle","& h3","contentTalk","contentMessages","overflowY","contentInputMessage","footer","contentField","flexDirection","justifyContent","contentList","cardMessage","& p","contentRight","date","fontStyle","contentTime","getSuggestionById","removeMessage","params","entity","listRef","useRef","_createMessage","asyncToGenerator","regenerator_default","mark","_callee","_context","prev","by","onModel","t0","stop","apply","this","scrollHeight","current","clientHeight","maxScrollTop","scrollTop","messages","Input","multiline","maxLength","disableUnderline","Send","requestSuggestions","renderFooter","align","talk","& h2","colorPositive","colors","green","A700","colorNegative","red","textResult","inputSearch","fab","bottom","requestDevices","removeDevice","dist_default","search","actionsColumnIndex","localization","actions","emptyDataSourceMessage","filterRow","filterTooltip","editRow","deleteText","searchTooltip","searchPlaceholder","components","Pagination","columns","editable","min","onRowClick","onRowUpdate","newData","Promise","resolve","put","updateDevice","onRowDelete","oldData","Fab","Add","clientId","Math","random","substr","client","username","on","subscription","CONNECTED","DISCONNECTED","CONNECTING","firstStep","_clsx","setStatus","topic","time","setDevice","onMessage","unsubscribe","lon","removeListener","publish","addListener","timer","info","finishProccess","dialogRadio","valueProp","textCancel","textConfirm","other","objectWithoutProperties","radioGroupRef","disableBackdropClick","disableEscapeKeyDown","onEntering","focus","dividers","RadioGroup","option","FormControlLabel","control","Radio","number","description","updateName","openDialog","clear","createDevice","find","li","buildResult","uuid","steps","AddDevice","step","Stepper","activeStep","Step","StepLabel","secondStep","cancel","DeviceList","removeLine","inputLine","contentBlockMap","contentFields","addIconField","iconRemove","&:hover $iconHiddenRemove","visibility","iconHiddenRemove","contentContainerMap","buttonSave","& svg","marginRight","dialogInput","autoFocus","fullWidth","onCancel","onConfirm","textButton","createLine","getLineById","editLine","globalStyle","localStyles","refDirections","setDirections","errorLine","errorDescription","setInformation","setRoutes","markers","setMarkers","_useState9","_useState10","dialog","setDialog","_useState11","_useState12","filterRoute","query","LatLng","buildRoutes","every","DirectionService","DirectionsService","origin","destination","waypoints","stopover","optimizeWaypoints","travelMode","TravelMode","DRIVING","avoidTolls","DirectionsStatus","OK","NOT_FOUND","keys","inputProps","helperText","formOk","getDirections","overview_path","callbackError","saveLine","Save","old","newRoutes","endAdornment","i","Clear","AddCircle","latLng","some","marker","showOverlayView","draggable","callbackCloseOverlay","newMarkers","clickable","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","buildMarkers","lines_lines","inputRegisterNews","textMessage","requestNews","removeNews","author","parser","createNews","editNews","getNewsById","clearNewsEdit","localClasses","EditorState","createEmpty","editorState","setEditorState","setTitle","_props$newsEdit","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","react_draft_wysiwyg","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","callbackSuccess","news_news","components_loading","Card","buttonError","styleIcon","textColors","styleCard","xs","sm","md","lg","xl","bundle_default","circle","Replay","Icon","Comments","tab","setTab","comment","setComment","star","idLine","cancelToken","c","fullScreen","centered","oldTab","sc","stars","StarRate","buildStar","requestScore","DEFAULT_VALUE","setOpenDialog","comments","setComments","setValueFilter","getScore","react_chartjs_2_es","datasets","labels","components_Comments","requestTotalUsers","requestTotalDevices","requestTotalLines","globalClasses","createGlobalStyle","components_Card","components_InformationLine","requestEmployeeToEnable","requestUser","logout","redirect","setRedirect","handleCloseCustomDialog","components_AppBar","Maps","Employee","History","Suggestion","Devices","Lines","News","App","configure","react_redux_es","react_router_dom","Login","Home","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.51d4919a.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\n\nexport default {\n    getUser() {\n        const data = localStorage.getItem('user')\n        if (data) {\n            const user = JSON.parse(data)\n            return jwtDecode(user.token)\n        }\n        return null\n    },\n    saveUser(user) {\n        localStorage.setItem('user', JSON.stringify(user))\n    },\n    getToken() {\n        const data = localStorage.getItem('user')\n        if (data) {\n            return JSON.parse(data).token\n        }\n    },\n    removeUser() {\n        localStorage.removeItem('user')\n    }\n}","import axios from 'axios'\nimport storage from './storage'\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:3001/',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n})\n\ninstance.interceptors.request.use(config => {\n    config.headers.Authorization = storage.getToken()\n    return config\n})\n\nexport const CancelToken = axios.CancelToken\n\nexport default instance","import network from '../../services/network'\nimport storage from '../../services/storage'\n\nexport const type = {\n    LOADING: 'LOADING',\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n}\n\nexport const requestLogin = (user, success, error) => dispatch => {\n    dispatch(handleLoading(true))\n    network.post('auth/employee', user)\n    .then(response => {\n        dispatch(handleLoading(false))\n        dispatch(handleResponse(response))\n        storage.saveUser(response.data)\n        success()\n    })\n    .catch(e => {\n        dispatch(handleLoading(false))\n        if (e.response) {\n            error('Sem permissão para acesso')\n        } else {\n            error('Falha de comunicação com o servidor')\n        }\n    })\n}\n\nexport const createAccount = (user, success, error) => dispatch => {\n    dispatch(handleLoading(true))\n    network.post('employee', user)\n    .then(_ => {\n        dispatch(handleLoading(false))\n        success()\n    })\n    .catch(_ => {\n        dispatch(handleLoading(false))\n        error('Error ao criar conta')\n    })\n}\n\nexport const recoverPassword = (email, success, error) => dispatch => {\n    dispatch(handleLoading(true))\n    network.post('employee/recover-password', { email })\n    .then(_ => {\n        dispatch(handleLoading(false))\n        success()\n    })\n    .catch(_ => {\n        dispatch(handleLoading(false))\n        error('Error ao recuperar senha')\n    })\n}\n\nconst handleLoading = value => ({\n    type: type.LOADING,\n    payload: { value }\n})\n\nconst handleResponse = response => ({\n    type: type.LOGIN_SUCCESS,\n    payload: {\n        value: response.data.token\n    }\n})\n\n","import { type } from './actions'\n\nconst INITAL_STATE = {\n    isLoading: false,\n    token: '',\n}\n\nconst login = (state = INITAL_STATE, action) => {\n    switch(action.type) {\n        case type.LOGIN_SUCCESS:\n            return { ...state, token: action.payload.value }\n        case type.LOADING:\n            return { ...state, isLoading: action.payload.value }\n        default:\n            return { ...state }\n    }\n}\n\nexport default login","import network from '../../services/network'\nimport storage from '../../services/storage'\n\nexport const type = {\n    LOADING_TOTAL_USERS: 'LOADING_TOTAL_USERS',\n    TOTAL_USERS: 'TOTAL_USERS',\n    ERROR_LOAD_TOTAL_USERS: 'ERROR_LOAD_TOTAL_USERS',\n    TOTAL_DEVICES: 'TOTAL_DEVICES',\n    ERROR_LOAD_TOTAL_DEVICES: 'ERROR_LOAD_TOTAL_DEVICES',\n    LOADING_TOTAL_DEVICES: 'LOADING_TOTAL_DEVICES',\n    TOTAL_LINES: 'TOTAL_LINES',\n    ERROR_LOAD_TOTAL_LINES: 'ERROR_LOAD_TOTAL_LINES',\n    LOADING_TOTAL_LINES: 'LOADING_TOTAL_LINES',\n    USERS_NOT_AUTHORIZED: 'USERS_NOT_AUTHORIZED',\n    UPDATE_USER: 'UPDATE_USER',\n    UPDATE_SCORE: 'UPDATE_SCORE',\n    LOADING_SCORE: 'LOADING_SCORE',\n    ERROR_LOAD_SCORE: 'ERROR_LOAD_SCORE',\n}\n\nconst handleTotalUsers = value => ({ type: type.TOTAL_USERS, payload: { value } })\nconst handleLoadingTotalUsers = value => ({ type: type.LOADING_TOTAL_USERS, payload: { value } })\nconst handleErrorTotalUsers = value => ({ type: type.ERROR_LOAD_TOTAL_USERS, payload: { value } })\nconst handleTotalDevices = value => ({ type: type.TOTAL_DEVICES, payload: { value } })\nconst handleLoadingTotalDevices = value => ({ type: type.LOADING_TOTAL_DEVICES, payload: { value } })\nconst handleErrorTotalDevices = value => ({ type: type.ERROR_LOAD_TOTAL_DEVICES, payload: { value } })\nconst handleTotalLines = value => ({ type: type.TOTAL_LINES, payload: { value } })\nconst handleLoadingTotalLines = value => ({ type: type.LOADING_TOTAL_LINES, payload: { value } })\nconst handleErrorTotalLines = value => ({ type: type.ERROR_LOAD_TOTAL_LINES, payload: { value } })\nconst handleTotalUsersNotAuthorized = value => ({ type: type.USERS_NOT_AUTHORIZED, payload: { value } })\nconst handleScore = value => ({ type: type.UPDATE_SCORE, payload: { value } })\nconst handleLoadingScore = value => ({ type: type.LOADING_SCORE, payload: { value } })\nconst handleErrorScore = value => ({ type: type.ERROR_LOAD_SCORE, payload: { value } })\nexport const handleUser = value => ({ type: type.UPDATE_USER, payload: { value } })\n\n\nexport const logout = () => ({ type: type.UPDATE_USER, payload: { value: { email: '', name: '', role: '' } } })\n\nexport const requestTotalUsers = (error = console.log) => dispatch => {\n  dispatch(handleLoadingTotalUsers(true));\n  dispatch(handleErrorTotalUsers(false));\n  network\n    .get(\"user/count\")\n    .then(response => {\n      dispatch(handleLoadingTotalUsers(false));\n      dispatch(handleTotalUsers(response.data.count));\n    })\n    .catch(e => {\n      error(e);\n      dispatch(handleLoadingTotalUsers(false));\n      dispatch(handleErrorTotalUsers(true));\n    });\n};\n\nexport const requestTotalDevices = (error = console.log) => dispatch => {\n  dispatch(handleErrorTotalDevices(false));\n  dispatch(handleLoadingTotalDevices(true));\n  network\n    .get(\"device/count\")\n    .then(response => {\n      dispatch(handleLoadingTotalDevices(false));\n      dispatch(handleTotalDevices(response.data.count));\n    })\n    .catch(e => {\n      error(e);\n      dispatch(handleLoadingTotalDevices(false));\n      dispatch(handleErrorTotalDevices(true));\n    });\n};\n\nexport const requestTotalLines = (error = console.log) => dispatch => {\n  dispatch(handleErrorTotalLines(false));\n  dispatch(handleLoadingTotalLines(true));\n  network\n    .get(\"line/count\")\n    .then(response => {\n      dispatch(handleLoadingTotalLines(false));\n      dispatch(handleTotalLines(response.data.count));\n    })\n    .catch(e => {\n      error(e);\n      dispatch(handleLoadingTotalLines(false));\n      dispatch(handleErrorTotalLines(true));\n    });\n};\n\nexport const requestScore = (filter = 'all', success = console.log, error = console.log) => dispatch => {\n  dispatch(handleErrorScore(false))\n  dispatch(handleLoadingScore(true))\n  network\n    .get(`line/score?filter=${filter}`)\n    .then(response => {\n      dispatch(handleLoadingScore(false))\n      dispatch(handleScore(response.data))\n      success()\n    })\n    .catch(e => {\n      error(e)\n      dispatch(handleLoadingScore(false))\n      dispatch(handleErrorScore(true))\n    })\n}\n\nexport const requestEmployeeToEnable = (error = console.log) => dispatch => {\n    network.get('employee/not_authorized')\n    .then(response => dispatch(handleTotalUsersNotAuthorized(response.data)))\n    .catch(error)\n}\n\nexport const requestUser = (error = console.log) => dispatch => {\n    network.get('employee/current')\n    .then(response => {\n      if (!response.data) {\n        storage.removeUser()\n      }\n      dispatch(handleUser(response.data))\n    })\n    .catch(error)\n}","import { type } from \"./actions\";\n\nconst INITIAL_STATE = {\n  totalUsers: 0,\n  isLoadingTotalUsers: false,\n  errorLoadTotalUsers: false,\n  totalDevices: 0,\n  isLoadingTotalDevices: false,\n  errorLoadTotalDevices: false,\n  totalLines: 0,\n  isLoadingTotalLines: false,\n  errorLoadTotalLines: false,\n  usersNotAuthorized: [],\n  user: { name: \"\", email: \"\", role: \"\" },\n  score: [],\n  isLoadingScore: false,\n  errorToLoadScore: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case type.LOADING_TOTAL_USERS:\n      return { ...state, isLoadingTotalUsers: action.payload.value };\n\n    case type.TOTAL_USERS:\n      return { ...state, totalUsers: action.payload.value };\n\n    case type.ERROR_LOAD_TOTAL_USERS:\n      return { ...state, errorLoadTotalUsers: action.payload.value };\n\n    case type.LOADING_TOTAL_DEVICES:\n      return { ...state, isLoadingTotalDevices: action.payload.value };\n\n    case type.TOTAL_DEVICES:\n      return { ...state, totalDevices: action.payload.value };\n\n    case type.ERROR_LOAD_TOTAL_DEVICES:\n      return { ...state, errorLoadTotalDevices: action.payload.value };\n\n    case type.LOADING_TOTAL_LINES:\n      return { ...state, isLoadingTotalLines: action.payload.value };\n\n    case type.TOTAL_LINES:\n      return { ...state, totalLines: action.payload.value };\n\n    case type.ERROR_LOAD_TOTAL_LINES:\n      return { ...state, errorLoadTotalLines: action.payload.value };\n\n    case type.USERS_NOT_AUTHORIZED:\n      return { ...state, usersNotAuthorized: [...action.payload.value] };\n      \n    case type.UPDATE_USER:\n      return { ...state, user: { ...action.payload.value } };\n\n    case type.UPDATE_SCORE:\n        return { ...state, score: action.payload.value }\n\n    case type.LOADING_SCORE:\n        return { ...state, isLoadingScore: action.payload.value }\n\n    case type.ERROR_LOAD_SCORE:\n        return { ...state, errorToLoadScore: action.payload.value }\n        \n    default:\n      return { ...state };\n  }\n};\n","export const types = {\n    UPDATE_COMPONENT_LOADING: 'UPDATE_COMPONENT_LOADING'\n}\n\nexport function updateLoading(value) {\n    return {\n        type: types.UPDATE_COMPONENT_LOADING,\n        payload: { value }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_EMPLOYEES: 'UPDATE_EMPLOYEES',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestEmployees = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `employee?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_EMPLOYEES, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeEmployee = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete('employee', { data: body })\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}","import { types } from './action'\n\nconst INIT_STATE = {\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_EMPLOYEES:\n            return { ...state, data: { ...action.payload.value } }\n        default:\n            return { ...state }\n    }\n}","import { types } from './action'\n\nconst INITIAL_STATE = {\n    loading: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_COMPONENT_LOADING:\n            return { ...state, loading: action.payload.value }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_HISTORY: 'UPDATE_HISTORY',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestHistories = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `history?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_HISTORY, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n","import { types } from './action'\n\nconst INIT_STATE = {\n    docs: [],\n    total: 0,\n    limit: 10,\n    page: 1,\n    pages: 1\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_HISTORY:\n            return { ...state, ...action.payload.value }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_SUGGESTION: 'UPDATE_SUGGESTION',\n    UPDATE_SUGGESTION_CHOOSED: 'UPDATE_SUGGESTION_CHOOSED',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestSuggestions = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `suggestion?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_SUGGESTION, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const getSuggestionById = (id, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.get(`suggestion/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_SUGGESTION_CHOOSED, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeMessage = (suggestion, message, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete('suggestion/message', { data: { suggestion, message } })\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n\n\n} ","import { types } from './action'\n\nconst INIT_STATE = {\n    docs: [],\n    total: 0,\n    limit: 10,\n    page: 1,\n    pages: 1,\n    suggestion: null\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_SUGGESTION:\n            return { ...state, ...action.payload.value }\n        case types.UPDATE_SUGGESTION_CHOOSED:\n            return { ...state, suggestion: {...action.payload.value} }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_LINES: 'UPDATE_LINES',\n    UPDATE_LINE_EDITED: 'UPDATE_LINE_EDITED',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestLines = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `line?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_LINES, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const createLine = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.post(`line`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const editLine = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.put(`line`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const getLineById = (id, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.get(`line/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_LINE_EDITED, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeLine = (id, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete(`line/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}","import { types } from './action'\n\nconst INIT_STATE = {\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n    lineEdited: null\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_LINES:\n            return { ...state, data: { ...action.payload.value }, lineEdited: null }\n        case types.UPDATE_LINE_EDITED:\n            return { ...state, lineEdited: { ...action.payload.value } }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { updateLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_DEVICE_LINES: 'UPDATE_DEVICE_LINES',\n    ERROR_LOAD_LINES: 'ERROR_LOAD_LINES',\n    UPDATE_DEVICE_NAME: 'UPDATE_DEVICE_NAME',\n    UPDATE_DEVICE_DIALOG: 'UPDATE_DEVICE_DIALOG',\n    UPDATE_LINE_VALUE: 'UPDATE_LINE_VALUE',\n    DEVICE_CLEAR: 'DEVICE_CLEAR',\n    UPDATE_DEVICES_DOCS: 'UPDATE_DEVICES_DOCS',\n    UPDATE_DEVICES: 'UPDATE_DEVICES',\n    UPDATE_CURRENT_DEVICE: 'UPDATE_CURRENT_DEVICE'\n}\n\nexport const updateName = value => ({ type: types.UPDATE_DEVICE_NAME, payload: { value }})\n\nexport const openDialog = value => ({ type: types.UPDATE_DEVICE_DIALOG, payload: { value }})\n\nexport const updateLines = value => ({ type: types.UPDATE_DEVICE_LINES, payload: { value }})\n\nexport const updateDevicesDocs = value => ({ type: types.UPDATE_DEVICES_DOCS, payload: { value }})\n\nexport const updateDevices= value => ({ type: types.UPDATE_DEVICES, payload: { value }})\n\nexport const updateCurrentDevice = value => ({ type: types.UPDATE_CURRENT_DEVICE, payload: { value }})\n\nexport const updateErrorLines = value => ({ type: types.ERROR_LOAD_LINES, payload: { value }})\n\nexport const onClose = value => ({ type: types.UPDATE_LINE_VALUE, payload: { value } })\n\nexport const clear = () => ({ type: types.DEVICE_CLEAR })\n\nexport const requestLines = (error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    dispatch(updateErrorLines(false))\n    network.get('line/associate')\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateLines(response.data))\n    })\n    .catch(e => {\n        dispatch(updateErrorLines(true))\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const requestDevices = (page = 1, limit = 10, field, success, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    let URI = `device?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateDevicesDocs(response.data))\n        if (success) {\n            success()\n        }\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const requestAllDevices = (success, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    let URI = `device?all=all`\n    network.get(URI)\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateDevices(response.data))\n        if (success) {\n            success()\n        }\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const requestDeviceById = (id, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    let URI = `device/${id}`\n    network.get(URI)\n    .then(response => {\n        dispatch(updateLoading(false))\n        dispatch(updateCurrentDevice(response.data))\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const createDevice = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    network.post('device', body)\n    .then(response => {\n        dispatch(updateLoading(false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\nexport const updateDevice = (body, success = console.log, error = console.log) => {\n    network.put('device', body)\n    .then(response => {\n        success(response)\n    })\n    .catch(e => {\n        error(e)\n    })\n}\n\nexport const removeDevice = (id, success = console.log, error = console.log) => dispatch => {\n    dispatch(updateLoading(true))\n    network.delete(`device/${id}`)\n    .then(response => {\n        dispatch(updateLoading(false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(updateLoading(false))\n        error(e)\n    })\n}\n\n","import { types } from './action'\n\nconst INITIAL_STATE = {\n    name: '',\n    open: false,\n    lines: [],\n    errorToLoadLines: false,\n    value: '',\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n    devices: [],\n    currentDevice: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_DEVICE_NAME:\n            return { ...state, name: action.payload.value }\n        case types.UPDATE_DEVICE_LINES:\n            return { ...state, lines: action.payload.value }\n        case types.UPDATE_DEVICES_DOCS:\n            return { ...state, data: action.payload.value }\n        case types.UPDATE_DEVICES:\n            return { ...state, devices: action.payload.value, currentDevice: null }\n        case types.UPDATE_CURRENT_DEVICE:\n            return { ...state, currentDevice: action.payload.value }\n        case types.UPDATE_DEVICE_DIALOG:\n            return { ...state, open: action.payload.value }\n        case types.ERROR_LOAD_LINES:\n            return { ...state, errorToLoadLines: action.payload.value }\n        case types.UPDATE_LINE_VALUE:\n            return { ...state, open: false, value: action.payload.value || state.value }\n        case types.DEVICE_CLEAR:\n            return { ...state, open: false, name: '', lines: [], value: '' }\n        default:\n            return { ...state }\n    }\n}","import network from '../../services/network'\nimport { types as typesLoading } from '../components/action'\n\nexport const types = {\n    UPDATE_NEWS: 'UPDATE_NEWS',\n    UPDATE_NEWS_EDITED: 'UPDATE_NEWS_EDITED',\n}\n\nconst handleReducer = (type, value) => ({ type, payload: { value } })\n\nexport const requestNews = (page = 1, limit = 10, field, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    let URI = `news?limit=${limit}&page=${page}`\n    if (field) {\n        URI = URI.concat(`&field=${field}`)\n    }\n    network.get(URI)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_NEWS, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const createNews = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.post(`news`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const editNews = (body, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.put(`news`, body)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const getNewsById = (id, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.get(`news/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        dispatch(handleReducer(types.UPDATE_NEWS_EDITED, response.data))\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const removeNews = (id, success = console.log, error = console.log) => dispatch => {\n    dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, true))\n    network.delete(`news/${id}`)\n    .then(response => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        success(response)\n    })\n    .catch(e => {\n        dispatch(handleReducer(typesLoading.UPDATE_COMPONENT_LOADING, false))\n        error(e)\n    })\n}\n\nexport const clearNewsEdit = () => handleReducer(types.UPDATE_NEWS_EDITED, null)","import { types } from './action'\n\nconst INIT_STATE = {\n    data: {\n        docs: [],\n        total: 0,\n        limit: 10,\n        page: 1,\n        pages: 1\n    },\n    newsEdit: null\n}\n\nexport default (state = INIT_STATE, action) => {\n    switch(action.type) {\n        case types.UPDATE_NEWS:\n            return { ...state, data: { ...action.payload.value }, newsEdit: null }\n        case types.UPDATE_NEWS_EDITED:\n            return { ...state, newsEdit: { ...action.payload.value } }\n        default:\n            return { ...state }\n    }\n}","import {\n    combineReducers\n} from 'redux'\nimport login from './login/reducer'\nimport home from './home/reducer'\nimport employee from './employees/reducer'\nimport component from './components/reducer'\nimport history from './history/reducer'\nimport suggestion from './suggestion/reducer'\nimport line from './lines/reducer'\nimport device from './devices/reducer'\nimport news from './news/reducer'\n\nconst reducers = combineReducers({\n    login,\n    home,\n    employee,\n    component,\n    history,\n    suggestion,\n    line,\n    device,\n    news\n})\n\nexport default reducers","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nexport default store\n\n","import { makeStyles } from '@material-ui/core'\n\nconst styles = makeStyles({\n    root: {\n        minHeight: '100vh',\n    },\n    contentLogo: {\n        backgroundColor: '#536dfe',\n        color: '#FFF',\n        flex: 2,\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;`,\n        '@media (max-width: 1200px)': {\n            display: 'none'\n        }\n    },\n    tabs: {\n        marginBottom: 16\n    },\n    fields: {\n        flex: 1.4,\n    },\n    textTab: {\n        fontSize: '20px'\n    },\n    textPresent: {\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;`,\n        color: '#4A4A4A'\n    },\n    textFields: {\n        margin: '16px 0px'\n    },\n    contentForgotPassword: {\n        width: '70%',\n        height: '80%',\n    },\n    linearProgress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%'\n    },\n    addMarginBottom: {\n        marginBottom: 10\n    },\n    content: {\n        padding: '0px 16px'\n    }\n})\n\nexport default styles","import React, { useState, useEffect } from 'react'\nimport { TextField, Grid, Button } from '@material-ui/core'\nimport createStyle from '../styles'\n\nconst FieldsLogin = ({ onClick, onClickRecoverPassword }) => {\n\n    useEffect(() => {\n        const callback = e => {\n            if (e.key === 'Enter' && !verifyUser()) {\n                onClick(user)\n            }\n        }\n        document.addEventListener('keypress', callback)\n        return () => document.removeEventListener('keypress', callback)\n    })\n\n    const classes = createStyle()\n    const [ user, setUser ] = useState({\n        email: '',\n        password: ''\n    })\n    const handleInput = target => event => {\n        setUser({ ...user, [target]: event.target.value })\n        if (!verifyUser() && event.keyCode === 13) {\n            onClick(user)\n        }\n    }\n    const verifyUser = _ => {\n        if (user.email && user.password) {\n            return false\n        }\n        return true\n    }\n    return (\n        <>\n            <Grid className={classes.content} container direction=\"column\" >\n                <TextField\n                    onChange={handleInput('email')}\n                    label=\"Email\"\n                    margin=\"normal\"\n                    className={classes.textFields}\n                    placeholder=\"Informe email\"\n                    />\n                <TextField\n                    onChange={handleInput('password')}\n                    className={classes.textFields}\n                    label=\"Senha\"\n                    margin=\"normal\"\n                    type=\"password\"\n                    placeholder=\"Informe senha\"\n                />\n                <Grid container justify=\"space-between\">\n                    <Button onClick={_ => onClick(user)} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\n                        Entrar\n                    </Button>\n                    <Button onClick={onClickRecoverPassword} color=\"primary\">\n                        Esqueceu a senha?\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n\n}\n\n\nexport default FieldsLogin","import React, { useState } from 'react'\nimport { TextField, Grid, Button } from '@material-ui/core'\nimport InputMask from 'react-input-mask'\nimport createStyle from '../styles'\n\nconst FieldsRegister = ({ onClick }) => {\n    const classes = createStyle()\n    const [ user, setUser ] = useState({\n        name: '',\n        email: '',\n        cpf: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const handleInput = target => event => {\n        setUser({ ...user, [target]: event.target.value })\n    }\n    const verifyUser = () => {\n        if (user) {\n            const { email, cpf, password, confirmPassword, name } = user\n            if (email && cpf && password && confirmPassword && name) {\n                return false\n            }\n            return true\n        }\n        return true\n    }\n    return (\n        <>\n        <Grid className={classes.content} container direction=\"column\" >\n            <TextField\n                onChange={handleInput('name')}\n                label=\"Nome\"\n                margin=\"normal\"\n                className={classes.textFields}\n                placeholder=\"Informe email\"\n                />\n            <TextField\n                onChange={handleInput('email')}\n                label=\"Email\"\n                margin=\"normal\"\n                className={classes.textFields}\n                placeholder=\"Informe email\"\n                />\n            <InputMask mask=\"999.999.999-99\" onChange={handleInput('cpf')}>\n                {\n                    props => <TextField\n                        {...props}\n                        label=\"Cpf\"\n                        margin=\"normal\"\n                        className={classes.textFields}\n                    />\n                }\n            </InputMask>\n            <TextField\n                onChange={handleInput('password')}\n                label=\"Senha\"\n                margin=\"normal\"\n                type=\"password\"\n                className={classes.textFields}\n                placeholder=\"Informe senha\"\n            />\n            <TextField\n                onChange={handleInput('confirmPassword')}\n                label=\"Confirme senha\"\n                margin=\"normal\"\n                type=\"password\"\n                className={classes.textFields}\n                placeholder=\"Informe senha\"\n            />\n            <Button onClick={() => onClick(user)} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\n                Entrar\n            </Button>\n        </Grid>\n    </>\n    )\n\n}\n\n\nexport default FieldsRegister","import React, { useState } from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport createStyle from '../styles'\n\nconst ForgotPassword = props => {\n    const classes = createStyle()\n    const [ email, setEmail ] = useState('')\n    return (\n        <Grid item container direction=\"column\" justify=\"flex-start\" className={classes.contentForgotPassword}>\n            <h2 className={classes.textPresent}>Recuperar senha:</h2>\n            <TextField\n                className={classes.textFields}\n                label=\"Email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"Informe email\"\n                onChange={ev => setEmail(ev.target.value)}\n            />\n            <Button disabled={!email} className={classes.addMarginBottom} variant=\"contained\" color=\"primary\" onClick={() => props.recoverPassword(email)}>Enviar</Button>\n            <Button onClick={props.goBack}>Voltar</Button>\n        </Grid>\n    )\n}\n\nexport default ForgotPassword","import React, { useState, useEffect } from 'react'\nimport { Grid, Tabs, Tab, useTheme, LinearProgress, Typography } from '@material-ui/core'\nimport SwipeableViews from 'react-swipeable-views'\nimport createStyle from './styles'\nimport { toast } from 'react-toastify'\nimport { Route, Redirect } from 'react-router-dom'\nimport FieldsLogin from './components/fieldsLogin'\nimport FieldsRegister from './components/fieldsRegister'\nimport ForgotPassword from './components/forgotPassword'\nimport { connect } from 'react-redux'\nimport { requestLogin, createAccount, recoverPassword } from '../../redux/login/actions'\nimport storage from '../../services/storage'\n\nconst Login = props => {\n    const [ state, setState ] = useState(0)\n    const handleChange = (_, newValue) => setState(newValue)\n    const classes = createStyle()\n    const theme = useTheme()\n\n    function handleChangeIndex(index) {\n        setState(index);\n    }\n\n    useEffect(() => {\n        if (storage.getUser()) {\n            props.history.push('/home')\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ ])\n\n    const registerUser = user => {\n        if (!props.isLoading) {\n            if (user.password !== user.confirmPassword) {\n                toast.error('Senhas diferentes', { position: toast.POSITION.TOP_LEFT })\n            } else {\n                props.createAccount(\n                    user,\n                    () => toast.success('Conta criada com sucesso, confirme no seu email'),\n                    e => toast.error(e)\n                )\n            }\n        }\n    }\n    \n    const requestLogin = user => {\n        if (!props.isLoading) {\n            props.requestLogin(user, () => {\n                toast.success('Login efetuado com sucesso', { position: toast.POSITION.BOTTOM_RIGHT, autoClose: 2000 })\n                props.history.push('/home')\n            }, e => toast.error(e))\n        }\n    }\n\n    const recoverPassword = email => {\n        props.recoverPassword(email, () => toast.success('Verifique seu email'), e => toast.error(e))\n    }\n\n    return (\n        <>\n            <Grid container className={classes.root} wrap=\"nowrap\">\n                {\n                    props.isLoading &&\n                    <LinearProgress className={classes.linearProgress} />\n                }\n                <Grid container justify=\"center\" alignItems=\"center\" item className={classes.contentLogo}>\n                    <Typography variant=\"h1\">Bus Locator</Typography>\n                </Grid>\n\n\n                <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.fields} >\n                    <Route path={props.match.url} exact render={() => {\n                        return (\n                        <Grid item container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{width: '80%'}}>\n                            <Tabs\n                            className={classes.tabs}\n                            variant=\"fullWidth\"\n                            value={state}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                                >\n                                <Tab className={classes.textTab} label=\"Entrar\" />\n                                <Tab className={classes.textTab} label=\"Nova Conta\" />\n                            </Tabs>\n                            <Typography variant=\"h5\" className={classes.textPresent}>Bem vindo</Typography>\n                            <SwipeableViews\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                            index={state}\n                            onChangeIndex={handleChangeIndex}>\n                                <FieldsLogin onClick={requestLogin} onClickRecoverPassword={() => props.history.push('/login/forgot-password')} />\n                                <FieldsRegister onClick={registerUser} />\n                            </SwipeableViews>\n                        </Grid>\n                        )\n                    }}/>\n\n                    <Route path={props.match.url + '/forgot-password'} exact render={() => <ForgotPassword goBack={props.history.goBack} recoverPassword={recoverPassword} />} />\n                </Grid>\n            </Grid>\n            <Redirect from=\"*\" to=\"/login\" />\n        </>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.login.isLoading,\n    }\n}\n\nexport default connect(mapStateToProps, { requestLogin, createAccount, recoverPassword })(Login)","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles({\n    maxContainer: {\n        minHeight: '100vh',\n    },\n    linearProgress: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        zIndex: 10000\n    },\n    container: {\n        padding: 16\n    },\n    marginVertical: {\n        margin: props => `${props.marginVertical} 0px`\n    },\n    maxWidth: {\n        width: '100%'\n    },\n    maxHeight: {\n        height: '100%'\n    }\n})","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Slide } from '@material-ui/core'\n\nconst TransitionSlide = React.forwardRef(function(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n})\n\nconst CustomDialog = props => {\n\n    const buildTransition = () => {\n        if (props.transition && props.transition === 'Slide') {\n            return TransitionSlide\n        }\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            TransitionComponent={buildTransition()}\n            keepMounted\n            onClose={props.onClose}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">{props.title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    {props.message}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.negativeAction} color=\"primary\">\n                    { props.negativeButton }\n                </Button>\n                <Button onClick={props.positiveAction} color=\"primary\">\n                    { props.positiveButton }\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n\n\n}\n\nexport default CustomDialog","import { makeStyles } from '@material-ui/core'\nimport image from '../../assets/connected_world.svg'\n\nconst drawerWidth = 240\n\nexport default makeStyles(theme => ({\n    appBar: {\n        boxShadow: 'none',\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px) !important`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    toolbar: {\n        backgroundColor: '#FFF',\n        borderBottom: '1px solid #DFE3E8',\n    },\n    title: {\n        flexGrow: 1,\n        color: '#000'\n    },\n    paper: {\n        boxShadow: 'none',\n        border: '1px solid #DFE3E8',\n        padding: 16,\n        color: '#66788A'\n    },\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        backgroundColor: '#f8fafc'\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px) !important`\n    },\n    result: {\n        color: '#000'\n    },\n    contentIcon: {\n        flex: 1\n    },\n    contentInformation: {\n        flex: 2\n    },\n    icon: {\n        backgroundColor: '#45B880',\n        color: '#FFF',\n        padding: 16,\n        fontSize: 50,\n        borderRadius: '50%',\n    },\n    popoverHeader: {\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'contain',\n        backgroundColor: '#f8fafc',\n        backgroundPosition: 'right',\n        width: 350,\n        padding: 30\n    },\n    removePadding: {\n        padding: 0\n    },\n    contentCard: {\n        padding: 16,\n    },\n    card: {\n        marginTop: 5\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    }\n}))","export const EMPLOYEE_ROLE = {\n    COMMON: 'COMMON',\n    ADMIN: 'ADMIN'\n}\n\nexport const USER_STATUS = {\n    ENABLED: 'ENABLED',\n    PENDING: 'PEDING',\n    NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n}\n\nexport const ROUTES = {\n    HOME: '/home/dashboard',\n    EMPLOYEES: '/home/employess',\n    ACCOUNT: '/home/account',\n    HISTORY: '/home/history',\n    SUGGESTION: '/home/suggestion',\n    DEVICES: '/home/devices',\n    ADD_DEVICES: '/home/devices/add',\n    LINES: '/home/lines',\n    ADD_LINES: '/home/lines/add',\n    MAP: '/home/maps',\n    LOGIN: '/login',\n    NEWS: '/home/news',\n    ADD_NEWS: '/home/news/add'\n}","import React from 'react'\nimport { Drawer, Grid, makeStyles, Divider, Typography, List, ListItemIcon, ListItemText, ListItem }  from '@material-ui/core'\nimport createStyle from '../pages/home/style'\nimport { Dashboard, People, AccountBox, History, QuestionAnswer, LocationOn, Directions, Map, Drafts } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES, EMPLOYEE_ROLE } from '../utils/constants'\nimport { useSelector } from 'react-redux'\n\nconst styles = makeStyles({\n    header: {\n        height: 200,\n    },\n    listItem: {\n        cursor: 'pointer',\n        margin: '8px 0px',\n        borderLeft: '4px solid transparent',\n        '&:hover': {\n            borderLeft: '4px solid #0767DB',\n            borderRadius: 4,\n            backgroundColor: '#F6F9FD',\n            color: '#0767DB !important'\n        },\n        '&:hover $icon': {\n            color: '#0767DB !important'\n        }\n    },\n    activeRoute: {\n        borderLeft: '4px solid #0767DB',\n        borderRadius: 4,\n        backgroundColor: '#F6F9FD'\n    },\n    listItemText: {\n        fontWeight: 500,\n        color: '#66788A',\n        marginLeft: 8,\n    },\n    listItemActive: {\n        color: '#12161B'\n    },\n    iconActive: {\n        color: '#0767DB !important'\n    },\n    icon: {\n        minWidth: 'unset !important',\n        fontWeight: 500,\n        color: '#66788A',\n    },\n    list: {\n        paddingLeft: 8\n    }\n})\n\nconst CustomDrawer = props => {\n\n    const user = useSelector(state => state.home.user)\n    const { onClose, open, location: { pathname } } = props\n    const classesLocal = createStyle()\n    const classes = styles()\n    const isAdmin = user.role === EMPLOYEE_ROLE.ADMIN\n    const items = [\n        {\n            icon: <Dashboard/>,\n            text: 'Painel de controle',\n            url: ROUTES.HOME,\n            show: isAdmin,\n            isActive: pathname.includes(ROUTES.HOME),\n            onClick() { pathname !== ROUTES.HOME && handleRoute(ROUTES.HOME) }\n        },\n        {\n            icon: <Map/>,\n            text: 'Mapa',\n            url: ROUTES.MAP,\n            show: true,\n            isActive: pathname.includes(ROUTES.MAP),\n            onClick() { pathname !== ROUTES.MAP && handleRoute(ROUTES.MAP) }\n        },\n        {\n            icon: <AccountBox/>,\n            text: 'Minha Conta',\n            url: ROUTES.ACCOUNT,\n            show: true,\n            isActive: pathname.includes(ROUTES.ACCOUNT),\n            onClick() { pathname !== ROUTES.ACCOUNT && handleRoute(ROUTES.ACCOUNT) }\n        },\n        {\n            icon: <People/>,\n            text: 'Funcionários',\n            url: ROUTES.EMPLOYEES,\n            show: true,\n            isActive: pathname.includes(ROUTES.EMPLOYEES),\n            onClick() { pathname !== ROUTES.EMPLOYEES && handleRoute(ROUTES.EMPLOYEES) }\n        },\n        {\n            icon: <History/>,\n            text: 'Histórico',\n            url: ROUTES.HISTORY,\n            show: isAdmin,\n            isActive: pathname.includes(ROUTES.HISTORY),\n            onClick() { pathname !== ROUTES.HISTORY && handleRoute(ROUTES.HISTORY) }\n        },\n        {\n            icon: <QuestionAnswer/>,\n            text: 'Dúvidas e sugestões',\n            url: ROUTES.SUGGESTION,\n            show: true,\n            isActive: pathname.includes(ROUTES.SUGGESTION),\n            onClick() { pathname !== ROUTES.SUGGESTION && handleRoute(ROUTES.SUGGESTION) }\n        },\n        {\n            icon: <LocationOn/>,\n            text: 'Dispositivos',\n            url: ROUTES.DEVICES,\n            show: true,\n            isActive: pathname.includes(ROUTES.DEVICES),\n            onClick() { pathname !== ROUTES.DEVICES && handleRoute(ROUTES.DEVICES) }\n        },\n        {\n            icon: <Directions/>,\n            text: 'Linhas',\n            url: ROUTES.LINES,\n            show: true,\n            isActive: pathname.includes(ROUTES.LINES),\n            onClick() { pathname !== ROUTES.LINES && handleRoute(ROUTES.LINES) }\n        },\n        {\n            icon: <Drafts/>,\n            text: 'Notícias',\n            url: ROUTES.NEWS,\n            show: true,\n            isActive: pathname.includes(ROUTES.NEWS),\n            onClick() { pathname !== ROUTES.NEWS && handleRoute(ROUTES.NEWS) }\n        },\n    ]\n    function handleRoute(route) {\n        props.history.push(route)\n    }\n\n    function buildListItem() {\n        return items.map((item, index) => {\n            if (item.show) {\n                return (\n                    <ListItem key={index.toString()} onClick={item.onClick} className={clsx(classes.listItem, { [classes.activeRoute]: item.isActive })} >\n                        <ListItemIcon className={clsx(classes.icon, { [classes.iconActive]:item.isActive })}>\n                        { item.icon }\n                        </ListItemIcon>\n                        <ListItemText className={clsx(classes.listItemText, { [classes.listItemActive]: item.isActive })}>\n                        { item.text }\n                        </ListItemText>\n                    </ListItem>\n                )\n            }\n            return null\n        })\n    }\n\n    return (\n        <Drawer\n            variant=\"persistent\"\n            onClose={onClose}\n            className={classesLocal.drawer}\n            anchor=\"left\"\n            open={open}\n            classes={{\n            paper: classesLocal.drawerPaper,\n            }}\n        >\n            <Divider />\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.header} >\n                <h1>Logo</h1>\n                <Typography variant=\"h6\" >{ user.name }</Typography>\n                <span>{ user.email }</span>\n            </Grid>\n            <Divider />\n            <List className={classes.list}>\n                { buildListItem() }\n            </List>\n        </Drawer>\n    )\n\n}\n\nexport default withRouter(CustomDrawer)","import React, { useState } from 'react'\nimport createStyle from '../style/global'\nimport createStyleLocal from '../pages/home/style'\nimport { Menu, Close } from '@material-ui/icons'\nimport { Notifications, ExitToApp, ChevronRight } from '@material-ui/icons'\nimport {\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Badge,\n    Popover,\n    Grid,\n    List,\n    ListItemText,\n    ListItemSecondaryAction,\n    ListItem,\n    Divider\n} from '@material-ui/core'\nimport { EMPLOYEE_ROLE } from '../utils/constants'\nimport Drawer from './Drawer'\nimport clsx from 'clsx'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../utils/constants'\nimport { useSelector } from 'react-redux'\n\nconst CustomAppBar = props => {\n\n    const titles = {\n        [ROUTES.HOME]: 'Painel de controle',\n        [ROUTES.EMPLOYEES]: 'Funcionários',\n        [ROUTES.ACCOUNT]: 'Minha Conta',\n        [ROUTES.HISTORY]: 'Histórico',\n        [ROUTES.SUGGESTION]: 'Dúvidas e sugestões',\n        [ROUTES.DEVICES]: 'Dipositivos',\n        [ROUTES.ADD_DEVICES]: 'Adicionar dispositivo',\n        [ROUTES.LINES]: 'Linhas',\n        [ROUTES.ADD_LINES]: 'Adicionar linha',\n        [ROUTES.MAP]: 'Mapa',\n    }\n    const user = useSelector(state => state.home.user)\n    const classes = createStyle()\n    const classesLocal = createStyleLocal()\n    const [ open, setOpen ] = useState(false)\n    const [ openDrawer, setDrawer ] = useState(false)\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const size = props.usersNotAuthorized.length\n\n    const handleClose = () => setOpen(!open)\n    const handleDrawer = () => {\n        props.onDrawer(!openDrawer)\n        setDrawer(!openDrawer)\n    }\n\n    function handleClick(event) {\n        if (size) {\n            if (!open) {\n                setAnchorEl(event.currentTarget)\n            } else {\n                setAnchorEl(null)    \n            }\n            setOpen(!open)\n        }\n    }\n    function verifyNotification() {\n        if (size) {\n            return (\n                <Badge badgeContent={size} color=\"secondary\">\n                    <Notifications />\n                </Badge>\n            )\n        }\n        return <Notifications />\n    }\n\n    function buildItems() {\n        return props.usersNotAuthorized.map(user => {\n            return (\n                <React.Fragment key={user._id}>\n                    <ListItem onClick={() => {\n                        handleClose()\n                        props.onSelectedUser(user)\n                    }} button className={classesLocal.content}>\n                        <ListItemText primary={user.name} secondary={user.email} />\n                        <ListItemSecondaryAction>\n                            <ChevronRight />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider />\n                </React.Fragment>\n            )\n        })\n    }\n\n    return (\n        <>\n            <AppBar position=\"relative\" className={clsx(classesLocal.appBar, { [classesLocal.appBarShift]: openDrawer })}>\n                <Toolbar className={classesLocal.toolbar}>\n                    <IconButton\n                        onClick={handleDrawer}\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        aria-label=\"Open drawer\"\n                    >\n                    {\n                        openDrawer ? <Close /> : <Menu />\n                    }\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classesLocal.title}>\n                        { titles[props.location.pathname] || 'Painel de controle' }\n                    </Typography>\n                    {   (user && user.role === EMPLOYEE_ROLE.ADMIN) &&\n                        <IconButton onClick={handleClick}>\n                            { verifyNotification() }\n                        </IconButton>\n                    }\n                    <IconButton onClick={props.handleClose}>\n                        <ExitToApp />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n                }}\n                transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n                }}\n            >\n                <Grid className={classesLocal.popoverHeader}>\n                    <Typography variant=\"h5\">\n                        Solicitação de entrada\n                    </Typography>\n                </Grid>\n                <Grid>\n                    <List className={classesLocal.removePadding}>\n                        { buildItems() }\n                    </List>\n                </Grid>\n            </Popover>\n            <Drawer onClose={handleDrawer} open={openDrawer} />\n        </>\n    )\n}\n\nexport default withRouter(CustomAppBar)","import React, { useState, useEffect } from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n    Grid,\n    Typography,\n    makeStyles,\n    Checkbox,\n    CircularProgress\n} from '@material-ui/core'\nimport { EMPLOYEE_ROLE, USER_STATUS } from '../utils/constants'\nimport network from '../services/network'\nimport { useDispatch } from 'react-redux'\nimport { updateLoading as loadingGlobal } from '../redux/components/action'\n\nconst createStyle = makeStyles({\n    field: {\n        flex: 1\n    },\n    information: {\n        flex: 3\n    },\n    checkBox: {\n        paddingLeft: 0,\n        '&:hover': {\n            backgroundColor: 'transparent !important'\n        }\n    }\n})\n\nconst CustomDialog = props => {\n\n    const dispatch = useDispatch()\n    let { user } = props\n    if (!user) {\n        user = { name: '', email: '', cpf: '', role: EMPLOYEE_ROLE.COMMON }\n    }\n    const isAdmin = user.role === EMPLOYEE_ROLE.ADMIN\n    const styles = createStyle()\n    const [ value, setValue ] = useState()\n    const [ loading, setLoading ] = useState(false)\n    useEffect(() => {\n        setValue(isAdmin)\n        if (!props.open) {\n            setValue(false)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.open ])\n\n    function requestServer() {\n        const body = {\n            name: user.name,\n            cpf: user.cpf,\n            status: USER_STATUS.ENABLED,\n            email: user.email\n        }\n        if (value) {\n            body.role = EMPLOYEE_ROLE.ADMIN\n        } else {\n            body.role = EMPLOYEE_ROLE.COMMON\n        }\n        const callback = cb => {\n            cb()\n            setLoading(false)\n            dispatch(loadingGlobal(false))\n        }\n        setLoading(true)\n        dispatch(loadingGlobal(true))\n        network.patch('employee/edit', body)\n        .then(() => callback(props.success))\n        .catch(e => callback(props.error))\n    }\n\n    function handleLoading() {\n        if (loading) {\n            return <CircularProgress/>\n        } else {\n            return (\n            <Button onClick={requestServer} color=\"primary\">\n                Sim\n            </Button>\n            )\n        }\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            keepMounted\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Atenção</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    { props.message }\n                </DialogContentText>\n                <Grid container direction=\"row\" wrap=\"nowrap\">\n                    <Grid container className={styles.field}  ><Typography>Nome: </Typography></Grid>\n                    <Grid container className={styles.information} ><Typography >{ user.name }</Typography></Grid>\n                </Grid>\n                <Grid container direction=\"row\" wrap=\"nowrap\" >\n                    <Grid container className={styles.field} ><Typography>Cpf: </Typography></Grid>\n                    <Grid container className={styles.information} ><Typography >{ user.cpf }</Typography></Grid>\n                </Grid>\n                <Grid container direction=\"row\" wrap=\"nowrap\" >\n                    <Grid container className={styles.field} ><Typography>Email: </Typography></Grid>\n                    <Grid container className={styles.information} >\n                        <Typography >{ user.email }</Typography>\n                    </Grid>\n                </Grid>\n                <Grid container direction=\"row\" wrap=\"nowrap\" alignItems=\"center\" >\n                    <Grid>\n                        <Checkbox color=\"primary\" checked={value} onChange={event => setValue(event.target.checked)} className={styles.checkBox} />\n                    </Grid>\n                    <Grid>\n                        <Typography >{ props.messageCheckBox }</Typography>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.negativeAction} color=\"primary\">\n                    Não\n                </Button>\n                { handleLoading() }\n            </DialogActions>\n        </Dialog>\n    )\n\n\n}\n\nexport default CustomDialog","import React from 'react'\nimport { EMPLOYEE_ROLE, USER_STATUS } from '../utils/constants'\n\nexport const Status = ({ status }) => {\n    \n    function getMessage() {\n        if (status === USER_STATUS.PENDING) {\n            return 'Usuário pendente'\n        } else if (status === USER_STATUS.NOT_AUTHORIZED) {\n            return 'Não autorizado'\n        } else if (status === USER_STATUS.ENABLED) {\n            return 'Usuário habilitado'\n        }\n        return 'Desconhecido'\n    }\n    \n    return (\n        <p>{ getMessage() }</p>\n    )\n}\n\nexport const Role = ({ role }) => {\n    \n    function getMessage() {\n        if (role === EMPLOYEE_ROLE.ADMIN) {\n            return 'Administrador'\n        } else if (role === EMPLOYEE_ROLE.COMMON) {\n            return 'Comum'\n        }\n        return 'Desconhecido'\n    }\n    \n    return (\n        <p>{ getMessage() }</p>\n    )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { requestEmployees, removeEmployee } from '../../redux/employees/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    makeStyles,\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    Button,\n    TextField,\n    InputAdornment,\n    IconButton,\n} from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { Status, Role } from '../../components/status'\nimport { EMPLOYEE_ROLE } from '../../utils/constants'\nimport { Delete } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport Dialog from '../../components/dialog'\nimport CustomDialog from '../../components/CustomDialog'\n\nconst createStyle = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 32\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    input: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    }\n}))\n\nconst Employee = props => {\n\n    const classes = createStyle()\n\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestEmployees(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    const [ open, setOpen ] = useState(false)\n    const [ openCustomDialog, setOpenCustomDialog ] = useState(false)\n    const [ user, setUser ] = useState({ name: '', email: ''})\n    const isAdmin = props.user.role === EMPLOYEE_ROLE.ADMIN\n    useEffect(() => {\n        props.requestEmployees(props.page, props.data.limit, text, () => {\n            toast.error('Falha na comunicação com o servidor')\n        })\n\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    function requestServer(page = props.data.page) {\n        if (!props.isLoading) {\n            props.requestEmployees(page, props.data.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.data.total}\n                page={props.data.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.data.docs.map(employee => {\n            return (\n                <TableRow onClick={() => {\n                    if (isAdmin) {\n                        setUser(employee)\n                        setOpenCustomDialog(true)\n                    }\n                }} hover={isAdmin} key={employee._id}>\n                    <TableCell>{employee.name}</TableCell>\n                    <TableCell>{employee.email}</TableCell>\n                    <TableCell><Status status={employee.status} /></TableCell>\n                    <TableCell><Role role={employee.role} /></TableCell>\n                    {\n                        isAdmin &&\n                        <TableCell component=\"th\">\n                            <Button onClick={ev => {\n                                ev.stopPropagation()\n                                setOpen(true)\n                                setUser(employee)\n                            }} variant=\"outlined\" color=\"secondary\">\n                                Remover\n                                <Delete className={classes.rightIcon} />\n                            </Button>\n                        </TableCell>\n                    }\n                </TableRow>\n            )\n        })\n    }\n\n    function deleteUser() {\n        setOpen(false)\n        if (user.email) {\n            props.removeEmployee(user, () => {\n                toast.success('Usuário removido com sucesso', { autoClose: 2000 })\n                props.requestEmployees(props.data.page, props.data.limit)\n            }, () => toast.error('Falha ao deletar usuário'))\n        }\n    }\n    return (\n        <Grid className={classes.root}>\n            <TextField\n                onChange={ev => subject.next(ev.target.value)}\n                className={classes.input}\n                variant=\"outlined\"\n                label=\"Procurar\"\n                placeholder=\"Digite aqui para buscar\"\n                InputProps={{\n                    startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestEmployees(1, 10, text)}><Search /></IconButton></InputAdornment>\n                }}\n            />\n            <Paper className={classes.tableWrapper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell component=\"th\" >Nome</TableCell>\n                            <TableCell component=\"th\">Email</TableCell>\n                            <TableCell component=\"th\">Status</TableCell>\n                            <TableCell component=\"th\">Papel</TableCell>\n                            {\n                                isAdmin &&\n                                <TableCell component=\"th\">Remover</TableCell>\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { buildItems() }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow>\n                           { renderFooter() }\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n            <Dialog \n                open={open}\n                onClose={setOpen}\n                title=\"Atenção\"\n                message={`Deseja remover o usuário ${user.name}?`}\n                negativeButton=\"Não\"\n                positiveButton=\"Sim\"\n                negativeAction={() => setOpen(false)}\n                positiveAction={() => deleteUser()}\n            />\n            <CustomDialog\n                message=\"Deseja aleterar permissão desse usuário?\"\n                messageCheckBox=\"Administrador\"\n                success={() => {\n                    setOpenCustomDialog(false)\n                    requestServer()\n                    toast.success('Usuário editado', { autoClose: 2000 })\n                }}\n                error={() => {\n                    setOpenCustomDialog(false)\n                    toast.error('Falha editar usuário', { autoClose: 2000 })\n                }}\n                user={user}\n                open={openCustomDialog}\n                negativeAction={() => setOpenCustomDialog(false)}\n            />\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    data: state.employee.data,\n    isLoading: state.component.loading,\n    user: state.home.user,\n})\n\nexport default connect(mapStateToProps, { requestEmployees, removeEmployee })(Employee)","import React, { useState, useEffect } from 'react'\nimport { Paper, Grid, TextField, Button, Typography, Divider, makeStyles } from '@material-ui/core'\nimport InputMask from 'react-input-mask'\nimport {toast} from 'react-toastify'\nimport network from '../../services/network'\nimport { useDispatch } from 'react-redux'\nimport { updateLoading } from '../../redux/components/action'\nimport { handleUser } from '../../redux/home/actions'\n\nconst styles = makeStyles({\n    root: {\n        padding: 16\n    },\n    contentPadding: {\n        padding: 32,\n    },\n    content: {\n        width: '70%'\n    },\n    contentButton: {\n        margin: '16px 32px'\n    }\n})\n\nfunction Account(props) {\n\n    useEffect(() => {\n        network.get('employee/current')\n        .then(({data}) => setUser(data))\n        .catch(e => toast.error('Falha de comunicação com o servidor'))\n    }, [  ])\n    const dispatch = useDispatch()\n    const classes = styles()\n    const [ user, setUser ] = useState({\n        name: '',\n        email: '',\n        cpf: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const handleInput = target => event => {\n        setUser({ ...user, [target]: event.target.value })\n    }\n    const verifyUser = () => {\n        if (user) {\n            const { email, cpf, password, confirmPassword, name } = user\n            if (email && cpf && password && confirmPassword && name) {\n                return false\n            }\n            return true\n        }\n        return true\n    }\n\n    function editUser() {\n        if (user.password !== user.confirmPassword) {\n            toast.error('Senhas diferentes')\n        } else {\n            dispatch(updateLoading(true))\n            network.patch('employee/edit', user)\n            .then(({data}) => {\n                dispatch(updateLoading(false))\n                dispatch(handleUser(data.user))\n                toast.success('Conta editada com sucesso')\n            })\n            .catch(e => {\n                dispatch(updateLoading(false))\n                toast.error('Falha editar conta')\n            })\n        }\n    }\n\n    return (\n        <Grid className={classes.root} container justify=\"center\" alignItems=\"center\">\n            <Paper className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid className={classes.contentPadding}>\n                        <Typography variant=\"h5\">Perfil</Typography>\n                        <Typography variant=\"h6\">As informações podem ser editadas</Typography>\n                    </Grid>\n                    <Divider />\n                    <Grid className={classes.contentPadding} container direction=\"column\">\n                        <TextField\n                            onChange={handleInput('name')}\n                            label=\"Nome\"\n                            margin=\"normal\"\n                            placeholder=\"Informe email\"\n                            variant=\"outlined\"\n                            value={user.name}\n                            />\n                        <TextField\n                            label=\"Email\"\n                            margin=\"normal\"\n                            placeholder=\"Informe email\"\n                            variant=\"outlined\"\n                            value={user.email}\n                            disabled\n                            />\n                        <InputMask mask=\"999.999.999-99\" value={user.cpf} onChange={handleInput('cpf')}>\n                            {\n                                props => <TextField\n                                    {...props}\n                                    label=\"Cpf\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                />\n                            }\n                        </InputMask>\n                        <TextField\n                            onChange={handleInput('password')}\n                            label=\"Senha\"\n                            margin=\"normal\"\n                            type=\"password\"\n                            placeholder=\"Informe senha\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            onChange={handleInput('confirmPassword')}\n                            label=\"Confirme senha\"\n                            margin=\"normal\"\n                            type=\"password\"\n                            placeholder=\"Informe senha\"\n                            variant=\"outlined\"\n                            \n                        />\n                    </Grid>\n                    <Divider />\n                    <Grid className={classes.contentButton}>\n                        <Button onClick={editUser} disabled={verifyUser()} variant=\"contained\" color=\"primary\">\n                            Salvar\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    )\n\n}\n\nexport default Account","import React from 'react'\nimport storage from '../../services/storage'\nimport { EMPLOYEE_ROLE, ROUTES } from '../../utils/constants'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nexport default props => {\n\n    const REDIRECT_TO_LOGIN = 3\n    const REDIRECT_TO_MAP = 2\n    const RENDER_CHILDREN = 1\n\n    const user = useSelector(state => state.home.user)\n    \n    function getRedirectRoute() {\n        const storageUser = storage.getUser()\n        if (!storageUser) {\n            return REDIRECT_TO_LOGIN\n        }\n        if (props.onlyToken) {\n            return RENDER_CHILDREN\n        }\n        if ((!user.role && storageUser.role === EMPLOYEE_ROLE.ADMIN) ||\n            (user.role === EMPLOYEE_ROLE.ADMIN)) {\n            return RENDER_CHILDREN\n        }\n        return REDIRECT_TO_MAP\n    }\n\n    function handleRoute() {\n        const result = getRedirectRoute()\n        if (result === REDIRECT_TO_LOGIN) {\n            return <Redirect to={ROUTES.LOGIN} />\n        } else if (result === RENDER_CHILDREN) {\n            return props.children\n        } else {\n            return <Redirect to={ROUTES.MAP} />\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {handleRoute()}\n        </React.Fragment>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { requestHistories } from '../../redux/history/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    makeStyles,\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n} from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport Auth from '../auth/auth'\n\nconst createStyle = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 32\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    input: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    }\n}))\n\nconst History = props => {\n\n    const classes = createStyle()\n\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestHistories(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        props.requestHistories(props.page, props.limit, text, () => {\n            toast.error('Falha na comunicação com o servidor')\n        })\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestHistories(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(history => {\n            return (\n                <TableRow key={history._id}>\n                    <TableCell>{history.email}</TableCell>\n                    <TableCell>{history.reason}</TableCell>\n                    <TableCell>{new Date(history.createdAt).toLocaleString()}</TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Auth>\n            <Grid className={classes.root}>\n                <TextField\n                    onChange={ev => subject.next(ev.target.value)}\n                    className={classes.input}\n                    variant=\"outlined\"\n                    label=\"Procurar\"\n                    placeholder=\"Digite aqui para buscar, para data: yyyy-mm-dd\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestHistories(1, 10, text)}><Search /></IconButton></InputAdornment>\n                    }}\n                />\n                <Paper className={classes.tableWrapper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell component=\"th\" >Usuário</TableCell>\n                                <TableCell component=\"th\">Mensagem</TableCell>\n                                <TableCell component=\"th\">Criado em</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            { buildItems() }\n                        </TableBody>\n                        <TableFooter>\n                            <TableRow>\n                            { renderFooter() }\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </Paper>\n            </Grid>\n        </Auth>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.history,\n    isLoading: state.component.loading,\n})\n\nexport default connect(mapStateToProps, { requestHistories })(History)","import React from 'react'\nimport { compose, withProps } from 'recompose'\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps'\n\nexport default compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCfg6PgpQycYtUFaSRl336lsM8EDPmpmfI&v=3.exp&libraries=geometry,drawing,places&callback=initMap\",\n        center: { lat: -22.2295935, lng: -45.9434848 },\n        loadingElement: <div style={{ width: '100%' }} />,\n        containerElement: <div style={{ width: '100%' }} />,\n        mapElement: <div style={{ height: `100%`, width: '100%' }} />\n    }),\n    withScriptjs,\n    withGoogleMap\n)(HandleMap)\n\nfunction HandleMap(props) {\n\n    const { children, onClick } = props\n    \n    return (\n        <GoogleMap defaultZoom={15} onClick={ev => onClick && onClick(ev)} defaultCenter={props.center} >\n            { children && children }\n        </GoogleMap>\n    )\n}","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles({\n    filterBtn: {\n        position: 'absolute',\n        top: 20,\n        right: 20,\n        zIndex: 1\n    },\n    contentMap: {\n        position: 'relative'\n    }\n})","import React, { useEffect, useState } from 'react'\nimport { Grid, Drawer, Button, Typography } from '@material-ui/core'\nimport Maps from '../../components/Map'\nimport MarkerWithLabel from 'react-google-maps/lib/components/addons/MarkerWithLabel'\nimport { connect } from 'react-redux'\nimport { requestAllDevices, updateDevices, requestDeviceById } from '../../redux/devices/action'\nimport BUS from '../../assets/bus.png'\nimport createStyle from '../../style/global'\nimport createLocalStyle from './styles'\nimport { toast } from 'react-toastify'\nimport { Polyline } from 'react-google-maps'\n\nconst mapStateToProps = state => ({devices: state.device.devices, loading: state.component.loading, currentDevice: state.device.currentDevice})\n\nexport default connect(mapStateToProps, { requestAllDevices, updateDevices, requestDeviceById })(PageMaps)\n\nfunction PageMaps(props) {\n\n    const [ load, setLoad ] = useState(false)\n    const [ controller, setController ] = useState({ device: null, open: false, filter: false })\n    const classes = createStyle({ marginVertical: '16px' })\n    const classesLocal = createLocalStyle()\n\n    useEffect(() => {\n        window.initMap = () => setLoad(true)\n        if (load || window.google) {\n            props.requestAllDevices()\n        }\n        return () => props.updateDevices([])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ load ])\n\n    useEffect(() => {\n        if (props.currentDevice) {\n            setController({ device: props.currentDevice, open: false, filter: true })\n        }\n    }, [ props.currentDevice ])\n\n    function buildRoute() {\n        if (controller.filter && controller.device.line.directions) {\n            return <Polyline\n                path={controller.device.line.directions.routes}\n                geodesic={true}\n                options={{\n                    strokeColor: \"#ff2527\",\n                    strokeWeight: 3,\n                 }}\n            />\n        }\n    }\n\n    function buildPoints() {\n        if (controller.filter && controller.device.line.points) {\n            return controller.device.line.points.map((point, index) => {\n                return (\n                    <MarkerWithLabel\n                        key={index.toString()}\n                        position={point}\n                        labelAnchor={new window.google.maps.Point(0, 0)}\n                        labelStyle={point.name && {backgroundColor: \"#FFF\", fontSize: \"12px\", padding: \"8px\", borderRadius: '8px'}}\n                    >\n                        { point.name ? <div>{point.name}</div> : <div></div> }\n                    </MarkerWithLabel>\n                )\n            })\n        }\n    }\n\n    function buildMarker() {\n        const { google } = window\n        if (google) {\n            return props.devices\n            .filter(device => !(controller.filter && controller.device && controller.device._id !== device._id))\n            .map(device => {\n                const message = device.lineNumber ? `${device.lineNumber} - ${device.lineDescription}` : null\n                if (device.latitude && device.longitude) {\n                    return (\n                        <MarkerWithLabel\n                            onClick={() => setController({ ...controller, open: true, device })}\n                            key={device._id}\n                            icon={{\n                                url: BUS,\n                                scaledSize:  new google.maps.Size(50,50)\n                            }}\n                            position={{ lat: device.latitude, lng: device.longitude }}\n                            labelAnchor={new google.maps.Point(0, 0)}\n                            labelStyle={message && {backgroundColor: \"#FFF\", fontSize: \"12px\", padding: \"8px\", borderRadius: '8px'}}\n                        >\n                            { message ? <div>{message}</div> : <div></div> }\n                        </MarkerWithLabel>\n                    )\n                }\n                return null\n            })\n        }\n    }\n\n    function buildDrawer() {\n        if (controller.device) {\n            const message = controller.device.lineNumber ? `${controller.device.lineNumber} - ${controller.device.lineDescription}` : 'Sem linha associada'\n            return (\n                <Drawer open={controller.open} onClose={() => setController({...controller, open: false})} anchor=\"top\">\n                    <Grid className={classes.container} container direction=\"column\">\n                        <Typography className={classes.marginVertical} variant=\"h4\">{ controller.device.name }</Typography>\n                        <Typography variant=\"h5\">{ message }</Typography>\n                        <Grid>\n                            <Button onClick={() => {\n                                if (controller.device.line) {\n                                    props.requestDeviceById(controller.device._id, () => {\n                                        toast.error('Falha ao verificar rota')\n                                        setController({ device: null, filter: false, open: false })\n                                    })\n                                }\n                            }} className={classes.marginVertical} color=\"primary\" variant=\"outlined\">Visualizar linha</Button>\n                        </Grid>\n                    </Grid>\n                </Drawer>\n            )\n        }\n    }\n\n    return (\n      <Grid className={classesLocal.contentMap} container>\n        {controller.filter && (\n          <Button\n            onClick={() => setController({ device: null, filter: false, open: false })}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classesLocal.filterBtn}\n          >\n            Remover filtro\n          </Button>\n        )}\n        <Maps>\n          {buildMarker()}\n          {buildRoute()}\n          {buildPoints()}\n        </Maps>\n        {buildDrawer()}\n      </Grid>\n    );\n}","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(theme => ({\n    title: {\n        margin: 0,\n        fontWeight: 'normal',\n    },\n    contentTitle: {\n        display: 'flex',\n        margin: '5px 32px',\n        alignItems: 'center',\n        '& h3': {\n            marginLeft: 16,\n            marginTop: 3\n        }\n    },\n    contentTalk: {\n        maxHeight: 'calc(100vh - 65px)'\n    },\n    contentMessages: {\n        flex: 1,\n        overflowY: 'auto',\n    },\n    input: {\n        flex: 1,\n        alignItems: 'flex-start'\n    },\n    contentInputMessage: {\n        border: '1px solid #DFE3E8',\n        backgroundColor: '#FFF',\n        borderRadius: 2,\n        display: 'flex',\n        flex: 1,\n        padding: 5\n    },\n    icon: {\n        marginLeft: theme.spacing(1)\n    },\n    footer: {\n        flex: .3,\n        padding: 16\n    },\n    contentField: {\n        width: '100%',\n        minHeight: '20vh',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    contentButton: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    contentList: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        padding: '0px 32px 5px 32px'\n    },\n    card: {\n        boxShadow: '0 1px 15px rgba(0,0,0,.04), 0 1px 6px rgba(0,0,0,.04)',\n        borderRadius: 'calc(.15rem - 1px)',\n        border: 'initial',\n        backgroundColor: '#FFF',\n        padding: 16,\n        display: 'flex',\n        flexDirection: 'column',\n        width: 'max-content',\n        maxWidth: '70%'\n    },\n    cardMessage: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        '& p': {\n            margin: 0\n        }\n    },\n    contentCard: {\n        marginTop: 16,\n        width: '100%'\n    },\n    contentRight: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    date: {\n        marginLeft: '16px !important',\n        fontSize: '.6rem'\n    },\n    name: {\n        fontStyle: 'italic'\n    },\n    contentTime: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n","import React, { useEffect, useState, useRef } from 'react'\nimport { Grid, Input, Divider, Button, IconButton} from '@material-ui/core'\nimport { Send, Delete } from '@material-ui/icons'\nimport styles from './styles'\nimport { withRouter } from 'react-router-dom'\nimport { connect, useDispatch } from 'react-redux'\nimport { getSuggestionById, removeMessage } from '../../../redux/suggestion/action'\nimport { updateLoading } from '../../../redux/components/action'\nimport network from '../../../services/network'\nimport storage from '../../../services/storage'\nimport { toast } from 'react-toastify'\nimport clsx from 'clsx'\n\nconst mapStateToProps = state => ({ suggestion: state.suggestion.suggestion, user: state.home.user, loading: state.component.loading })\n\nexport default connect(\n    mapStateToProps,\n    { getSuggestionById, removeMessage }\n)(withRouter(function Talk(props) {\n\n    const { suggestion } = props\n    const { match: { params } } = props\n    const classes = styles()\n    const [ text, setText ] = useState('')\n    const dispatch = useDispatch()\n    const { entity } = storage.getUser()\n    const listRef = useRef(null)\n    useEffect(() => {\n        props.getSuggestionById(params.id, () => props.history.goBack())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(scrollBottom, [ suggestion ])\n    function buildItems() {\n        if (suggestion) {\n            return suggestion.messages.map((content, index) => {\n                return (\n                    <div key={index.toString()} className={clsx(classes.contentCard, { [classes.contentRight]: props.user._id === content.by._id })}>\n                        <div className={classes.card}>\n                            <div className={classes.cardMessage}>\n                                <p className={classes.name}>{ content.by.name }</p>\n                                <div className={classes.contentTime}>\n                                    <p className={classes.date}>{ new Date(content.createdAt).toLocaleString() }</p>\n                                    {\n                                        props.user._id === content.by._id &&\n                                        <IconButton onClick={() => removeMessage(content)}>\n                                            <Delete />\n                                        </IconButton>\n                                    }\n                                </div>\n                                \n                            </div>\n                            <div>\n                                <p>{ content.message }</p>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n        return null\n    }\n\n    function scrollBottom() {\n        const scrollHeight = listRef.current.scrollHeight;\n        const height = listRef.current.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        listRef.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n\n    async function createMessage() {\n        if (suggestion && entity) {\n            const body = {id: suggestion._id, data: { by: props.user._id, message: text, onModel: entity }}\n            dispatch(updateLoading(true))\n            try {\n                setText('')\n                await network.patch('suggestion', body)\n                props.getSuggestionById(params.id)\n            } catch {\n                dispatch(updateLoading(false))\n                toast.error('Falha ao enviar mensagem')\n            }\n        }\n    }\n\n    function removeMessage(message) {\n        if (!props.loading) {\n            props.removeMessage(\n                suggestion._id, \n                message._id,\n                () => props.getSuggestionById(params.id),\n                () => toast.error('Houve um erro ao remover mensagem', {autoClose: 3000})\n            )\n        }\n    }\n\n    return (\n        <Grid container direction=\"column\" wrap=\"nowrap\" className={classes.contentTalk}>\n            <Grid className={classes.contentMessages} container wrap=\"nowrap\" direction=\"column\">\n                <div className={classes.contentTitle}>\n                    <h2 className={classes.title}>Título: </h2>\n                    { suggestion && <h3 className={classes.title}>{ suggestion.title }</h3> }\n                </div>\n                <Divider />\n                <div ref={listRef} className={classes.contentList}>\n                    { buildItems() }\n                </div>\n            </Grid>\n            <Grid container className={classes.footer}>\n                <div className={classes.contentField}>\n                        <div className={classes.contentInputMessage}>\n                            <Input\n                                className={classes.input}\n                                placeholder=\"Responda aqui\"\n                                multiline\n                                maxLength=\"2\"\n                                disableUnderline={true}\n                                onChange={ev => setText(ev.target.value)}\n                                value={text}\n                            />\n                        </div>\n                        <div className={classes.contentButton}>\n                            <Button disabled={!text} onClick={createMessage}>\n                                Enviar\n                                <Send className={classes.icon} />\n                            </Button>\n                        </div>\n                    </div>\n            </Grid>\n        </Grid>\n    )\n}))\n","import React, { useEffect, useState } from 'react'\nimport { requestSuggestions } from '../../redux/suggestion/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    makeStyles,\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n} from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport Talk from './components/talk'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { ROUTES } from '../../utils/constants'\n\nconst createStyle = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    input: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    }\n}))\n\nconst Suggestion = props => {\n\n    const classes = createStyle()\n\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestSuggestions(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.SUGGESTION) {\n            props.requestSuggestions(props.page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestSuggestions(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(suggestion => {\n            return (\n                <TableRow onClick={() => props.history.push('/home/suggestion/' + suggestion._id)} hover key={suggestion._id}>\n                    <TableCell align=\"center\">{suggestion.name}</TableCell>\n                    <TableCell align=\"center\">{suggestion.title}</TableCell>\n                    <TableCell align=\"center\">{new Date(suggestion.createdAt).toLocaleString()}</TableCell>\n                    <TableCell align=\"center\">{suggestion.messages.length}</TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Grid container>\n            <Switch>\n                <Route exact path={ROUTES.SUGGESTION} render={() => {\n                    return (\n                        <Grid className={classes.root}>\n                            <TextField\n                                onChange={ev => subject.next(ev.target.value)}\n                                className={classes.input}\n                                variant=\"outlined\"\n                                label=\"Procurar\"\n                                placeholder=\"Digite aqui para buscar, para data: yyyy-mm-dd\"\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestSuggestions(1, 10, text)}><Search /></IconButton></InputAdornment>\n                                }}\n                            />\n                            <Paper className={classes.tableWrapper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\" component=\"th\" >Usuário</TableCell>\n                                            <TableCell align=\"center\" component=\"th\">Título</TableCell>\n                                            <TableCell align=\"center\" component=\"th\">Criado em</TableCell>\n                                            <TableCell align=\"center\" component=\"th\">Quantidade de mensagens</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        { buildItems() }\n                                    </TableBody>\n                                    <TableFooter>\n                                        <TableRow>\n                                        { renderFooter() }\n                                        </TableRow>\n                                    </TableFooter>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                    )\n                }} />\n                <Route exact path={ROUTES.SUGGESTION.concat('/:id')} render={() => <Talk />} />\n                <Redirect from=\"*\" to={ROUTES.HOME} />\n            </Switch>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.suggestion,\n    isLoading: state.component.loading,\n})\n\nexport default connect(mapStateToProps, { requestSuggestions })(Suggestion)","import { makeStyles, colors } from '@material-ui/core'\n\nexport default makeStyles(theme => ({\n    content: {\n        width: '100%',\n        '& h2': {\n            color: 'rgba(0,0,0,.38)'\n        }\n    },\n    padding: {\n        padding: 16,\n    },\n    margin: {\n        margin: 16,\n    },\n    input: {\n        width: '30%'\n    },\n    colorPositive: {\n        color: `${colors.green.A700} !important`\n    },\n    colorNegative: {\n        color: `${colors.red.A700} !important`\n    },\n    textResult: {\n        marginLeft: 16\n    },\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    inputSearch: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    },\n    fab: {\n        position: 'absolute !important',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        backgroundColor: '#3f51b5 !important',\n        color: '#FFF !important',\n        borderRadius: '50% !important'\n    }\n}))","import React, { useEffect, useState } from 'react'\nimport { requestDevices, removeDevice, updateDevice } from '../../../redux/devices/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Fab\n} from '@material-ui/core'\nimport { Search, Add } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../../../utils/constants'\nimport { compose } from 'recompose'\nimport MaterialTable from 'material-table'\nimport createStyle from './style'\n\nconst Devices = props => {\n\n    const classes = createStyle()\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestDevices(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.DEVICES) {\n            props.requestDevices(props.page, props.limit, text, null, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestDevices(page, props.limit, text, null, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    return (\n        <Grid container>\n            <Grid className={classes.root}>\n                    <TextField\n                        onChange={ev => subject.next(ev.target.value)}\n                        className={classes.inputSearch}\n                        variant=\"outlined\"\n                        label=\"Procurar\"\n                        placeholder=\"Digite aqui para filtrar na tabela\"\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestDevices(1, 10, text)}><Search /></IconButton></InputAdornment>\n                        }}\n                    />\n                    <Paper className={classes.tableWrapper}>\n                        <MaterialTable\n                                options={{\n                                 search: false,\n                                 actionsColumnIndex: -1\n                                }}\n                            localization={{\n                                    header: {\n                                        actions: 'Ações'\n                                    },\n                                    body: {\n                                        emptyDataSourceMessage: 'Nenhum dispositivo para mostrar',\n                                        filterRow: {\n                                            filterTooltip: 'Filtrar'\n                                        },\n                                        editRow: {\n                                            deleteText: 'Deseja remover esse dispositivo?'\n                                        }\n                                    },\n                                    toolbar: {\n                                        searchTooltip: 'Procurar',\n                                        searchPlaceholder: 'Digite aqui para buscar dispositivo'\n                                    }\n                                }}\n                            components={{\n                                Pagination: renderFooter\n                            }}\n                            columns={[\n                                { title: 'Nome', field: 'name' },\n                                { title: 'Identificador', field: 'uuid', editable: 'never' },\n                                { title: 'Linha', field: 'lineNumber', type: 'numeric', min: 0 },\n                                { title: 'Descrição da linha', field: 'lineDescription', editable: 'never' },\n                            ]}\n                            title=\"Dispositivos\"\n                            onRowClick={console.log}\n                            data={props.docs}\n                            editable={{\n                                onRowUpdate: (newData) =>\n                                    new Promise((resolve) => {\n                                        updateDevice(newData, () => {\n                                            props.requestDevices(props.page, props.limit, text, resolve, () => {\n                                                toast.error('Falha na comunicação com o servidor')\n                                            })\n                                            toast.success('Dispositivo editado com sucesso')\n                                        }, ({ response }) => {\n                                            resolve()\n                                            if (response && response.status === 404) {\n                                                toast.error('A linha para associação não foi encontrada')\n                                            } else {\n                                                toast.error('Falha ao editar dispositivo')\n                                            }\n                                        })\n                                    }),\n                                onRowDelete: oldData =>\n                                    new Promise((resolve) => {\n                                        props.removeDevice(oldData._id, () => {\n                                            toast.success('Dispositivo removido com sucesso')\n                                            props.requestDevices(props.page, props.limit, text, resolve, () => {\n                                                toast.error('Falha na comunicação com o servidor')\n                                            })\n                                        }, () => toast.error('Falha ao remover dispositivo'))\n                                    })\n                            }}\n                        />\n                     </Paper>\n                </Grid>\n                <Fab onClick={() => props.history.push(ROUTES.ADD_DEVICES)} className={classes.fab} color=\"primary\">\n                    <Add />\n                </Fab>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.device.data,\n    isLoading: state.component.loading,\n})\n\nexport default compose(\n    connect(mapStateToProps, { requestDevices, removeDevice }),\n    withRouter\n)(Devices)\n","import { connect } from 'mqtt'\n\nconst clientId = 'mqtt_rasp' + Math.random().toString(16).substr(2, 8)\n\nconst client = connect('ws://ec2-18-228-196-51.sa-east-1.compute.amazonaws.com:9001', { username: 'TCC', password: 'TCC', clientId })\n\nclient.on('connect', () => console.log('connected'))\nclient.on('reconnect', () => console.log('reconnect'))\nclient.on('disconnect', () => console.log('disconnected'))\nclient.on('error', (e) => console.log('error', e))\nclient.on('offline', () => console.log('offline'))\n\nexport default client","import React, { useState, useEffect } from 'react'\nimport { Grid, TextField, Fab } from '@material-ui/core'\nimport { updateLoading } from '../../../redux/components/action'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport clsx from 'clsx'\nimport client from '../../../services/mqtt'\nimport { timer } from 'rxjs'\nimport styles from './style'\n\nconst CONNECTED = 'Conectado'\nconst DISCONNECTED = 'Desconectado'\nconst CONNECTING = 'Conectando...'\nlet subscription\n\nexport default function(props) {\n    \n    const [ status, setStatus ] = useState('Status')\n    const [ device, setDevice ] = useState({ text: '', topic: '', latitude : '', longitude: '', time: '' })\n    const classes = styles()\n    const dispatch = useDispatch()\n    const loading = useSelector(state => state.component.loading)\n\n    useEffect(() => {\n        return () => {\n            client.removeListener('message', onMessage)\n            client.unsubscribe(device.topic)\n            dispatch(updateLoading(false))\n            if (subscription) {\n                subscription.unsubscribe()\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n   \n    function tryConnection() {\n        if (!loading) {\n            if (device) {\n                client.subscribe(device.topic)\n                client.publish(device.text.concat('/ping'), 'ping')\n                client.addListener('message', onMessage)\n                subscription = timer(10000).subscribe(() => {\n                    client.unsubscribe(device.topic)\n                    dispatch(updateLoading(false))\n                    setStatus(DISCONNECTED)\n                })\n                dispatch(updateLoading(true))\n                setStatus(CONNECTING)\n                \n            } else {\n                toast.info('Informe o identificador do dispositivo')\n            }\n        }\n    }\n\n    function onMessage(topic, message) {\n        if (topic === device.topic && message) {\n            \n            client.unsubscribe(device.topic)\n            dispatch(updateLoading(false))\n            setStatus(CONNECTED)\n            subscription.unsubscribe()\n            const payload = JSON.parse(message.toString())\n            if (payload) {\n                setDevice({...device,latitude:payload.lat, longitude:payload.lon, time:payload.time}) \n            }\n        }\n    }\n    return (\n        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" className={clsx(classes.padding, classes.content)}>\n            <h2 className={clsx({ [classes.colorPositive]: status === CONNECTED, [classes.colorNegative]: status === DISCONNECTED })}>{status}</h2>\n            <TextField\n                disabled={loading}\n                value={device.text}\n                onChange={ev => setDevice({...device, text: ev.target.value, topic: ev.target.value + '/pong'})}\n                className={classes.input}\n                variant=\"outlined\"\n                placeholder=\"Informe identificador do dispositivo\"\n                label=\"Dispositivo\"\n            />\n            <Grid>\n                <Fab className={classes.margin} color=\"primary\" variant=\"extended\" onClick={tryConnection}>\n                    Conectar\n                </Fab>\n                <Fab disabled={status !== CONNECTED} className={classes.margin} variant=\"extended\" onClick={() => props.finishProccess(device)}>\n                    Próximo passo\n                </Fab>\n            </Grid>\n        </Grid>\n    )\n}\n\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\n\nexport default function(props) {\n  const {\n      onClose,\n      value: valueProp,\n      open,\n      options,\n      title,\n      textCancel,\n      textConfirm,\n      ...other\n  } = props\n  const [value, setValue] = React.useState(valueProp)\n  const radioGroupRef = React.useRef(null)\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp)\n    }\n  }, [valueProp, open])\n\n  function handleEntering() {\n    if (radioGroupRef.current !== null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  function handleCancel() {\n    onClose()\n  }\n\n  function handleOk() {\n    onClose(value)\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">{title}</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"ringtone\"\n          name=\"ringtone\"\n          value={value || ''}\n          onChange={handleChange}\n        >\n          {options.map((option, index) => (\n            <FormControlLabel value={option._id} key={index.toString()} control={<Radio />} label={`${option.number || ''} - ${option.description}`} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"primary\">\n          { textCancel }\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          { textConfirm }\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useEffect } from 'react'\nimport styles from './style'\nimport { connect } from 'react-redux'\nimport DialogRadio from '../../../components/dialogRadio'\nimport { Grid, TextField, Fab, Button } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { updateName, openDialog, onClose, requestLines, clear, createDevice } from '../../../redux/devices/action'\nimport { toast } from 'react-toastify'\nimport { compose } from 'recompose'\nimport { withRouter } from 'react-router-dom'\n\nconst mapStateToProps = state => ({ ...state.device, loading: state.component.loading })\n\nexport default\ncompose(\n    connect( mapStateToProps, { updateName, openDialog, onClose, requestLines, clear, createDevice } ),\n    withRouter\n)(SecondStep)\n\n\nfunction SecondStep(props) {\n\n    const classes = styles()\n\n    useEffect(() => {\n        props.requestLines(() => toast.error('Falha na comunicação com o servidor'))\n        return props.clear\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    function save() {\n        const body = {\n            uuid: props.device.text,\n            name: props.name,\n            line: props.value,\n            latitude: props.device.latitude,\n            longitude: props.device.longitude\n        }\n        if (!body.uuid) {\n            toast.error('Identificador do dispositivo está vazio')\n            return\n        }\n        if (!body.line) {\n            toast.info('Falta escolher a linha para associação')\n            return\n        }\n        props.createDevice(body, () => {\n            toast.success('Dispositivo cadastrado com sucesso')\n            props.history.goBack()\n        }, ({response}) => {\n            if (response && response.status === 409) {\n                toast.error('Dispositivo já cadastrado')\n            } else {\n                toast.error('Falha ao cadastrar dispositivo')\n            }\n        })\n    }\n\n    function buildResult() {\n        if (props.value) {\n            const line = props.lines.find(li => li._id === props.value)\n            return <>{ line.number } - {line.description}</>\n        }\n    }\n\n    return (\n        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" className={clsx(classes.padding, classes.content)}>\n            <h2>Associar dispositivo com uma linha:</h2>\n            <TextField\n                value={props.name}\n                onChange={ev => props.updateName(ev.target.value)}\n                className={classes.input}\n                variant=\"outlined\"\n                placeholder=\"Informe um nome para o dispositivo\"\n                label=\"Nome\"\n            />\n            <Grid container wrap=\"nowrap\" justify=\"center\">\n                <p>Linha escolhida: </p>\n                <p className={classes.textResult}>{buildResult()}</p>\n            </Grid>\n            <Button\n                variant=\"outlined\"\n                disabled={props.loading}\n                onClick={() => props.lines.length ? props.openDialog(true) : toast.info('Nenhuma linha para associar')}>\n                Abrir opções\n            </Button>\n            <Grid>\n                <Fab disabled={props.loading} className={classes.margin} color=\"primary\" variant=\"extended\" onClick={save}>\n                    Salvar\n                </Fab>\n            </Grid>\n            <DialogRadio\n                open={props.open}\n                options={props.lines}\n                title=\"Atenção\"\n                textCancel=\"Cancelar\"\n                textConfirm=\"Ok\"\n                value={props.value}\n                onClose={props.onClose}\n            />\n        </Grid>\n    )\n\n}","import React, { useState } from 'react'\nimport { Grid, Stepper, Step, StepLabel } from '@material-ui/core'\nimport FirstStep from './firstStep'\nimport SecondStep from './secondStep'\nimport styles from './style'\n\nconst steps = [ 'Conectar no dispositivo', 'Associar com uma linha' ]\n\nexport default function AddDevice() {\n    \n    const [ controller, setController ] = useState({ step: 0, device: null })\n    const classes = styles()\n\n    return (\n        <Grid wrap=\"nowrap\" container>\n            <Grid container direction=\"column\" wrap=\"nowrap\" className={classes.content}>\n                <Stepper activeStep={controller.step}>\n                    {\n                        steps.map(label => {\n                            return (\n                                <Step key={label}>\n                                    <StepLabel>{ label }</StepLabel>\n                                </Step>\n                            )\n                        })\n                    }\n                </Stepper>\n                {\n                    controller.step === 0 && <FirstStep finishProccess={device => setController({ ...controller, step: 1, device })} />\n                }\n                {\n                    controller.step === 1 && <SecondStep device={controller.device} />\n                }\n            </Grid>\n        </Grid>\n    )\n}\n\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { ROUTES } from '../../utils/constants'\nimport DeviceList from './components/deviceList'\nimport AddDevice from './components/addDevice'\n\nexport default function(){\n\n    return (\n        <Switch>\n            <Route path={ROUTES.DEVICES} exact component={DeviceList} />\n            <Route path={ROUTES.ADD_DEVICES} exact component={AddDevice} />\n            <Redirect from=\"*\" to={ROUTES.DEVICES} />\n        </Switch>\n    )\n\n}","import React, { useState, useEffect } from 'react'\nimport {\n    Dialog,\n    IconButton,\n    Grid,\n    Paper,\n    Tabs,\n    Tab,\n    makeStyles,\n    Typography,\n    Slide,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableFooter,\n    TablePagination\n} from '@material-ui/core'\nimport { Close, StarRate } from '@material-ui/icons'\nimport network, { CancelToken } from '../../../services/network'\nimport { updateLoading } from '../../../redux/components/action'\nimport { useDispatch } from 'react-redux'\nimport { toast } from 'react-toastify'\n\nconst createStyle = makeStyles({\n    root: {\n        flexGrow: 1\n    },\n    icon: {\n        position: 'absolute',\n        left: 16,\n    },\n    contentTitle: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: 16\n    }\n})\n\nlet cancel\n\nconst TransitionSlide = React.forwardRef(function(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst Comments = props => {\n\n    const dispatch = useDispatch()\n    const classes = createStyle()\n    const [tab, setTab] = useState(4)\n    const [ comment, setComment ] = useState({ docs: [], page: 1, pages: 1, limit: 10, total: 0 })\n\n    useEffect(() => {\n        if (props.idLine) {\n            requestServer(comment.page, tab)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.idLine ])\n\n    function requestServer(page = comment.page, star = tab, error) {\n        dispatch(updateLoading(true))\n        if (cancel) {\n            cancel('cancelled')\n        }\n        network.get(`line/score/${props.idLine}?page=${page}&limit=${comment.limit}&star=${star + 1}`, {\n            cancelToken: new CancelToken(c => cancel = c)\n        })\n        .then(response => {\n            dispatch(updateLoading(false))\n            setComment({ ...comment, ...response.data })\n        })\n        .catch(e => {\n            if (e && e.message === 'cancelled') {\n                return\n            }\n            if (error) {\n                error()\n            }\n            dispatch(updateLoading(false))\n            toast.error('Falha de comunicação com o servidor')\n        })\n    }\n    function buildItems() {\n        return comment.docs.map((sc, index) => {\n            return (\n                <TableRow key={index.toString()}>\n                    <TableCell>{sc.user.name}</TableCell>\n                    <TableCell>{sc.description}</TableCell>\n                    <TableCell>{sc.line.number} - {sc.line.description}</TableCell>\n                    <TableCell><Grid container wrap=\"nowrap\">{buildStar(sc.star)}</Grid></TableCell>\n                    <TableCell>{new Date(sc.createdAt).toLocaleString()}</TableCell>\n                </TableRow>\n            )\n        })\n    }\n\n    function buildStar(star) {\n        const stars = []\n        for (let i = 0; i < star; i ++) {\n            stars[i] = <StarRate key={i.toString()} />\n        }\n        return stars\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={comment.total}\n                page={comment.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n    \n    return(\n        <Dialog open={props.open} fullScreen TransitionComponent={TransitionSlide} style={{backgroundColor: 'transparent'}}>\n            <div className={classes.contentTitle}>\n                <IconButton className={classes.icon} onClick={props.onClose}>\n                    <Close />\n                </IconButton>\n                <Typography variant=\"h4\">Comentários</Typography>\n            </div>\n            <Grid container direction=\"column\" wrap=\"nowrap\">\n                <Paper className={classes.root}>\n                    <Tabs indicatorColor=\"primary\" textColor=\"primary\" centered value={tab} onChange={(ev, value) => {\n                        const oldTab = tab\n                        setTab(value)\n                        requestServer(1, value, () => setTab(oldTab))\n                    }} aria-label=\"simple tabs example\">\n                    <Tab label=\"1 estrela\" />\n                    <Tab label=\"2 estrelas\"/>\n                    <Tab label=\"3 estrelas\" />\n                    <Tab label=\"4 estrelas\" />\n                    <Tab label=\"5 estrelas\" />\n                    </Tabs>\n                </Paper>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell component=\"th\" >Usuário</TableCell>\n                            <TableCell component=\"th\">Mensagem</TableCell>\n                            <TableCell component=\"th\">Linha</TableCell>\n                            <TableCell component=\"th\">Estrelas</TableCell>\n                            <TableCell component=\"th\">Criado em</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { buildItems() }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow>\n                        { renderFooter() }\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Grid>\n        </Dialog>\n    )\n}\n\nexport default Comments","import React, { useEffect, useState } from 'react'\nimport { requestLines, removeLine } from '../../../redux/lines/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    makeStyles,\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Button,\n    Fab\n} from '@material-ui/core'\nimport { Search, Delete, Add } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../../../utils/constants'\nimport { compose } from 'recompose'\n\nconst createStyle = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    input: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n    }\n}))\n\nconst Lines = props => {\n\n    const classes = createStyle()\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestLines(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.LINES) {\n            props.requestLines(props.page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestLines(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(line => {\n            return (\n                <TableRow onClick={() => props.history.push(ROUTES.ADD_LINES.concat(`/${line._id}`))} hover key={line._id}>\n                    <TableCell align=\"center\">{line.number}</TableCell>\n                    <TableCell align=\"center\">{line.description}</TableCell>\n                    <TableCell align=\"center\">\n                        <Button onClick={ev => {\n                            ev.stopPropagation()\n                            props.removeLine(line._id, () => {\n                                toast.success('Linha removida com sucesso')\n                                requestServer()\n                            }, () => toast.error('Falha ao remover linha'))\n                        }} color=\"secondary\">\n                            <Delete className={classes.rightIcon} />\n                            <span>Remover</span>\n                        </Button>\n                    </TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Grid container>\n            <Grid className={classes.root}>\n                    <TextField\n                        onChange={ev => subject.next(ev.target.value)}\n                        className={classes.input}\n                        variant=\"outlined\"\n                        label=\"Procurar\"\n                        placeholder=\"Digite aqui para buscar por número ou descrição\"\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestLines(1, 10, text)}><Search /></IconButton></InputAdornment>\n                        }}\n                    />\n                    <Paper className={classes.tableWrapper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\" component=\"th\" >Número</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Descrição</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Ação</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                { buildItems() }\n                            </TableBody>\n                            <TableFooter>\n                                <TableRow>\n                                { renderFooter() }\n                                </TableRow>\n                            </TableFooter>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <Fab onClick={() => props.history.push(ROUTES.ADD_LINES)} className={classes.fab} color=\"primary\">\n                    <Add />\n                </Fab>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.line.data,\n    isLoading: state.component.loading,\n})\n\nexport default compose(\n    connect(mapStateToProps, { requestLines, removeLine }),\n    withRouter\n)(Lines)\n","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles({\n    input: {\n        minWidth: '30vw',\n        marginLeft: 16\n    },\n    inputLine: {\n        marginLeft: 16\n    },\n    contentBlockMap: {\n        maxHeight: '80vh',\n        padding: '16px 0px'\n    },\n    contentFields: {\n        flex: .5,\n        display: 'block',\n        padding: 8,\n        overflowY: 'auto'\n    },\n    contentMap: {\n        flex: 1\n    },\n    addIconField: {\n        padding: '12px 0px'\n    },\n    iconRemove: {\n        '&:hover $iconHiddenRemove': {\n            visibility: 'visible !important'\n        }\n    },\n    iconHiddenRemove: {\n        visibility: 'hidden'\n    },\n    contentContainerMap: {\n        height: 'calc(80vh - 16px)'\n    },\n    buttonSave: {\n        marginLeft: 16,\n        '& svg': {\n            marginRight: 10\n        }\n    },\n    \n})","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function(props) {\n  return (\n    <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">{ props.title }</DialogTitle>\n    <DialogContent>\n        <DialogContentText>\n        { props.message }\n        </DialogContentText>\n        <TextField\n          autoFocus\n          onChange={ props.onChange }\n          margin=\"dense\"\n          label={ props.label }\n          fullWidth\n          value={props.text}\n        />\n    </DialogContent>\n    <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n            { props.textCancel }\n        </Button>\n        <Button onClick={props.onConfirm} color=\"primary\">\n            { props.textButton }\n        </Button>\n    </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Grid, TextField, IconButton, InputAdornment, Paper, Button } from '@material-ui/core'\nimport globalStyle from '../../../style/global'\nimport { Clear, AddCircle, Search, Save } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport Maps from '../../../components/Map'\nimport { DirectionsRenderer, Marker, OverlayView } from 'react-google-maps'\nimport { toast } from 'react-toastify'\nimport localStyles from '../styles'\nimport DialogInput from '../../../components/dialogInput'\nimport { connect } from 'react-redux'\nimport { createLine, getLineById, editLine } from '../../../redux/lines/action'\n\nconst AddLine = props => {\n\n    const classes = globalStyle()\n    const styles = localStyles()\n    const refDirections = useRef(null)\n    const { id } = props.match.params\n    const [ directions, setDirections ] = useState()\n    const [ information, setInformation ] = useState({ line: '', description: '', errorLine: '', errorDescription: '' })\n    const [ routes, setRoutes ] = useState([ { route: '' }, { route: '' } ])\n    const [ markers, setMarkers ] = useState([])\n    const [ dialog, setDialog ] = useState({ index: null, text: '', open: false })\n    const [ load, setLoad ] = useState(false)\n\n    useEffect(() => {\n        window.initMap = () => setLoad(true)\n        if (id) {\n            props.getLineById(id, () => {\n                toast.error('Falha ao buscar dados da linha, tente novamente')\n                props.history.goBack()\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ ])\n\n    useEffect(() => {\n        if (props.line && Object.keys(props.line).length && window.google) {\n            setRoutes([ ...props.line.routes ])\n            setMarkers([ ...props.line.points ])\n            const { google } = window\n            const DirectionService = new google.maps.DirectionsService()\n            const routes = []\n            routes.push(props.line.directions.request.origin)\n            routes.push(...props.line.directions.request.waypoints)\n            routes.push(props.line.directions.request.destination)\n            const origin = routes[0]\n            const destination = routes[routes.length - 1]\n            const options = {\n                origin: filterRoute(origin),\n                destination: filterRoute(destination),\n                waypoints: routes.filter((_, index) => index !== 0 && index !== routes.length - 1)\n                .map(filterRoute),\n                optimizeWaypoints: true,\n                travelMode: google.maps.TravelMode.DRIVING,\n                avoidTolls: true\n            }\n            DirectionService.route(options, (result, status) => {\n                if (status === google.maps.DirectionsStatus.OK) {\n                    setDirections({ ...directions, ...result })\n                } else if (status === google.maps.DirectionsStatus.NOT_FOUND) {\n                    toast.error('Rota não encontrada, verifique os caminhos inseridos')\n                } else {\n                    toast.error('Falha ao requisitar rota')\n                }\n            })\n            setInformation({ line: props.line.number, description: props.line.description })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.line, load ])\n\n    function filterRoute(route) {\n        const { google } = window\n        if ('location' in route) {\n            return route\n        } else if ('query' in route) {\n            return route.query\n        }\n        return new google.maps.LatLng(route.lat, route.lng)\n    }\n\n    function buildInputRoutes() {\n        return routes.map((content, index) => {\n            return (\n                <Grid alignItems=\"center\" className={clsx(styles.addIconField, { [styles.iconRemove]: routes.length > 2 })} container key={index.toString()} wrap=\"nowrap\">\n                    <TextField\n                        className={classes.maxWidth}\n                        value={content.route}\n                        onChange={ev => {\n                            const value = ev.target.value\n                            setRoutes(old => {\n                                const newRoutes = [...old]\n                                newRoutes[index].route = value\n                                return newRoutes\n                            })\n                        }}\n                        placeholder={index === 0 ? 'Informe início da rota' : index === routes.length - 1 ? \"Informe destino final\" : 'Informe caminho'}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton onClick={buildRoutes} edge=\"end\">\n                                        <Search />\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <IconButton onClick={() => {\n                        setRoutes([...routes.filter((_, i) => index !== i)])\n                    }} className={styles.iconHiddenRemove}><Clear /></IconButton>\n                </Grid>\n            )\n        })\n    }\n\n    function buildRoutes() {\n        if (!routes.every(content => !!content.route)) {\n            toast.error('Existe campo de rota sem preenchimento')\n        } else {\n            const { google } = window\n            const DirectionService = new google.maps.DirectionsService()\n            const options = {\n                origin: routes[0].route,\n                destination: routes[routes.length - 1].route,\n                waypoints: routes.filter((_, index) => index !== 0 && index !== routes.length - 1).map(content => ({location: content.route, stopover: true})),\n                optimizeWaypoints: true,\n                travelMode: google.maps.TravelMode.DRIVING,\n                avoidTolls: true\n            }\n            DirectionService.route(options, (result, status) => {\n                if (status === google.maps.DirectionsStatus.OK) {\n                    setDirections({ ...directions, ...result })\n                } else if (status === google.maps.DirectionsStatus.NOT_FOUND) {\n                    toast.error('Rota não encontrada, verifique os caminhos inseridos')\n                } else {\n                    toast.error('Falha ao requisitar rota')\n                }\n            })\n        }\n    }\n\n    function validateForms() {\n        let formOk = true\n        const info = { ...information }\n        if (!props.loading) {\n            if (!info.line) {\n                info.errorLine = 'Campo vazio'\n                formOk = false\n            }\n            if (!info.description) {\n                info.errorDescription = 'Campo vazio'\n                formOk = false\n            }\n            if (!formOk) {\n                setInformation(info)\n                return\n            } else {\n                saveLine()\n            }\n        }\n    }\n\n    function saveLine() {\n        if (refDirections.current) {\n            const directions = refDirections.current.getDirections()\n            const body = {\n                number: information.line,\n                description: information.description,\n                routes,\n                directions: {\n                    request: directions.request,\n                    routes: directions.routes[0].overview_path\n                },\n                points: markers\n            }\n            const callbackError = message => ({ response }) => {\n                if (response && response.status === 409) {\n                    toast.error('Já existe uma linha cadastrada com esse número')\n                } else {\n                    toast.error(message)\n                }\n            }\n            if (id) {\n                body._id = props.line._id\n                props.editLine(body, () => {\n                    toast.success('Linha editada com sucesso')\n                    props.history.goBack()\n                }, callbackError('Falha ao editar linha'))\n            } else {\n                props.createLine(body, () => {\n                    toast.success('Linha cadastrada com sucesso')\n                    props.history.goBack()\n                }, callbackError('Falha ao criar linha'))\n            }\n        } else {\n            toast.info('Busque pela rota adicionada para renderizar no mapa')\n        }\n    }\n\n    function onConfirm() {\n        if (!dialog.text) {\n            toast.info('Informe o nome do marcador')\n        } else {\n            if (dialog.index !== null) {\n                setMarkers(old => {\n                    const newMarkers = [...old]\n                    newMarkers[dialog.index].name = dialog.text\n                    return newMarkers\n                })\n            }\n            setDialog({ ...dialog, text: '', open: false, index: null })\n        }\n    }\n\n    function buildMarkers() {\n        const callbackCloseOverlay = index => _ => {\n            setMarkers(old => {\n                const newMarkers = [...old]\n                newMarkers[index].showOverlayView = !newMarkers[index].showOverlayView\n                return newMarkers\n            })\n         }\n        return markers.map((marker, index) => {\n            return (\n                <React.Fragment key={index.toString()}>\n                    <Marker onClick={callbackCloseOverlay(index)} title={marker.name} clickable={true} draggable={true} position={{ lat: marker.lat, lng: marker.lng }} />\n                    {\n                        marker.showOverlayView &&\n                        <OverlayView mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}  position={{ lat: marker.lat, lng: marker.lng }}>\n                            <Paper className={classes.container}>\n                                <Grid container direction=\"column\">\n                                    <h4>Nome do ponto: {marker.name}</h4>\n                                    <Button onClick={callbackCloseOverlay(index)}>Fechar</Button>\n                                    <Button onClick={() => {\n                                        setDialog({ ...dialog, index, text: marker.name, open: true })\n                                        callbackCloseOverlay(index)()\n                                    }}>Editar</Button>\n                                    <Button onClick={() => setMarkers([ ...markers.filter((_, i) => index !== i) ])}>Remover</Button>\n                                </Grid>\n                            </Paper>\n                        </OverlayView>\n\n                    }\n                </React.Fragment>\n            )\n        })\n    }\n    return (\n        <Grid container className={classes.container} wrap=\"nowrap\" direction=\"column\">\n            <Grid alignItems=\"center\" container>\n                <h2>Informação: </h2>\n                <TextField\n                    className={styles.inputLine}\n                    value={information.line}\n                    onChange={ev => setInformation({ ...information, line: ev.target.value, errorLine: '' })}\n                    variant=\"outlined\"\n                    type=\"number\"\n                    label=\"Linha\"\n                    InputProps={{inputProps:{min: 0}}}\n                    placeholder=\"Número da linha\"\n                    error={!!information.errorLine}\n                    helperText={information.errorLine}\n                />\n                <TextField\n                    value={information.description}\n                    onChange={ev => setInformation({ ...information, description: ev.target.value, errorDescription: '' })}\n                    className={styles.input}\n                    variant=\"outlined\"\n                    label=\"Descrição\"\n                    placeholder=\"Informe a descrição\"\n                    error={!!information.errorDescription}\n                    helperText={information.errorDescription}\n                />\n                <Button onClick={validateForms} variant=\"contained\" className={styles.buttonSave} color=\"primary\">\n                    <Save />\n                    <span>SALVAR</span>\n                </Button>\n            </Grid>\n            <Grid className={styles.contentBlockMap} container>\n                <Paper className={classes.maxWidth}>\n                    <Grid container wrap=\"nowrap\" className={styles.contentContainerMap}>\n                        <Grid className={styles.contentFields} container>\n                            { buildInputRoutes() }\n                            <IconButton className={styles.addIconField} onClick={() => setRoutes([...routes, { route: '' }])}>\n                                <AddCircle />\n                            </IconButton>\n                        </Grid>\n                        <Grid className={styles.contentMap} container>\n                            <Maps onClick={({latLng}) => {\n                                if (!markers.some(marker => marker.showOverlayView)) {\n                                    setMarkers([ ...markers, { lat: latLng.lat(), lng: latLng.lng(), showOverlayView: false, name: '' } ])\n                                    setDialog({ ...dialog, index: markers.length, open: true })\n                                }\n                            }}>\n                                { directions && <DirectionsRenderer ref={refDirections} options={{draggable: true}} directions={directions} /> }\n                                { buildMarkers() }\n                            </Maps>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n            <DialogInput\n                open={dialog.open}\n                title=\"Atenção\"\n                message=\"Informe o nome do marcador\"\n                label=\"Nome\"\n                onChange={ev => setDialog({ ...dialog, text: ev.target.value })}\n                onConfirm={onConfirm}\n                textButton=\"Salvar\"\n                text={dialog.text}\n                textCancel=\"Cancelar\"\n                onCancel={() => setDialog({ ...dialog, text: '', index: null, open: false })}\n            />\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({ loading: state.component.loading, line: state.line.lineEdited })\n\nexport default connect(mapStateToProps, { createLine, getLineById, editLine })(AddLine)","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport List from './components/list'\nimport Add from './components/add'\nimport { ROUTES } from '../../utils/constants'\n\nexport default () => {\n    return (\n        <Switch>\n            <Route path={ROUTES.LINES} exact component={List} />\n            <Route path={ROUTES.ADD_LINES} exact component={Add} />\n            <Route path={ROUTES.ADD_LINES.concat('/:id')} exact component={Add} />\n            <Redirect from=\"*\" to={ROUTES.LINES} />\n        </Switch>\n    )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(theme => ({\n    input: {\n        minWidth: '30vw',\n        marginLeft: 16\n    },\n    inputLine: {\n        marginLeft: 16\n    },\n    contentBlockMap: {\n        maxHeight: '80vh',\n        padding: '16px 0px'\n    },\n    contentFields: {\n        flex: .5,\n        display: 'block',\n        padding: 8,\n        overflowY: 'auto'\n    },\n    contentMap: {\n        flex: 1\n    },\n    addIconField: {\n        padding: '12px 0px'\n    },\n    iconRemove: {\n        '&:hover $iconHiddenRemove': {\n            visibility: 'visible !important'\n        }\n    },\n    iconHiddenRemove: {\n        visibility: 'hidden'\n    },\n    contentContainerMap: {\n        height: 'calc(80vh - 16px)'\n    },\n    buttonSave: {\n        marginLeft: 16,\n        '& svg': {\n            marginRight: 10\n        }\n    },\n    inputRegisterNews: {\n        width: '50vw',\n        marginTop: 16\n    },\n    textMessage: {\n        margin: '16px 0px'\n    },\n    root: {\n        width: '100%',\n        padding: 32,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n        marginTop: 32,\n        width: '100%'\n    },\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    inputSearch: {\n        minWidth: '50%'\n    },\n    tableCellFooter: {\n        paddingRight: '32px !important'\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n    }\n}))","import React, { useEffect, useState } from 'react'\nimport { requestNews, removeNews } from '../../../redux/news/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n    Table,\n    TableRow,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Grid,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Button,\n    Fab\n} from '@material-ui/core'\nimport { Search, Delete, Add } from '@material-ui/icons'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport { withRouter } from 'react-router-dom'\nimport { ROUTES } from '../../../utils/constants'\nimport { compose } from 'recompose'\nimport createStyle from '../styles'\nimport parser from 'html-react-parser'\n\nconst News = props => {\n\n    const classes = createStyle()\n    const subject = new Subject()\n    subject\n    .pipe(debounceTime(300))\n    .subscribe(value => {\n        setText(value)\n        props.requestNews(1, 10, value)\n    })\n    \n    const [ text, setText ] = useState('')\n    useEffect(() => {\n        if (props.location.pathname === ROUTES.NEWS) {\n            props.requestNews(props.page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n        }\n        return () => subject.complete()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.location.pathname ])\n    function requestServer(page = props.page) {\n        if (!props.isLoading) {\n            props.requestNews(page, props.limit, text, () => {\n                toast.error('Falha na comunicação com o servidor')\n            })\n\n        }\n    }\n\n    function renderFooter() {\n        return (\n            <TablePagination\n                labelDisplayedRows={({from, to, count}) => `${from}-${to} de ${count}`}\n                rowsPerPage={10}\n                rowsPerPageOptions={[]}\n                count={props.total}\n                page={props.page - 1}\n                onChangePage={(_, page) => {\n                    const newPage = page + 1\n                    requestServer(newPage)\n                }}\n            />\n        )\n    }\n\n    function buildItems() {\n        return props.docs.map(news => {\n            return (\n                <TableRow onClick={() => props.history.push(ROUTES.ADD_NEWS.concat(`/${news._id}`))} hover key={news._id}>\n                    <TableCell>{news.author ? news.author.name : ''}</TableCell>\n                    <TableCell>{news.title}</TableCell>\n                    <TableCell>{parser(news.message)}</TableCell>\n                    <TableCell>{new Date(news.createdAt).toLocaleString()}</TableCell>\n                    <TableCell>\n                        <Button onClick={ev => {\n                            ev.stopPropagation()\n                            props.removeNews(news._id, () => {\n                                toast.success('Notícia removida com sucesso')\n                                requestServer()\n                            }, () => toast.error('Falha ao remover notícia'))\n                        }} color=\"secondary\">\n                            <Delete className={classes.rightIcon} />\n                            <span>Remover</span>\n                        </Button>\n                    </TableCell>\n                </TableRow>\n            )\n        })\n    }\n    return (\n        <Grid container>\n            <Grid className={classes.root}>\n                    <TextField\n                        onChange={ev => subject.next(ev.target.value)}\n                        className={classes.inputSearch}\n                        variant=\"outlined\"\n                        label=\"Procurar\"\n                        placeholder=\"Digite aqui para filtrar\"\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\"><IconButton onClick={() => props.requestNews(1, 10, text)}><Search /></IconButton></InputAdornment>\n                        }}\n                    />\n                    <Paper className={classes.tableWrapper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\" component=\"th\" >Autor</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Título</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Mensagem</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Criado em</TableCell>\n                                    <TableCell align=\"center\" component=\"th\">Ação</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                { buildItems() }\n                            </TableBody>\n                            <TableFooter>\n                                <TableRow>\n                                { renderFooter() }\n                                </TableRow>\n                            </TableFooter>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <Fab onClick={() => props.history.push(ROUTES.ADD_NEWS)} className={classes.fab} color=\"primary\">\n                    <Add />\n                </Fab>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.news.data,\n    isLoading: state.component.loading,\n})\n\nexport default compose(\n    connect(mapStateToProps, { requestNews, removeNews }),\n    withRouter\n)(News)\n","import React, { useState, useEffect } from 'react'\nimport { Grid, TextField, Typography, Fab } from '@material-ui/core'\nimport createStyle from '../../../style/global'\nimport createLocalStyle from '../styles'\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html'\nimport htmlToDraft from 'html-to-draftjs'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { createNews, editNews, getNewsById, clearNewsEdit } from '../../../redux/news/action'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\n\nconst AddNews = props => {\n\n    const classes = createStyle()\n    const localClasses = createLocalStyle()\n    const [ editorState, setEditorState ] = useState(EditorState.createEmpty())\n    const [ title, setTitle ] = useState('')\n    const { id } = props.match.params\n\n    useEffect(() => {\n        if (id) {\n            props.getNewsById(id, () => toast.error('Falha na comunicação com o servidor, tente novamente'))\n        }\n        return () => props.clearNewsEdit()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    useEffect(() => {\n        if (props.newsEdit) {\n            const { message, title } = props.newsEdit\n            setTitle(title)\n            const blocksFromHtml = htmlToDraft(message)\n            const { contentBlocks, entityMap } = blocksFromHtml\n            const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap)\n            setEditorState(EditorState.createWithContent(contentState))\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ props.newsEdit ])\n\n    function saveNews() {\n        const message = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        if (title && message) {\n            const body = {\n                title,\n                message, \n                author: props.user._id,\n            }\n            const callbackSuccess = message => () => {\n                toast.success(message)\n                props.history.goBack()\n            }\n            const callbackError = message => () => toast.error(message)\n            if (id) {\n                body._id = id\n                props.editNews(body, callbackSuccess('Notícia editada com sucesso'), callbackError('Falha ao editar notícia'))\n            } else {\n                props.createNews(body, callbackSuccess('Notícia registrada com sucesso'), callbackError('Falha ao registrar notícia'))\n            }\n        } else\n            toast.info('Verifique os campos')\n    }\n\n    return(\n        <Grid className={classes.container} container direction=\"column\" wrap=\"nowrap\">\n            <Typography variant=\"h4\">Notícia:</Typography>\n            <TextField\n                value={title}\n                onChange={ev => setTitle(ev.target.value)}\n                className={localClasses.inputRegisterNews}\n                placeholder=\"Informe título\"\n                label=\"Título\"\n                inputProps={{\n                    maxLength: 100\n                }}\n            />\n            <Typography className={localClasses.textMessage} variant=\"h5\">Mensagem:</Typography>\n            <Grid style={{backgroundColor: '#FFF', minHeight: 400}}>\n                <Editor editorClassName=\"editor\" editorState={editorState} onEditorStateChange={state => setEditorState(state)} />\n            </Grid>\n            <Fab onClick={saveNews} variant=\"extended\" color=\"primary\" className={localClasses.fab}>\n                <span>Salvar</span>\n            </Fab>\n        </Grid>\n    )\n\n}\n\nconst mapStateToProps = state => ({ newsEdit: state.news.newsEdit, user: state.home.user })\n\nexport default connect(mapStateToProps, { createNews, editNews, getNewsById, clearNewsEdit })(AddNews)","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport List from './components/list'\nimport Add from './components/add'\nimport { ROUTES } from '../../utils/constants'\n\nexport default () => {\n    return (\n        <Switch>\n            <Route path={ROUTES.NEWS} exact component={List} />\n            <Route path={ROUTES.ADD_NEWS} exact component={Add} />\n            <Route path={ROUTES.ADD_NEWS.concat('/:id')} exact component={Add} />\n            <Redirect from=\"*\" to={ROUTES.NEWS} />\n        </Switch>\n    )\n}\n","import React from 'react'\nimport { LinearProgress } from '@material-ui/core'\nimport createStyle from '../style/global'\nimport { useSelector } from 'react-redux'\n\nexport default function(){\n    \n    const classes = createStyle()\n    const loading = useSelector(state => state.component.loading)\n    if (!loading) {\n        return <div></div>\n    }\n    return (\n        <LinearProgress color=\"primary\" className={classes.linearProgress} />\n    )\n}\n","import React from 'react'\nimport createStyleLocal from '../style' \nimport { Paper, Typography, Icon, Grid, IconButton } from '@material-ui/core'\nimport Skeleton from 'react-loading-skeleton'\nimport { Replay } from '@material-ui/icons'\n\nconst Card = props => {\n\n    const { title, content, icon, isLoading, error, buttonError, styleIcon, textColors, styleCard } = props\n    const classesLocal = createStyleLocal()\n    const checkLoading = () => {\n        if (isLoading) {\n            return <Skeleton circle={true} height={50} width={50} />\n        } else if (error) {\n            return (\n                <div>\n                    <IconButton onClick={buttonError} >\n                        <Replay style={textColors && {color: textColors}} />\n                    </IconButton>\n                </div>\n            )\n        }\n        return <Typography style={textColors && {color: textColors}} className={classesLocal.result} variant=\"h4\">{content}</Typography>\n    }\n\n    return (\n        <Grid className={classesLocal.card} item xs={12} sm={4} md={4} lg={3} xl={3}>\n            <Paper style={styleCard} className={classesLocal.paper}>\n                <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\n                    <Grid className={classesLocal.contentInformation} item container direction=\"column\">\n                        <p style={textColors && {color: textColors}}>{title}</p>\n                        { checkLoading() }\n                    </Grid>\n                    <Grid className={classesLocal.contentIcon} container>\n                        <Icon className={classesLocal.icon} style={styleIcon}>{icon}</Icon>\n                    </Grid>\n                </Grid>                      \n            </Paper>\n        </Grid>\n    )\n\n}\n\nexport default Card","import React, { useEffect, useState } from 'react'\nimport { Grid, Paper, Divider, Typography, Button, IconButton } from '@material-ui/core'\nimport { Replay } from '@material-ui/icons'\nimport createStyle from '../../../style/global'\nimport { Doughnut } from 'react-chartjs-2'\nimport DialogRadio from '../../../components/dialogRadio'\nimport { connect } from 'react-redux'\nimport { requestScore } from '../../../redux/home/actions'\nimport { requestLines } from '../../../redux/devices/action'\nimport { toast } from 'react-toastify'\nimport Skeleton from 'react-loading-skeleton'\nimport Comments from './Comments'\n\nfunction InformationLine(props) {\n\n    const DEFAULT_VALUE = { _id: 'all', description: 'Todas as linhas', number: null }\n    const classes = createStyle()\n    const [ open, setOpenDialog ] = useState(false)\n    const [ comments, setComments ] = useState({ open: false, id: '' })\n    const [ value, setValueFilter ] = useState(DEFAULT_VALUE)\n\n    useEffect(() => {\n      props.requestLines()\n      props.requestScore()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [  ])\n\n    function onClose(id) {\n      setOpenDialog(false)\n      if (id) {\n        getScore(id)\n      }\n    }\n\n    function getScore(id) {\n      props.requestScore(\n        id || DEFAULT_VALUE._id,\n        setValueFilter({ ...value, ...(props.lines.find(line => line._id === id) || DEFAULT_VALUE) }),\n        () => toast.error('Falha ao fazer filtragem'))\n    }\n\n    function loadChart() {\n      if (props.errorToLoadScore) {\n        return (\n          <IconButton onClick={() => getScore()}>\n              <Replay />\n          </IconButton>\n        )\n      } else if (props.isLoadingScore) {\n        return <Skeleton height={200} width={400} />\n      } else if (props.score.every(value => !value)) {\n        return <Typography variant=\"h5\">Sem registro de score</Typography>\n      } else {\n        return (\n          <Grid container item sm={5}>\n              <Doughnut\n                data={{\n                datasets: [{\n                    data: props.score,\n                    backgroundColor: [\n                    '#FF6384',\n                    '#36A2EB',\n                    '#FFCE56',\n                    '#56ff5e',\n                    '#6756ff'\n                    ]\n                }],\n                labels: [ '1 estrela', '2 estrelas', '3 estrelas', '4 estrelas', '5 estrelas' ]\n             }}\n            />\n          </Grid>\n        )\n      }\n    }\n    const lines = [ DEFAULT_VALUE, ...props.lines ]\n    return (\n      <Grid item className={classes.container}>\n        <Paper>\n          <Grid\n            justify=\"space-between\"\n            alignItems=\"center\"\n            container\n            wrap=\"nowrap\"\n            className={classes.container}\n          >\n            <Typography variant=\"h5\">Pontuação das linhas</Typography>\n            <Grid>\n              { (value._id !== 'all' && props.score.some(value => value)) &&\n              <Button color=\"primary\" variant=\"outlined\" onClick={() => setComments({ open: true, id: value._id })}>Ver comentários</Button>}\n              <Button onClick={() => setOpenDialog(true)}>Filtro: {value.number} - {value.description}</Button>\n              <IconButton onClick={() => getScore()}>\n                <Replay />\n              </IconButton>\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid container justify=\"center\" alignItems=\"center\" style={{minHeight: 200}}>\n            { loadChart() }\n          </Grid>\n        </Paper>\n        <DialogRadio\n            open={open}\n            options={lines}\n            title=\"Filtrar\"\n            textCancel=\"Cancelar\"\n            textConfirm=\"Ok\"\n            value={value._id}\n            onClose={onClose}\n        />\n        <Comments\n          idLine={comments.id}\n          open={comments.open}\n          onClose={() => setComments({ open: false, id: '' })}\n        />\n      </Grid>\n    );\n}\n\nconst mapStateToProps = state => ({\n  lines: state.device.lines,\n  errorToLoadLines: state.device.errorToLoadLines,\n  score: state.home.score,\n  isLoadingScore: state.home.isLoadingScore,\n  errorToLoadScore: state.home.errorToLoadScore\n})\n\nexport default connect(mapStateToProps, { requestLines, requestScore })(InformationLine)\n","import React, { useEffect } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport createStyle from \"../style\"\nimport createGlobalStyle from '../../../style/global'\nimport Card from \"./Card\"\nimport { connect } from \"react-redux\"\nimport {\n  requestTotalUsers,\n  requestTotalDevices,\n  requestTotalLines,\n} from \"../../../redux/home/actions\"\nimport InformationLine from './InformationLine'\nimport Auth from '../../auth/auth'\n\nfunction Dashboard(props) {\n  const classes = createStyle()\n  const globalClasses = createGlobalStyle()\n\n  useEffect(() => {\n    props.requestTotalUsers()\n    props.requestTotalDevices()\n    props.requestTotalLines()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Auth>\n      <Grid className={globalClasses.maxWidth}>\n        <Grid className={classes.contentCard} justify=\"space-between\" container>\n            <Card\n                buttonError={() => props.requestTotalDevices()}\n                error={props.errorLoadTotalDevices}\n                isLoading={props.isLoadingTotalDevices}\n                icon=\"location_on\"\n                title=\"Total de dispositivos\"\n                content={props.totalDevices}\n            />\n            <Card\n                buttonError={() => props.requestTotalLines()}\n                error={props.errorLoadTotalLines}\n                isLoading={props.isLoadingTotalLines}\n                styleIcon={{backgroundColor: \"rgb(251, 140, 0)\"}}\n                icon=\"directions\"\n                title=\"Total de linhas\"\n                content={props.totalLines}\n            />\n            <Card\n                buttonError={() => props.requestTotalUsers()}\n                error={props.errorLoadTotalUsers}\n                isLoading={props.isLoadingTotalUsers}\n                textColors=\"#FFF\"\n                styleIcon={{backgroundColor: \"#FFF\", color: '#000'}}\n                styleCard={{backgroundColor: '#3f51b5', color: '#FFF'}}\n                icon=\"people_outline\"\n                title=\"Total de usuários\"\n                content={props.totalUsers}\n            />\n        </Grid>\n        <InformationLine />\n      </Grid>\n    </Auth>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  isLoadingTotalUsers: state.home.isLoadingTotalUsers,\n  totalUsers: state.home.totalUsers,\n  errorLoadTotalUsers: state.home.errorLoadTotalUsers,\n  totalDevices: state.home.totalDevices,\n  isLoadingTotalDevices: state.home.isLoadingTotalDevices,\n  errorLoadTotalDevices: state.home.errorLoadTotalDevices,\n  totalLines: state.home.totalLines,\n  isLoadingTotalLines: state.home.isLoadingTotalLines,\n  errorLoadTotalLines: state.home.errorLoadTotalLines\n})\n\nexport default connect(\n  mapStateToProps,\n  { requestTotalUsers, requestTotalDevices, requestTotalLines }\n)(Dashboard)\n","import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport createStyle from '../../style/global'\nimport Dialog from '../../components/dialog'\nimport AppBar from '../../components/AppBar'\nimport CustomDialog from '../../components/CustomDialog'\nimport createStyleLocal from './style'\nimport { requestEmployeeToEnable, requestUser, logout } from '../../redux/home/actions'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport storage from '../../services/storage'\nimport clsx from 'clsx'\nimport { ROUTES } from '../../utils/constants'\nimport Employee from '../employess/employees'\nimport Account from '../account/account'\nimport History from '../history/history'\nimport Maps from '../maps/maps'\nimport Suggestion from '../suggestion/suggestion'\nimport Devices from '../devices/devices'\nimport Lines from '../lines/lines'\nimport News from '../news/news'\nimport Loading from '../../components/loading'\nimport Dashboard from './components/Dashboard'\nimport Auth from '../auth/auth'\n\nconst Home = props => {\n    const {\n        requestEmployeeToEnable,\n        usersNotAuthorized,\n        requestUser,\n        logout } = props\n    const classes = createStyle()\n    const classesLocal = createStyleLocal()\n    const [ open, setOpen ] = useState(false)\n    const [ openCustomDialog, setOpenCustomDialog ] = useState(false)\n    const [ redirect, setRedirect ] = useState(false)\n    const [ user, setUser ] = useState(null)\n    const [ openDrawer, onDrawer ] = useState(false)\n    const handleClose = () => setOpen(!open)\n    const handleCloseCustomDialog = () => setOpenCustomDialog(!openCustomDialog)\n    const handleLogout = () => {\n        logout()\n        handleClose(!open)\n        storage.removeUser()\n        setRedirect(true)\n    }\n\n    const handleUserToAprrove = user => {\n        setUser(user)\n        handleCloseCustomDialog()\n    }\n    useEffect(() => {\n        if (!storage.getUser()) {\n            setRedirect(true)\n        } else {\n            let show = true\n            const callback = () => {\n                if (show && props.location.pathname === ROUTES.HOME) {\n                    toast.error('Erro de comunicação com servidor, verique sua conexão')\n                }\n                show = false\n            }\n            requestEmployeeToEnable(callback)\n            requestUser(callback)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps \n    }, [ props.location ])\n\n    if (redirect) {\n        return <Redirect to={ROUTES.LOGIN}/>\n    } \n    return (\n        <Auth onlyToken>\n            <Grid className={classes.maxContainer} container item direction=\"column\" wrap=\"nowrap\" alignItems=\"center\">\n                <Loading />\n                <AppBar onDrawer={onDrawer} handleClose={handleClose} usersNotAuthorized={usersNotAuthorized} onSelectedUser={handleUserToAprrove} />\n                <Dialog\n                    transition=\"Slide\"\n                    title=\"Atenção\"\n                    open={open}\n                    onClose={handleClose}\n                    message=\"Deseja sair da aplicaçao?\"\n                    negativeButton=\"Não\"\n                    positiveButton=\"Sim\"\n                    negativeAction={handleClose}\n                    positiveAction={handleLogout}/>\n                <CustomDialog\n                    message=\"Deseja aprovar a entrada desse usuário no sistema?\"\n                    messageCheckBox=\"Aprovar usuário como admin?\"\n                    success={() => {\n                        setOpenCustomDialog(false)\n                        requestEmployeeToEnable()\n                        toast.success('Usuário aprovado com sucesso')\n                    }}\n                    error={() => {\n                        setOpenCustomDialog(false)\n                        toast.error('Falha ao aprovar usuário no sistema')\n                    }}\n                    user={user}\n                    open={openCustomDialog}\n                    negativeAction={handleCloseCustomDialog}\n                />\n\n                <Grid item container className={clsx(classesLocal.content, { [classesLocal.contentShift]: openDrawer })}>\n                    <Switch>\n                        <Route exact path={ROUTES.HOME} component={Dashboard} />\n                        <Route exact path={ROUTES.MAP} component={Maps} />\n                        <Route path={ROUTES.EMPLOYEES} component={Employee} />\n                        <Route path={ROUTES.ACCOUNT} component={Account} />\n                        <Route path={ROUTES.HISTORY} component={History} />\n                        <Route path={ROUTES.SUGGESTION} component={Suggestion} />\n                        <Route path={ROUTES.DEVICES} component={Devices} />\n                        <Route path={ROUTES.LINES} component={Lines} />\n                        <Route path={ROUTES.NEWS} component={News} />\n                        <Redirect from=\"*\" to={ROUTES.HOME} />\n                    </Switch>\n                </Grid>\n            </Grid>\n        </Auth>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        usersNotAuthorized: state.home.usersNotAuthorized,\n        user: state.home.user\n    }\n}\n\nexport default connect(mapStateToProps, { requestEmployeeToEnable, requestUser, logout })(Home)","import React from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport store from './redux/index'\nimport { Provider } from 'react-redux'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Login from './pages/login/login'\nimport Home from './pages/home/home'\nimport './services/mqtt'\n\nfunction App() {\n  toast.configure({ position: toast.POSITION.BOTTOM_RIGHT })\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/home\" component={Home} />\n          <Redirect from=\"*\" to='/login' />\n          <Redirect from=\"/\" to='/login' />\n        </Switch>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/connected_world.73ac2c2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/bus.f1a35d33.png\";"],"sourceRoot":""}