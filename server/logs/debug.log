{"timestamp":"2019-02-16T19:53:22.336Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-16T20:07:04.350Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-16T20:08:49.692Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-16T22:51:05.762Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-23T13:13:32.742Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-23T13:15:33.904Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-23T13:16:04.759Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-23T13:16:36.221Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-02-23T18:30:24.561Z","message":"error to send email Error: No recipients defined"}
{"timestamp":"2019-02-24T20:33:58.741Z","message":"error to request to recover password CastError: Cast to string failed for value \"{ email: 'diegoop.pa@hotmail.comm' }\" at path \"email\" for model \"User\""}
{"timestamp":"2019-02-24T20:36:42.055Z","message":"error to request to recover password TypeError: email.sender is not a function"}
{"timestamp":"2019-02-24T20:37:58.241Z","message":"email sent to diegoop.pa@hotmail.com with subject Troca de senha"}
{"timestamp":"2019-02-24T20:45:28.932Z","message":"email sent to diegoop.pa@hotmail.com with subject Troca de senha"}
{"timestamp":"2019-02-24T21:08:50.315Z","message":"email sent to diegoop.pa@hotmail.com with subject Troca de senha"}
{"timestamp":"2019-03-22T23:10:18.457Z","message":"error to send email Error: connect ETIMEDOUT 64.233.186.108:465"}
{"timestamp":"2019-03-22T23:14:31.375Z","message":"error to send email Error: connect ETIMEDOUT 64.233.186.108:465"}
{"timestamp":"2019-03-22T23:18:46.151Z","message":"error to send email Error: connect ETIMEDOUT 64.233.186.108:465"}
{"timestamp":"2019-07-11T22:15:29.349Z","message":"email sent to openheimerdiego@gmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T22:15:46.317Z","message":"email sent to openheimerdiego@gmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T22:35:44.042Z","message":"email sent to diegoop.pa@hotmail.com with subject Troca de senha"}
{"timestamp":"2019-07-11T22:36:38.429Z","message":"email sent to diegoop.pa@hotmail.com with subject Troca de senha"}
{"timestamp":"2019-07-11T22:52:50.079Z","message":"error to create employee ReferenceError: jwt is not defined"}
{"timestamp":"2019-07-11T22:53:33.715Z","message":"error to create employee ReferenceError: emailService is not defined"}
{"timestamp":"2019-07-11T22:53:59.578Z","message":"error to create employee ReferenceError: html is not defined"}
{"timestamp":"2019-07-11T22:54:43.053Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T22:57:31.599Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:00:17.395Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:01:20.729Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:03:06.196Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:10:58.148Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:12:24.093Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:14:13.704Z","message":"error to send email Error: No recipients defined"}
{"timestamp":"2019-07-11T23:15:08.776Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:16:35.341Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:17:14.193Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-11T23:20:01.434Z","message":"email sent to diegoop.pa@hotmail.com with subject Troca de senha"}
{"timestamp":"2019-07-11T23:20:43.784Z","message":"email sent to diegoop.pa@hotmail.com with subject Troca de senha"}
{"timestamp":"2019-07-11T23:31:47.893Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-13T00:35:34.480Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-14T00:27:27.422Z","message":"email sent to openheimerdiego@gmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-16T22:51:50.094Z","message":"fail to get employee by email"}
{"timestamp":"2019-07-16T22:53:35.418Z","message":"fail to get employee by email RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: ENABLED"}
{"timestamp":"2019-07-16T22:55:04.706Z","message":"fail to get employee by email RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: ENABLED"}
{"timestamp":"2019-07-17T00:07:26.136Z","message":"fail to edit employee MongoError: Performing an update on the path '_id' would modify the immutable field '_id'"}
{"timestamp":"2019-07-17T01:04:16.587Z","message":"error to get employees MongoError: Failed to parse: { find: \"employees\", filter: {}, projection: { password: 0 }, limit: \"2\", returnKey: false, showRecordId: false, $db: \"tcc\" }. 'limit' field must be numeric."}
{"timestamp":"2019-07-17T01:04:42.325Z","message":"error to get employees MongoError: Failed to parse: { find: \"employees\", filter: {}, projection: { password: 0 }, limit: \"2\", returnKey: false, showRecordId: false, $db: \"tcc\" }. 'limit' field must be numeric."}
{"timestamp":"2019-07-17T01:05:15.592Z","message":"error to get employees MongoError: Failed to parse: { find: \"employees\", filter: {}, projection: { password: 0 }, limit: \"2\", returnKey: false, showRecordId: false, $db: \"tcc\" }. 'limit' field must be numeric."}
{"timestamp":"2019-07-17T01:05:21.608Z","message":"error to get employees MongoError: Failed to parse: { find: \"employees\", filter: {}, projection: { password: 0 }, skip: 2, limit: \"2\", returnKey: false, showRecordId: false, $db: \"tcc\" }. 'limit' field must be numeric."}
{"timestamp":"2019-07-17T21:44:25.635Z","message":"error to get employees MongoError: $not needs a regex or a document"}
{"timestamp":"2019-07-20T01:04:47.789Z","message":"fail to remove employee MongoError: Cannot specify both new=true and remove=true; 'remove' always returns the deleted document"}
{"timestamp":"2019-07-20T12:21:52.588Z","message":"fail to edit employee TypeError: Translate is not a function"}
{"timestamp":"2019-07-20T14:36:13.902Z","message":"error to get histories CastError: Cast to date failed for value \"Invalid Date\" at path \"createdAt\" for model \"History\""}
{"timestamp":"2019-07-20T14:37:04.776Z","message":"error to get histories CastError: Cast to date failed for value \"Invalid Date\" at path \"createdAt\" for model \"History\""}
{"timestamp":"2019-07-20T14:40:58.317Z","message":"error to get histories CastError: Cast to date failed for value \"Invalid Date\" at path \"createdAt\" for model \"History\""}
{"timestamp":"2019-07-20T14:41:31.533Z","message":"error to get histories CastError: Cast to date failed for value \"Invalid Date\" at path \"createdAt\" for model \"History\""}
{"timestamp":"2019-07-20T14:41:42.743Z","message":"error to get histories CastError: Cast to date failed for value \"Invalid Date\" at path \"createdAt\" for model \"History\""}
{"timestamp":"2019-07-20T14:42:00.468Z","message":"error to get histories CastError: Cast to date failed for value \"Invalid Date\" at path \"createdAt\" for model \"History\""}
{"timestamp":"2019-07-20T14:42:11.440Z","message":"error to get histories CastError: Cast to date failed for value \"Invalid Date\" at path \"createdAt\" for model \"History\""}
{"timestamp":"2019-07-21T20:18:40.221Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"{suggestionId}\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T20:19:23.681Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"{suggestionId}\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T20:20:17.144Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"{suggestionId}\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T20:20:40.396Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"12\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T20:37:09.332Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"[object Object]\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T20:37:15.292Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"[object Object]\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T20:37:47.287Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"[object Object]\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T20:38:18.572Z","message":"fail to get suggestion by id CastError: Cast to ObjectId failed for value \"undefined\" at path \"_id\" for model \"Suggestion\""}
{"timestamp":"2019-07-21T22:20:42.076Z","message":"error to get histories TypeError: result.forEach is not a function"}
{"timestamp":"2019-07-28T15:14:02.306Z","message":"error to get employees CastError: Cast to Can't use $regex with Number. failed for value \"undefined\" at path \"undefined\" for model \"Lines\""}
{"timestamp":"2019-07-28T15:14:42.415Z","message":"error to get employees CastError: Cast to number failed for value \"/1/gi\" at path \"number\" for model \"Lines\""}
{"timestamp":"2019-07-28T15:16:07.685Z","message":"error to get employees CastError: Cast to number failed for value \"Diego\" at path \"number\" for model \"Lines\""}
{"timestamp":"2019-07-28T17:22:35.486Z","message":"Error to edit device ValidationError: line: Cast to ObjectID failed for value \"{ _id: 'string' }\" at path \"line\""}
{"timestamp":"2019-07-28T17:26:50.889Z","message":"Error to edit device MongoError: E11000 duplicate key error collection: tcc.devices index: uuid_1 dup key: { : \"1234\" }"}
{"timestamp":"2019-07-28T18:28:20.115Z","message":"fail to edit userTypeError: this.isModified is not a function"}
{"timestamp":"2019-07-28T18:29:33.326Z","message":"email sent to diegoop.pa@hotmail.com with subject Confirmação de conta"}
{"timestamp":"2019-07-28T18:30:05.072Z","message":"fail to enable account TypeError: this.isModified is not a function"}
{"timestamp":"2019-07-28T18:32:44.751Z","message":"fail to edit user[object Object]"}
{"timestamp":"2019-07-30T23:17:32.861Z","message":"Error to get line by id CastError: Cast to ObjectId failed for value \"associate\" at path \"_id\" for model \"Lines\""}
