swagger: '2.0'
info:
  description: Documentado api que ser√° usado no projeto tcc
  version: 1.0.0
  title: Locator API
  contact:
    email: diegoop.pa@hotmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:3001'
basePath: /
tags:
  - name: User
    description: Everything about users
  - name: Auth
    description: How you can authenticate at server
  - name: Employee
    description: Everything about employee
  - name: History
    description: Everything about histories
  - name: Suggestion
    description: Everything about suggestions
  - name: Line
    description: Everything about lines
  - name: Device
    description: Everything about device
schemes:
  - http
paths:
  /user:
    post:
      tags:
        - User
      summary: Register a new user
      description: register a user
      operationId: createUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be registered
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User registered
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '409':
          description: Conflict with user
          schema:
            $ref: '#/definitions/ApiResponseConflict'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
    put:
      tags:
        - User
      summary: edit a user
      description: edit a user
      operationId: editUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be edited
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User edited
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '409':
          description: Conflict with user
          schema:
            $ref: '#/definitions/ApiResponseConflict'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
            
  /user/count:
    get:
      tags:
        - User
      summary: get users amount
      description: get users amount
      operationId: getUserAmount
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Users amount
          schema:
            type: object
            properties:
              count:
                type: number
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /user/logged:
    get:
      tags:
        - User
      summary: get user logged
      description: get user logged
      operationId: getUserLogged
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: User logged
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
      
  /user/recover-password:
    post:
      tags:
        - User
      summary: End point to recover password to user
      description: Recover password
      operationId: requestToRecoverPassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            $ref: '#/definitions/SchemaRecoverPassword'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []
  /user/change-password:
    patch:
      tags:
        - User
      summary: End point to recover password to user
      description: Recover password
      operationId: recoverPassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            type: 'object'
            properties:
              password:
                type: 'string'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
      security:
      - ApiKey: []
  /employee:
    post:
      tags:
        - Employee
      summary: Register a new employee
      description: register a employee
      operationId: createEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Employee object that needs to be registered
          required: true
          schema:
            $ref: '#/definitions/Employee'
      responses:
        '200':
          description: Employee registered
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '409':
          description: Conflict with employee
          schema:
            $ref: '#/definitions/ApiResponseConflict'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
    get:
      tags:
        - Employee
      summary: End point to get employees
      description: get employees
      operationId: getActiveEmployees
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          type: number
          description: limit for employees
        - in: query
          name: page
          type: number
          description: page for employees
        - in: query
          name: field
          type: string
          description: get with filter
      responses:
        '200':
          description: success operation
          schema:
            type: object
            properties:
                limit:
                  type: number
                page:
                  type: number
                total:
                  type: number
                docs:
                  type: array
                  items:
                   $ref: '#/definitions/Employees'              
        '401':
          description: not authorized
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []

    delete:
      tags:
        - Employee
      summary: delete a employee
      description: delete a employee
      operationId: deleteEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Employee object that needs to be registered
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        '200':
          description: Employee registered
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '401':
          description: not authorized
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /employee/current:
    get:
      tags:
        - Employee
      summary: End point to get employees
      description: get employees
      operationId: getEmployeeByEmail
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: success operation
          schema:
            $ref: '#/definitions/Employees'
        '401':
          description: not authorized
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []

  /employee/recover-password:
    post:
      tags:
        - Employee
      summary: End point to render page to change password to employee
      description: Recover password
      operationId: requestToRecoverPasswordEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            $ref: '#/definitions/SchemaRecoverPassword'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []
       
  /employee/edit:
    patch:
      tags:
        - Employee
      summary: End point to edit employee
      description: edit employees
      operationId: editEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: object to edit employee
          required: true
          schema:
            type: 'object'
            properties:
              email:
                type: 'string'
              name:
                type: 'string'
              cpf:
                type: 'string'
              role:
                type: 'string'
                enum: ['ADMIN', 'COMMON']
              status:
                type: 'string'
                enum: ['ENABLED', 'PENDING', 'NOT_AUTHORIZED']
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '401':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []
  /employee/change-password:
    patch:
      tags:
        - Employee
      summary: End point to recover password to employee
      description: Recover password
      operationId: recoverPasswordEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            type: 'object'
            properties:
              password:
                type: 'string'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
      security:
        - ApiKey: []

  /employee/not_authorized:
    get:
      tags:
        - Employee
      summary: End point to get not authorzied employee
      description: Get employee
      operationId: getEmployeeNotAuthorized
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Employees'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
      security:
        - ApiKey: []
  /auth/user:
    post:
      tags:
      - Auth
      summary: authenticate on serve
      description: authenticate on serve
      consumes: 
      - application/json
      produces: 
      - application/json
      parameters: 
      - in: body
        name: body
        description: email and password to authenticate on serve
        required: true
        schema:
          $ref: '#/definitions/Auth'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: authorized
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
  /auth/employee:
    post:
      tags:
      - Auth
      summary: authenticate on serve
      description: authenticate on serve
      consumes: 
      - application/json
      produces: 
      - application/json
      parameters: 
      - in: body
        name: body
        description: email and password to authenticate on serve
        required: true
        schema:
          $ref: '#/definitions/Auth'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: authorized
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'

  /suggestion:
    get:
      tags:
        - Suggestion
      summary: get suggestions
      description: get suggestions
      operationId: getSuggestions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          type: number
          description: limit for employees
        - in: query
          name: page
          type: number
          description: page for employees
        - in: query
          name: field
          type: string
          description: get with filter
      responses:
        '200':
          description: Suggestions
          schema:
            type: object
            properties:
                limit:
                  type: number
                page:
                  type: number
                total:
                  type: number
                docs:
                  type: array
                  items:
                   $ref: '#/definitions/Suggestion'        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

    post:
      tags:
        - Suggestion
      summary: register suggestions
      description: register suggestions
      operationId: register suggestion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Suggestion
          schema:
            type: object
            properties:
              author:
                type: string
              title:
                type: string
              onModel:
                type: string
              messages:
                type: array
                items:
                  properties:
                    message:
                      type: string
                    by:
                      type: string
          description: register a new suggestion or question
      responses:
        '200':
          description: response to create suggestion
          schema:
            type: object
            properties:
                message:
                  type: string
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
  
    patch:
      tags:
        - Suggestion
      summary: add message to suggestion
      description: add suggestions
      operationId: addMessage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Suggestion
          schema:
            type: object
            properties:
              id:
                type: string
              data:
                type: object
                properties:
                  by:
                    type: string
                  message:
                    type: string
                  onModel:
                    type: string
                    enum: ["User", "Employee"]
          description: add a message to suggestion
      responses:
        '200':
          description: response to create suggestion
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

    delete:
      tags:
        - Suggestion
      summary: delete suggestion
      description: delete suggestions
      operationId: deleteSuggestion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Suggestion
          schema:
            type: object
            properties:
              id:
                type: string
          description: remove suggestion
      responses:
        '200':
          description: response to create suggestion
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /suggestion/{id}:
    get:
      tags:
        - Suggestion
      summary: get suggestion by id
      description: get suggestion by id
      operationId: getSuggestionById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: suggestion id
      responses:
        '200':
          description: suggestion
          schema:
            type: object
            properties:
              schema:
                $ref: '#/definitions/Suggestion'        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /suggestion/message:
    delete:
      tags:
        - Suggestion
      summary: remove message in suggestion by id
      description: remove message in suggestion by id
      operationId: removeMessageInSuggestionById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: id
          schema:
            type: object
            properties:
              suggestion:
                type: string
              message:
                type: string
          description: object with suggestion id and message id
      responses:
        '200':
          description: suggestion
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /history:
    get:
      tags:
        - History
      summary: get histories
      description: get histories
      operationId: getHistories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          type: number
          description: limit for employees
        - in: query
          name: page
          type: number
          description: page for employees
        - in: query
          name: field
          type: string
          description: get with filter
      responses:
        '200':
          description: Histories
          schema:
            type: object
            properties:
                limit:
                  type: number
                page:
                  type: number
                total:
                  type: number
                docs:
                  type: array
                  items:
                   $ref: '#/definitions/History'        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /line/{id}:
    delete:
      tags:
        - Line
      summary: remove a line
      description: remove a line
      operationId: removeLineById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: line id to be removed
          required: true
      responses:
        '200':
          description: line
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
  
    get:
      tags:
        - Line
      summary: get a line by id
      description: get a line
      operationId: getLineById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: line id
          required: true
      responses:
        '200':
          description: line
          schema:
            type: object
            properties:
              schema:
                $ref: '#/definitions/Line'        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /line:
    put:
      tags:
        - Line
      summary: edit a line
      description: edit a line
      operationId: editLineById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: line
          schema:
            $ref: '#/definitions/Line'
          description: line object
      responses:
        '200':
          description: line
          schema:
            type: object
            properties:
              message:
                type: string        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '409':
          description: conflict
          schema:
            $ref: '#/definitions/ApiResponseConflict'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

    post:
      tags:
        - Line
      summary: create a line
      description: create a line
      operationId: createLineById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: line
          schema:
            $ref: '#/definitions/Line'
          description: line object
      responses:
        '200':
          description: line
          schema:
            type: object
            properties:
              message:
                type: string        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '409':
          description: conflict
          schema:
            $ref: '#/definitions/ApiResponseConflict'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
  
    get:
      tags:
        - Line
      summary: get lines
      description: get lines
      operationId: getLinesById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          type: number
          description: limit for lines
        - in: query
          name: page
          type: number
          description: page for lines
        - in: query
          name: field
          type: string
          description: get with filter
      responses:
        '200':
            description: success operation
            schema:
              type: object
              properties:
                limit:
                  type: number
                page:
                  type: number
                total:
                  type: number
                docs:
                  type: array
                  items:
                    $ref: '#/definitions/Line'        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

  /line/associate:
    get:
      tags:
        - Line
      summary: get lines
      description: get lines
      operationId: get lines to associate with device
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
            description: success operation
            schema:
              type: object
              properties:
                _id:
                  type: string
                number:
                  type: number
                description:
                  type: string
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
      
  /device/{id}:
    delete:
      tags:
        - Device
      summary: remove a device
      description: remove a device
      operationId: removeDeviceById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: device id to be removed
          required: true
      responses:
        '200':
          description: device
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
  
    get:
      tags:
        - Device
      summary: get a device by id
      description: get a device
      operationId: getDeviceById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: device id
          required: true
      responses:
        '200':
          description: device
          schema:
            type: object
            properties:
              schema:
                $ref: '#/definitions/Device'        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
  
  /device:
    put:
      tags:
        - Device
      summary: edit a device
      description: edit a device
      operationId: editDevice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: device
          schema:
            $ref: '#/definitions/Device'
          description: device object
      responses:
        '200':
          description: device
          schema:
            type: object
            properties:
              message:
                type: string        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '409':
          description: conflict
          schema:
            $ref: '#/definitions/ApiResponseConflict'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

    post:
      tags:
        - Device
      summary: create a device
      description: create a device
      operationId: createDevice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: device
          schema:
            $ref: '#/definitions/Device'
          description: device object
      responses:
        '200':
          description: device
          schema:
            type: object
            properties:
              message:
                type: string        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '409':
          description: conflict
          schema:
            $ref: '#/definitions/ApiResponseConflict'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
  
    get:
      tags:
        - Device
      summary: get device
      description: get device
      operationId: getDevice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          type: number
          description: limit for device
        - in: query
          name: page
          type: number
          description: page for device
        - in: query
          name: field
          type: string
          description: get with filter
      responses:
        '200':
            description: success operation
            schema:
              type: object
              properties:
                limit:
                  type: number
                page:
                  type: number
                total:
                  type: number
                docs:
                  type: array
                  items:
                    $ref: '#/definitions/Line'        
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []

securityDefinitions:
  ApiKey:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string
      password:
        type: string
  Employee:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      cpf:
        type: string
  ApiResponseOk:
    type: object
    properties:
      message:
        type: string
        example: success operation
      status:
        type: integer
        example: 200
  ApiResponseConflict:
    type: object
    properties:
      message:
        type: string
        example: entity used
      status:
        type: integer
        example: 409
  ApiResponseBadRequest:
    type: object
    properties:
      message:
        type: string
        example: missing values or type values are incorrects
      status:
        type: integer
        example: 400
  SchemaRecoverPassword:
    type: object
    properties:
      email:
        type: string
  NotFound:
    type: object
    properties:
      message:
        type: string
        example: entity not found
      status:
        type: integer
        example: 404
  NotAuthorized:
    type: object
    properties:
      message:
        type: string
        example: not authorized
      status:
        type: integer
        example: 401
  UnknownServerError:
    type: object
    properties:
      message:
        type: string
        example: Unexpected error
      status:
        type: integer
        example: 500
  Auth:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  Employees:
    type: object
    properties:
      role:
        type: string
      status:
        type: string
      name:
        type: string
      email:
        type: string
      cpf:
        type: string
  History:
    type: object
    properties:
      _id:
        type: string
      email:
        type: string
      reason:
        type: string
      createdAt:
        type: string
  Suggestion:
    type: object
    properties:
      _id:
        type: string
      author:
        $ref: '#/definitions/User'
      title:
        type: string
      createdAt:
        type: string
      messages:
        type: array
        items:
          properties:
            message:
              type: string
            by:
              type: string
            onModel:
              type: string
  Line:
    type: object
    properties:
      _id:
        type: string
      number:
        type: number
      description:
        type: string
      routes:
        type: array
        items:
          type: object
          properties:
            route:
                type: string
      directions:
          type: object
      points:
        type: array
        items:
          properties:
            name:
              type: string
            longitude:
              type: number
            latitude:
              type: number

  Device:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      uuid:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      line:
        $ref: '#/definitions/Line'
