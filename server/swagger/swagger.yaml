swagger: '2.0'
info:
  description: Documentado api que ser√° usado no projeto tcc
  version: 1.0.0
  title: Locator API
  contact:
    email: diegoop.pa@hotmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:3001'
basePath: /
tags:
  - name: User
    description: Everything about users
  - name: Auth
    description: How you can authenticate at server
  - name: Employee
    description: Everything about employee
schemes:
  - http
paths:
  /user:
    post:
      tags:
        - User
      summary: Register a new user
      description: register a user
      operationId: createUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be registered
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User registered
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '409':
          description: Conflict with user
          schema:
            $ref: '#/definitions/ApiResponseConflictUser'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
  /user/count:
    get:
      tags:
        - User
      summary: get users amount
      description: get users amount
      operationId: getUserAmount
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Users amount
          schema:
            type: object
            properties:
              count:
                type: number
        '401':
          description: Not Authorzied
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
      - ApiKey: []
  /user/recover-password:
    post:
      tags:
        - User
      summary: End point to recover password to user
      description: Recover password
      operationId: requestToRecoverPassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            $ref: '#/definitions/SchemaRecoverPassword'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/UserNotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []
  /user/change-password:
    patch:
      tags:
        - User
      summary: End point to recover password to user
      description: Recover password
      operationId: recoverPassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            type: 'object'
            properties:
              password:
                type: 'string'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/UserNotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  

  /employee:
    post:
      tags:
        - Employee
      summary: Register a new employee
      description: register a employee
      operationId: createEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Employee object that needs to be registered
          required: true
          schema:
            $ref: '#/definitions/Employee'
      responses:
        '200':
          description: Employee registered
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '409':
          description: Conflict with employee
          schema:
            $ref: '#/definitions/ApiResponseConflictUser'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
    get:
      tags:
        - Employee
      summary: End point to get employees
      description: get employees
      operationId: getActiveEmployees
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          schema:
            type: number
          description: limit for employees
        - in: query
          name: page
          schema:
            type: number
          description: page for employees
      responses:
        '200':
          description: success operation
          schema:
            type: object
            properties:
                limit:
                  type: number
                page:
                  type: number
                total:
                  type: number
                docs:
                  type: array
                  items:
                   $ref: '#/definitions/Employees'              
        '401':
          description: not authorized
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []

  /employee/current:
    get:
      tags:
        - Employee
      summary: End point to get employees
      description: get employees
      operationId: getEmployeeByEmail
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: success operation
          schema:
            $ref: '#/definitions/Employees'
        '401':
          description: not authorized
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []

  /employee/recover-password:
    post:
      tags:
        - Employee
      summary: End point to render page to change password to employee
      description: Recover password
      operationId: requestToRecoverPassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            $ref: '#/definitions/SchemaRecoverPassword'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/UserNotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []
       
  /employee/edit:
    patch:
      tags:
        - Employee
      summary: End point to edit employee
      description: edit employees
      operationId: editEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: object to edit employee
          required: true
          schema:
            type: 'object'
            properties:
              email:
                type: 'string'
              name:
                type: 'string'
              cpf:
                type: 'string'
              role:
                type: 'string'
                enum: ['ADMIN', 'COMMON']
              status:
                type: 'string'
                enum: ['ENABLED', 'PENDING', 'NOT_AUTHORIZED']
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponseOk'
        '401':
          description: case user there is not
          schema:
            $ref: '#/definitions/NotAuthorized'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'
      security:
        - ApiKey: []
  /employee/change-password:
    patch:
      tags:
        - Employee
      summary: End point to recover password to employee
      description: Recover password
      operationId: recoverPassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: email to recover password
          required: true
          schema:
            type: 'object'
            properties:
              password:
                type: 'string'
      responses:
        '200':
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: password changed
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/UserNotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
      security:
        - ApiKey: []

  /employee/not_authorized:
    get:
      tags:
        - Employee
      summary: End point to get not authorzied employee
      description: Get employee
      operationId: getEmployeeNotAuthorized
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Employees'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
      security:
        - ApiKey: []
  /auth/user:
    post:
      tags:
      - Auth
      summary: authenticate on serve
      description: authenticate on serve
      consumes: 
      - application/json
      produces: 
      - application/json
      parameters: 
      - in: body
        name: body
        description: email and password to authenticate on serve
        required: true
        schema:
          $ref: '#/definitions/Auth'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: authorized
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/UserNotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
  /auth/employee:
    post:
      tags:
      - Auth
      summary: authenticate on serve
      description: authenticate on serve
      consumes: 
      - application/json
      produces: 
      - application/json
      parameters: 
      - in: body
        name: body
        description: email and password to authenticate on serve
        required: true
        schema:
          $ref: '#/definitions/Auth'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: authorized
              status:
                type: integer
                example: 200
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/ApiResponseBadRequest'
        '404':
          description: case user there is not
          schema:
            $ref: '#/definitions/UserNotFound'
        '500':
          description: unknown error
          schema:
            $ref: '#/definitions/UnknownServerError'  
securityDefinitions:
  ApiKey:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
  Employee:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      cpf:
        type: string
  ApiResponseOk:
    type: object
    properties:
      message:
        type: string
        example: success operation
      status:
        type: integer
        example: 200
  ApiResponseConflictUser:
    type: object
    properties:
      message:
        type: string
        example: user already registered
      status:
        type: integer
        example: 409
  ApiResponseBadRequest:
    type: object
    properties:
      message:
        type: string
        example: missing values or type values are incorrects
      status:
        type: integer
        example: 400
  SchemaRecoverPassword:
    type: object
    properties:
      email:
        type: string
  UserNotFound:
    type: object
    properties:
      message:
        type: string
        example: user not found
      status:
        type: integer
        example: 404
  NotAuthorized:
    type: object
    properties:
      message:
        type: string
        example: not authorized
      status:
        type: integer
        example: 401
  UnknownServerError:
    type: object
    properties:
      message:
        type: string
        example: Unexpected error
      status:
        type: integer
        example: 500
  Auth:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  Employees:
    type: object
    properties:
      role:
        type: string
      status:
        type: string
      name:
        type: string
      email:
        type: string
      cpf:
        type: string
components:
  schemas:
    mResponses:
      '400':
        description: bad request
        schema:
          $ref: '#/definitions/ApiResponseBadRequest'
      '404':
        description: case user there is not
        schema:
          $ref: '#/definitions/UserNotFound'
      '500':
        description: unknown error
        schema:
          $ref: '#/definitions/UnknownServerError'  
